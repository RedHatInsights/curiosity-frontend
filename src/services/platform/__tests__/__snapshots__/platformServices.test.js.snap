// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PlatformServices should export a specific  properties, methods and classes: properties 1`] = `
{
  "deleteExport": [Function],
  "getExistingExports": [Function],
  "getExistingExportsStatus": [Function],
  "getExport": [Function],
  "getUser": [Function],
  "getUserPermissions": [Function],
  "postExport": [Function],
}
`;

exports[`PlatformServices should return a failed getUser: failed authorized user 1`] = `
{
  "config": {
    "adapter": [Function],
    "allowAbsoluteUrls": true,
    "cacheResponse": false,
    "data": undefined,
    "env": {
      "Blob": [Function],
      "FormData": [Function],
    },
    "headers": {
      "Accept": "application/json, text/plain, */*",
    },
    "maxBodyLength": -1,
    "maxContentLength": -1,
    "method": "get",
    "schema": [
      [Function],
    ],
    "timeout": 60000,
    "transform": [
      [Function],
    ],
    "transformRequest": [
      [Function],
    ],
    "transformResponse": [
      [Function],
    ],
    "transitional": {
      "clarifyTimeoutError": false,
      "forcedJSONParsing": true,
      "silentJSONParsing": true,
    },
    "url": "/emulated",
    "validateStatus": [Function],
    "xsrfCookieName": "XSRF-TOKEN",
    "xsrfHeaderName": "X-XSRF-TOKEN",
  },
  "message": "{ getUser } = insights.chrome.auth, platformMethod is not a function",
  "status": 418,
}
`;

exports[`PlatformServices should return a failed getUserPermissions: failed user permissions 1`] = `
{
  "config": {
    "adapter": [Function],
    "allowAbsoluteUrls": true,
    "cacheResponse": false,
    "data": undefined,
    "env": {
      "Blob": [Function],
      "FormData": [Function],
    },
    "headers": {
      "Accept": "application/json, text/plain, */*",
    },
    "maxBodyLength": -1,
    "maxContentLength": -1,
    "method": "get",
    "schema": [
      [Function],
    ],
    "timeout": 60000,
    "transform": [
      [Function],
    ],
    "transformRequest": [
      [Function],
    ],
    "transformResponse": [
      [Function],
    ],
    "transitional": {
      "clarifyTimeoutError": false,
      "forcedJSONParsing": true,
      "silentJSONParsing": true,
    },
    "url": "/emulated",
    "validateStatus": [Function],
    "xsrfCookieName": "XSRF-TOKEN",
    "xsrfHeaderName": "X-XSRF-TOKEN",
  },
  "message": "{ getUserPermissions } = insights.chrome, platformMethod is not a function",
  "status": 418,
}
`;

exports[`PlatformServices should return a successful getUser with a specific response: specific success for authorized user 1`] = `
{
  "data": {
    "isAdmin": false,
    "isEntitled": false,
    "orgId": undefined,
  },
  "message": undefined,
  "status": 200,
  "statusText": "success, emulated",
}
`;

exports[`PlatformServices should return a successful getUser: success authorized user 1`] = `
{
  "data": {
    "isAdmin": false,
    "isEntitled": false,
    "orgId": undefined,
  },
  "message": undefined,
  "status": 200,
  "statusText": "success, emulated",
}
`;
