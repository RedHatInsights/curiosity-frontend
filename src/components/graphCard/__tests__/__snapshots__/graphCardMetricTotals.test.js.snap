// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GraphCardMetricTotals Component should handle multiple display states: error 1`] = `
<Flex
  className="curiosity-usage-graph__totals"
  data-test="graphMetricTotals-"
>
  <Flex
    alignSelf={
      {
        "default": "alignSelfStretch",
      }
    }
    direction={
      {
        "default": "column",
      }
    }
    flex={
      {
        "default": "flex_1",
      }
    }
  >
    <FlexItem
      className="curiosity-usage-graph__totals-column"
    >
      <Card
        className="curiosity-usage-graph__totals-column-card blur"
        data-test="graphDailyTotalCard"
      >
        <CardTitle>
          t(curiosity-graph.cardHeadingMetric, {"context":"dailyTotal"})
        </CardTitle>
        <MinHeight
          key="currentBody"
          minHeight={0}
          updateOnContent={false}
          updateOnResize={true}
        >
          <CardBody>
            <div />
          </CardBody>
        </MinHeight>
        <MinHeight
          key="currentFooter"
          minHeight={0}
          updateOnContent={false}
          updateOnResize={true}
        >
          <CardFooter>
            <div
              className="hidden"
            />
          </CardFooter>
        </MinHeight>
      </Card>
      <Card
        className="curiosity-usage-graph__totals-column-card blur"
        data-test="graphMonthlyTotalCard"
      >
        <CardTitle>
          t(curiosity-graph.cardHeadingMetric, {"context":"monthlyTotal"})
        </CardTitle>
        <MinHeight
          key="totalMonthlyBody"
          minHeight={0}
          updateOnContent={false}
          updateOnResize={true}
        >
          <CardBody>
            <div />
          </CardBody>
        </MinHeight>
        <MinHeight
          key="totalMonthlyFooter"
          minHeight={0}
          updateOnContent={false}
          updateOnResize={true}
        >
          <CardFooter>
            <div
              className="hidden"
            />
          </CardFooter>
        </MinHeight>
      </Card>
    </FlexItem>
  </Flex>
  <Flex
    alignSelf={
      {
        "default": "alignSelfStretch",
      }
    }
    direction={
      {
        "default": "column",
      }
    }
    flex={
      {
        "default": "flex_3",
      }
    }
  >
    <FlexItem
      className="curiosity-usage-graph__totals-graph-column"
    />
  </Flex>
</Flex>
`;

exports[`GraphCardMetricTotals Component should handle multiple display states: fulfilled 1`] = `
<Flex
  className="curiosity-usage-graph__totals"
  data-test="graphMetricTotals-"
>
  <Flex
    alignSelf={
      {
        "default": "alignSelfStretch",
      }
    }
    direction={
      {
        "default": "column",
      }
    }
    flex={
      {
        "default": "flex_1",
      }
    }
  >
    <FlexItem
      className="curiosity-usage-graph__totals-column"
    >
      <Card
        className="curiosity-usage-graph__totals-column-card "
        data-test="graphDailyTotalCard"
      >
        <CardTitle>
          t(curiosity-graph.cardHeadingMetric, {"context":"dailyTotal"})
        </CardTitle>
        <MinHeight
          key="currentBody"
          minHeight={0}
          updateOnContent={false}
          updateOnResize={true}
        >
          <CardBody>
            <div>
              t(curiosity-graph.cardBodyMetric, {"context":"total"}, [object Object])
            </div>
          </CardBody>
        </MinHeight>
        <MinHeight
          key="currentFooter"
          minHeight={0}
          updateOnContent={false}
          updateOnResize={true}
        >
          <CardFooter>
            <div
              className="hidden"
            />
          </CardFooter>
        </MinHeight>
      </Card>
      <Card
        className="curiosity-usage-graph__totals-column-card "
        data-test="graphMonthlyTotalCard"
      >
        <CardTitle>
          t(curiosity-graph.cardHeadingMetric, {"context":"monthlyTotal"})
        </CardTitle>
        <MinHeight
          key="totalMonthlyBody"
          minHeight={0}
          updateOnContent={false}
          updateOnResize={true}
        >
          <CardBody>
            <div>
              t(curiosity-graph.cardBodyMetric, {"context":"total"}, [object Object])
            </div>
          </CardBody>
        </MinHeight>
        <MinHeight
          key="totalMonthlyFooter"
          minHeight={0}
          updateOnContent={false}
          updateOnResize={true}
        >
          <CardFooter>
            <div
              className="hidden"
            />
          </CardFooter>
        </MinHeight>
      </Card>
    </FlexItem>
  </Flex>
  <Flex
    alignSelf={
      {
        "default": "alignSelfStretch",
      }
    }
    direction={
      {
        "default": "column",
      }
    }
    flex={
      {
        "default": "flex_3",
      }
    }
  >
    <FlexItem
      className="curiosity-usage-graph__totals-graph-column"
    />
  </Flex>
</Flex>
`;

exports[`GraphCardMetricTotals Component should handle multiple display states: pending 1`] = `
<Flex
  className="curiosity-usage-graph__totals"
  data-test="graphMetricTotals-"
>
  <Flex
    alignSelf={
      {
        "default": "alignSelfStretch",
      }
    }
    direction={
      {
        "default": "column",
      }
    }
    flex={
      {
        "default": "flex_1",
      }
    }
  >
    <FlexItem
      className="curiosity-usage-graph__totals-column"
    >
      <Card
        className="curiosity-usage-graph__totals-column-card "
        data-test="graphDailyTotalCard"
      >
        <CardTitle>
          t(curiosity-graph.cardHeadingMetric, {"context":"dailyTotal"})
        </CardTitle>
        <MinHeight
          key="currentBody"
          minHeight={0}
          updateOnContent={false}
          updateOnResize={true}
        >
          <CardBody>
            <div>
              <Loader
                skeletonProps={
                  {
                    "size": "lg",
                  }
                }
                tableProps={{}}
                variant="skeleton"
              />
            </div>
          </CardBody>
        </MinHeight>
        <MinHeight
          key="currentFooter"
          minHeight={0}
          updateOnContent={false}
          updateOnResize={true}
        >
          <CardFooter>
            <div
              className="hidden"
            />
          </CardFooter>
        </MinHeight>
      </Card>
      <Card
        className="curiosity-usage-graph__totals-column-card "
        data-test="graphMonthlyTotalCard"
      >
        <CardTitle>
          t(curiosity-graph.cardHeadingMetric, {"context":"monthlyTotal"})
        </CardTitle>
        <MinHeight
          key="totalMonthlyBody"
          minHeight={0}
          updateOnContent={false}
          updateOnResize={true}
        >
          <CardBody>
            <div>
              <Loader
                skeletonProps={
                  {
                    "size": "lg",
                  }
                }
                tableProps={{}}
                variant="skeleton"
              />
            </div>
          </CardBody>
        </MinHeight>
        <MinHeight
          key="totalMonthlyFooter"
          minHeight={0}
          updateOnContent={false}
          updateOnResize={true}
        >
          <CardFooter>
            <div
              className="hidden"
            />
          </CardFooter>
        </MinHeight>
      </Card>
    </FlexItem>
  </Flex>
  <Flex
    alignSelf={
      {
        "default": "alignSelfStretch",
      }
    }
    direction={
      {
        "default": "column",
      }
    }
    flex={
      {
        "default": "flex_3",
      }
    }
  >
    <FlexItem
      className="curiosity-usage-graph__totals-graph-column"
    />
  </Flex>
</Flex>
`;

exports[`GraphCardMetricTotals Component should render a basic component: basic 1`] = `
<Flex
  className="curiosity-usage-graph__totals"
  data-test="graphMetricTotals-"
>
  <Flex
    alignSelf={
      {
        "default": "alignSelfStretch",
      }
    }
    direction={
      {
        "default": "column",
      }
    }
    flex={
      {
        "default": "flex_1",
      }
    }
  >
    <FlexItem
      className="curiosity-usage-graph__totals-column"
    >
      <Card
        className="curiosity-usage-graph__totals-column-card "
        data-test="graphDailyTotalCard"
      >
        <CardTitle>
          t(curiosity-graph.cardHeadingMetric, {"context":"dailyTotal"})
        </CardTitle>
        <MinHeight
          key="currentBody"
          minHeight={0}
          updateOnContent={false}
          updateOnResize={true}
        >
          <CardBody>
            <div>
              t(curiosity-graph.cardBodyMetric, {"context":"total"}, [object Object])
            </div>
          </CardBody>
        </MinHeight>
        <MinHeight
          key="currentFooter"
          minHeight={0}
          updateOnContent={false}
          updateOnResize={true}
        >
          <CardFooter>
            <div
              className="hidden"
            />
          </CardFooter>
        </MinHeight>
      </Card>
      <Card
        className="curiosity-usage-graph__totals-column-card "
        data-test="graphMonthlyTotalCard"
      >
        <CardTitle>
          t(curiosity-graph.cardHeadingMetric, {"context":"monthlyTotal"})
        </CardTitle>
        <MinHeight
          key="totalMonthlyBody"
          minHeight={0}
          updateOnContent={false}
          updateOnResize={true}
        >
          <CardBody>
            <div>
              t(curiosity-graph.cardBodyMetric, {"context":"total"}, [object Object])
            </div>
          </CardBody>
        </MinHeight>
        <MinHeight
          key="totalMonthlyFooter"
          minHeight={0}
          updateOnContent={false}
          updateOnResize={true}
        >
          <CardFooter>
            <div
              className="hidden"
            />
          </CardFooter>
        </MinHeight>
      </Card>
    </FlexItem>
  </Flex>
  <Flex
    alignSelf={
      {
        "default": "alignSelfStretch",
      }
    }
    direction={
      {
        "default": "column",
      }
    }
    flex={
      {
        "default": "flex_3",
      }
    }
  >
    <FlexItem
      className="curiosity-usage-graph__totals-graph-column"
    />
  </Flex>
</Flex>
`;
