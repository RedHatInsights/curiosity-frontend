// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GraphCardContext should aggregate metric API calls: aggregated calls, error 1`] = `
{
  "data": {
    "dolor_mock-product-id": {
      "data": [
        "dolor",
      ],
      "id": "dolor_mock-product-id",
    },
    "ipsum_mock-product-id": {
      "data": [
        "ipsum",
      ],
      "id": "ipsum_mock-product-id",
    },
  },
  "dataSets": [
    {
      "data": [
        "ipsum",
      ],
      "id": "ipsum_mock-product-id",
    },
    {
      "data": [
        "dolor",
      ],
      "id": "dolor_mock-product-id",
    },
  ],
  "error": true,
  "fulfilled": undefined,
  "pending": undefined,
}
`;

exports[`GraphCardContext should aggregate metric API calls: aggregated calls, fulfilled 1`] = `
{
  "data": {
    "dolor_mock-product-id": {
      "data": [
        "dolor",
      ],
      "id": "dolor_mock-product-id",
    },
    "ipsum_mock-product-id": {
      "data": [
        "ipsum",
      ],
      "id": "ipsum_mock-product-id",
    },
  },
  "dataSets": [
    {
      "data": [
        "ipsum",
      ],
      "id": "ipsum_mock-product-id",
    },
    {
      "data": [
        "dolor",
      ],
      "id": "dolor_mock-product-id",
    },
  ],
  "error": undefined,
  "fulfilled": true,
  "pending": undefined,
}
`;

exports[`GraphCardContext should aggregate metric API calls: aggregated calls, pending 1`] = `
{
  "data": {
    "dolor_mock-product-id": {
      "data": [
        "dolor",
      ],
      "id": "dolor_mock-product-id",
    },
    "ipsum_mock-product-id": {
      "data": [
        "ipsum",
      ],
      "id": "ipsum_mock-product-id",
    },
  },
  "dataSets": [
    {
      "data": [
        "ipsum",
      ],
      "id": "ipsum_mock-product-id",
    },
    {
      "data": [
        "dolor",
      ],
      "id": "dolor_mock-product-id",
    },
  ],
  "error": undefined,
  "fulfilled": undefined,
  "pending": true,
}
`;

exports[`GraphCardContext should return specific properties: specific properties 1`] = `
{
  "DEFAULT_CONTEXT": [
    {
      "settings": {
        "isStandalone": false,
        "metric": undefined,
        "metrics": [],
      },
    },
    [Function],
  ],
  "GraphCardContext": {
    "$$typeof": Symbol(react.context),
    "Consumer": {
      "$$typeof": Symbol(react.context),
      "_calculateChangedBits": null,
      "_context": [Circular],
    },
    "Provider": {
      "$$typeof": Symbol(react.provider),
      "_context": [Circular],
    },
    "_calculateChangedBits": null,
    "_currentRenderer": null,
    "_currentRenderer2": null,
    "_currentValue": [
      {
        "settings": {
          "isStandalone": false,
          "metric": undefined,
          "metrics": [],
        },
      },
      [Function],
    ],
    "_currentValue2": [
      {
        "settings": {
          "isStandalone": false,
          "metric": undefined,
          "metrics": [],
        },
      },
      [Function],
    ],
    "_threadCount": 0,
  },
  "useGetMetrics": [Function],
  "useGraphCardContext": [Function],
  "useMetricsSelector": [Function],
}
`;
