// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GraphCardChartLegend Component should handle a click event: click event, dispatch 1`] = `
[
  [
    {
      "id": "mock-view-id-loremIpsum_mock-product-id",
      "type": "SET_GRAPH_LEGEND",
      "value": "mock boolean, loremIpsum_mock-product-id",
    },
  ],
]
`;

exports[`GraphCardChartLegend Component should handle a click event: keyPress event, dispatch 1`] = `
[
  [
    {
      "id": "mock-view-id-loremIpsum_mock-product-id",
      "type": "SET_GRAPH_LEGEND",
      "value": "mock boolean, loremIpsum_mock-product-id",
    },
  ],
]
`;

exports[`GraphCardChartLegend Component should handle variations in data when returning legend items: legend items, data, threshold 1`] = `
<Fragment>
  <Tooltip
    content={
      <p>
        t(curiosity-graph.legendTooltip_loremIpsum, {"product":"mock-product-label","context":"mock-product-id"}, [object Object])
      </p>
    }
    distance={5}
    enableFlip={true}
    key="curiosity-tooltip-loremIpsum_mock-product-id"
    position="top"
  >
    <Button
      className="curiosity-usage-graph__legend-item"
      component="a"
      icon={
        <ChartIcon
          fill="#000000"
          size="sm"
          style={
            {
              "visibility": "visible",
            }
          }
          symbol="square"
          title={null}
        />
      }
      isDisabled={false}
      key="curiosity-button-loremIpsum_mock-product-id"
      onClick={[Function]}
      onKeyPress={[Function]}
      tabIndex={0}
      variant="link"
    >
      t([curiosity-graph.label_loremIpsum,curiosity-graph.label_no], {"product":"mock-product-label","context":"mock-product-id"})
    </Button>
  </Tooltip>
  <Tooltip
    content={
      <p>
        t(curiosity-graph.legendTooltip_threshold_dolorSit, {"product":"mock-product-label","context":"mock-product-id"}, [object Object])
      </p>
    }
    distance={5}
    enableFlip={true}
    key="curiosity-tooltip-threshold_dolorSit_mock-product-id"
    position="top"
  >
    <Button
      className="curiosity-usage-graph__legend-item"
      component="a"
      icon={
        <ChartIcon
          fill="#ff0000"
          size="sm"
          style={
            {
              "visibility": "visible",
            }
          }
          symbol="dash"
          title={null}
        />
      }
      isDisabled={false}
      key="curiosity-button-threshold_dolorSit_mock-product-id"
      onClick={[Function]}
      onKeyPress={[Function]}
      tabIndex={0}
      variant="link"
    >
      t([curiosity-graph.label_threshold_dolorSit,curiosity-graph.label_no], {"product":"mock-product-label","context":"mock-product-id"})
    </Button>
  </Tooltip>
</Fragment>
`;

exports[`GraphCardChartLegend Component should render a basic component: basic 1`] = `
<Fragment>
  <Tooltip
    content={
      <p>
        t(curiosity-graph.legendTooltip_loremIpsum, {"product":"mock-product-label","context":"mock-product-id"}, [object Object])
      </p>
    }
    distance={5}
    enableFlip={true}
    key="curiosity-tooltip-loremIpsum_mock-product-id"
    position="top"
  >
    <Button
      className="curiosity-usage-graph__legend-item"
      component="a"
      icon={
        <ChartIcon
          fill="#000000"
          size="sm"
          style={
            {
              "visibility": "visible",
            }
          }
          symbol="square"
          title={null}
        />
      }
      isDisabled={false}
      key="curiosity-button-loremIpsum_mock-product-id"
      onClick={[Function]}
      onKeyPress={[Function]}
      tabIndex={0}
      variant="link"
    >
      t([curiosity-graph.label_loremIpsum,curiosity-graph.label_no], {"product":"mock-product-label","context":"mock-product-id"})
    </Button>
  </Tooltip>
</Fragment>
`;

exports[`GraphCardChartLegend Component should render basic data: data 1`] = `
<Fragment>
  <Tooltip
    content={
      <p>
        t(curiosity-graph.legendTooltip_loremIpsum, {"product":"mock-product-label","context":"mock-product-id"}, [object Object])
      </p>
    }
    distance={5}
    enableFlip={true}
    key="curiosity-tooltip-loremIpsum_mock-product-id"
    position="top"
  >
    <Button
      className="curiosity-usage-graph__legend-item"
      component="a"
      icon={
        <ChartIcon
          fill="#000000"
          size="sm"
          style={
            {
              "visibility": "visible",
            }
          }
          symbol="square"
          title={null}
        />
      }
      isDisabled={false}
      key="curiosity-button-loremIpsum_mock-product-id"
      onClick={[Function]}
      onKeyPress={[Function]}
      tabIndex={0}
      variant="link"
    >
      t([curiosity-graph.label_loremIpsum,curiosity-graph.label_no], {"product":"mock-product-label","context":"mock-product-id"})
    </Button>
  </Tooltip>
  <Tooltip
    content={
      <p>
        t(curiosity-graph.legendTooltip_ametConsectetur, {"product":"mock-product-label","context":"mock-product-id"}, [object Object])
      </p>
    }
    distance={5}
    enableFlip={true}
    key="curiosity-tooltip-ametConsectetur_mock-product-id"
    position="top"
  >
    <Button
      className="curiosity-usage-graph__legend-item"
      component="a"
      icon={
        <ChartIcon
          fill={null}
          size="sm"
          symbol="eyeSlash"
          title={null}
        />
      }
      isDisabled={true}
      key="curiosity-button-ametConsectetur_mock-product-id"
      onClick={[Function]}
      onKeyPress={[Function]}
      tabIndex={0}
      variant="link"
    >
      t([curiosity-graph.label_ametConsectetur,curiosity-graph.label_no], {"product":"mock-product-label","context":"mock-product-id"})
    </Button>
  </Tooltip>
  <Tooltip
    content={
      <p>
        t(curiosity-graph.legendTooltip_threshold_dolorSit, {"product":"mock-product-label","context":"mock-product-id"}, [object Object])
      </p>
    }
    distance={5}
    enableFlip={true}
    key="curiosity-tooltip-threshold_dolorSit_mock-product-id"
    position="top"
  >
    <Button
      className="curiosity-usage-graph__legend-item"
      component="a"
      icon={
        <ChartIcon
          fill="#ff0000"
          size="sm"
          style={
            {
              "visibility": "visible",
            }
          }
          symbol="dash"
          title={null}
        />
      }
      isDisabled={false}
      key="curiosity-button-threshold_dolorSit_mock-product-id"
      onClick={[Function]}
      onKeyPress={[Function]}
      tabIndex={0}
      variant="link"
    >
      t([curiosity-graph.label_threshold_dolorSit,curiosity-graph.label_no], {"product":"mock-product-label","context":"mock-product-id"})
    </Button>
  </Tooltip>
  <Tooltip
    content={
      <p>
        t(curiosity-graph.legendTooltip_threshold_nonCursus, {"product":"mock-product-label","context":"mock-product-id"}, [object Object])
      </p>
    }
    distance={5}
    enableFlip={true}
    key="curiosity-tooltip-threshold_nonCursus_mock-product-id"
    position="top"
  >
    <Button
      className="curiosity-usage-graph__legend-item"
      component="a"
      icon={
        <ChartIcon
          fill="#ff0000"
          size="sm"
          style={
            {
              "visibility": "visible",
            }
          }
          symbol="dash"
          title={null}
        />
      }
      isDisabled={false}
      key="curiosity-button-threshold_nonCursus_mock-product-id"
      onClick={[Function]}
      onKeyPress={[Function]}
      tabIndex={0}
      variant="link"
    >
      t([curiosity-graph.label_threshold_nonCursus,curiosity-graph.label_no], {"product":"mock-product-label","context":"mock-product-id"})
    </Button>
  </Tooltip>
</Fragment>
`;
