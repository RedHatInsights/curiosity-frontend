// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GraphCardChartLegend Component should handle a click event: click event, dispatch 1`] = `
[
  [
    {
      "id": "mock-view-id-loremIpsum_mock-product-id",
      "type": "SET_GRAPH_LEGEND",
      "value": "mock toggle boolean, loremIpsum_mock-product-id",
    },
  ],
]
`;

exports[`GraphCardChartLegend Component should handle a click event: keyPress event, dispatch 1`] = `
[
  [
    {
      "id": "mock-view-id-loremIpsum_mock-product-id",
      "type": "SET_GRAPH_LEGEND",
      "value": "mock toggle boolean, loremIpsum_mock-product-id",
    },
  ],
  [
    {
      "id": "mock-view-id-loremIpsum_mock-product-id",
      "type": "SET_GRAPH_LEGEND",
      "value": "mock toggle boolean, loremIpsum_mock-product-id",
    },
  ],
]
`;

exports[`GraphCardChartLegend Component should handle inverted legend behavior when using an external filter: attempt legend invert, hide items 1`] = `
[
  [
    "loremIpsum_mock-product-id",
  ],
  [
    "sitAmet_mock-product-id",
  ],
]
`;

exports[`GraphCardChartLegend Component should handle variations in data when returning legend items: legend items, data, threshold 1`] = `
[
  "curiosity-chartarea__icon curiosity-chartarea__icon-square",
  "curiosity-chartarea__icon curiosity-chartarea__icon-square",
  "curiosity-chartarea__icon curiosity-chartarea__icon-eyeSlash",
  "curiosity-chartarea__icon curiosity-chartarea__icon-dash",
]
`;

exports[`GraphCardChartLegend Component should render a basic component: basic 1`] = `
<React.Fragment>
  <Tooltip
    content={
      <p>
        t(curiosity-graph.legendTooltip_loremIpsum, {"product":"mock-product-label","context":"mock-product-id"}, [object Object])
      </p>
    }
    enableFlip={true}
    position="top"
  >
    <span
      className="pf-c-button pf-m-link curiosity-graph__legend-item-wrapper curiosity-usage-graph__legend-item-wrapper"
    >
      <Button
        className="curiosity-graph__legend-item curiosity-usage-graph__legend-item"
        component="a"
        icon={
          <ChartIcon
            fill="#000000"
            style={
              {
                "visibility": "visible",
              }
            }
            symbol="square"
          />
        }
        isDisabled={false}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
        variant="link"
      >
        t([curiosity-graph.label_loremIpsum,curiosity-graph.label_no_loremIpsum], {"product":"mock-product-label","context":"mock-product-id"})
      </Button>
    </span>
  </Tooltip>
</React.Fragment>
`;

exports[`GraphCardChartLegend Component should render basic data: data 1`] = `
<React.Fragment>
  <Tooltip
    content={
      <p>
        t(curiosity-graph.legendTooltip_loremIpsum, {"product":"mock-product-label","context":"mock-product-id"}, [object Object])
      </p>
    }
    enableFlip={true}
    position="top"
  >
    <span
      className="pf-c-button pf-m-link curiosity-graph__legend-item-wrapper curiosity-usage-graph__legend-item-wrapper"
    >
      <Button
        className="curiosity-graph__legend-item curiosity-usage-graph__legend-item"
        component="a"
        icon={
          <ChartIcon
            fill="#000000"
            style={
              {
                "visibility": "visible",
              }
            }
            symbol="square"
          />
        }
        isDisabled={false}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
        variant="link"
      >
        t([curiosity-graph.label_loremIpsum,curiosity-graph.label_no_loremIpsum], {"product":"mock-product-label","context":"mock-product-id"})
      </Button>
    </span>
  </Tooltip>
  <Tooltip
    content={
      <p>
        t(curiosity-graph.legendTooltip_ametConsectetur, {"product":"mock-product-label","context":"mock-product-id"}, [object Object])
      </p>
    }
    enableFlip={true}
    position="top"
  >
    <span
      className="pf-c-button pf-m-link curiosity-graph__legend-item-wrapper curiosity-usage-graph__legend-item-wrapper"
    >
      <Button
        className="curiosity-graph__legend-item curiosity-usage-graph__legend-item"
        component="a"
        icon={
          <ChartIcon
            symbol="eyeSlash"
          />
        }
        isDisabled={true}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
        variant="link"
      >
        t([curiosity-graph.label_ametConsectetur,curiosity-graph.label_no_ametConsectetur], {"product":"mock-product-label","context":"mock-product-id"})
      </Button>
    </span>
  </Tooltip>
  <Tooltip
    content={
      <p>
        t(curiosity-graph.legendTooltip_threshold_dolorSit, {"product":"mock-product-label","context":"mock-product-id"}, [object Object])
      </p>
    }
    enableFlip={true}
    position="top"
  >
    <span
      className="pf-c-button pf-m-link curiosity-graph__legend-item-wrapper curiosity-usage-graph__legend-item-wrapper"
    >
      <Button
        className="curiosity-graph__legend-item curiosity-usage-graph__legend-item"
        component="a"
        icon={
          <ChartIcon
            fill="#ff0000"
            style={
              {
                "visibility": "visible",
              }
            }
            symbol="dash"
          />
        }
        isDisabled={false}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
        variant="link"
      >
        t([curiosity-graph.label_threshold_dolorSit,curiosity-graph.label_no_threshold_dolorSit], {"product":"mock-product-label","context":"mock-product-id"})
      </Button>
    </span>
  </Tooltip>
  <Tooltip
    content={
      <p>
        t(curiosity-graph.legendTooltip_threshold_nonCursus, {"product":"mock-product-label","context":"mock-product-id"}, [object Object])
      </p>
    }
    enableFlip={true}
    position="top"
  >
    <span
      className="pf-c-button pf-m-link curiosity-graph__legend-item-wrapper curiosity-usage-graph__legend-item-wrapper"
    >
      <Button
        className="curiosity-graph__legend-item curiosity-usage-graph__legend-item"
        component="a"
        icon={
          <ChartIcon
            fill="#ff0000"
            style={
              {
                "visibility": "visible",
              }
            }
            symbol="dash"
          />
        }
        isDisabled={false}
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={0}
        variant="link"
      >
        t([curiosity-graph.label_threshold_nonCursus,curiosity-graph.label_no_threshold_nonCursus], {"product":"mock-product-label","context":"mock-product-id"})
      </Button>
    </span>
  </Tooltip>
</React.Fragment>
`;
