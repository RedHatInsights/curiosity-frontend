// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GraphCardChartLegend Component should handle a click event: click event post 1`] = `
<Button
  className="curiosity-usage-graph__legend-item"
  component="a"
  icon={
    <ChartIcon
      fill="#000000"
      size="sm"
      style={
        Object {
          "visibility": "visible",
        }
      }
      symbol="square"
      title={null}
    />
  }
  isDisabled={false}
  key="curiosity-button-loremIpsum"
  onClick={[Function]}
  onKeyPress={[Function]}
  tabIndex={0}
  variant="link"
>
  t(curiosity-graph.loremIpsumLabel,curiosity-graph.noLabel, {"product":"test","context":"test"})
</Button>
`;

exports[`GraphCardChartLegend Component should handle a click event: click event pre 1`] = `
<Button
  className="curiosity-usage-graph__legend-item"
  component="a"
  icon={
    <ChartIcon
      fill="#000000"
      size="sm"
      style={
        Object {
          "visibility": "visible",
        }
      }
      symbol="square"
      title={null}
    />
  }
  isDisabled={false}
  key="curiosity-button-loremIpsum"
  onClick={[Function]}
  onKeyPress={[Function]}
  tabIndex={0}
  variant="link"
>
  t(curiosity-graph.loremIpsumLabel,curiosity-graph.noLabel, {"product":"test","context":"test"})
</Button>
`;

exports[`GraphCardChartLegend Component should handle a click event: click event update 1`] = `
<Button
  className="curiosity-usage-graph__legend-item"
  component="a"
  icon={
    <ChartIcon
      fill={null}
      size="sm"
      symbol="eyeSlash"
      title={null}
    />
  }
  isDisabled={false}
  key="curiosity-button-loremIpsum"
  onClick={[Function]}
  onKeyPress={[Function]}
  tabIndex={0}
  variant="link"
>
  t(curiosity-graph.loremIpsumLabel,curiosity-graph.noLabel, {"product":"test","context":"test"})
</Button>
`;

exports[`GraphCardChartLegend Component should handle variations in data when returning legend items: legend item, MISSING tooltip content 1`] = `
<Button
  className="curiosity-usage-graph__legend-item"
  component="a"
  icon={
    <ChartIcon
      fill="#000000"
      size="sm"
      style={
        Object {
          "visibility": "visible",
        }
      }
      symbol="square"
      title={null}
    />
  }
  isDisabled={false}
  onClick={[Function]}
  onKeyPress={[Function]}
  tabIndex={0}
  variant="link"
>
  lorem ipsum
</Button>
`;

exports[`GraphCardChartLegend Component should handle variations in data when returning legend items: legend item, WITH tooltip content 1`] = `
<Tooltip
  content={
    <p>
      dolor sit
    </p>
  }
  distance={5}
  enableFlip={true}
  position="top"
>
  <Button
    className="curiosity-usage-graph__legend-item"
    component="a"
    icon={
      <ChartIcon
        fill="#000000"
        size="sm"
        style={
          Object {
            "visibility": "visible",
          }
        }
        symbol="square"
        title={null}
      />
    }
    isDisabled={false}
    onClick={[Function]}
    onKeyPress={[Function]}
    tabIndex={0}
    variant="link"
  >
    lorem ipsum
  </Button>
</Tooltip>
`;

exports[`GraphCardChartLegend Component should handle variations in data when returning legend items: legend item, disabled 1`] = `
<Button
  className="curiosity-usage-graph__legend-item"
  component="a"
  icon={
    <ChartIcon
      fill={null}
      size="sm"
      symbol="eyeSlash"
      title={null}
    />
  }
  isDisabled={true}
  onClick={[Function]}
  onKeyPress={[Function]}
  tabIndex={0}
  variant="link"
>
  lorem ipsum
</Button>
`;

exports[`GraphCardChartLegend Component should render a basic component: basic 1`] = `
<Fragment>
  <Tooltip
    content={
      <p>
        t(curiosity-graph.loremIpsumLegendTooltip, {"product":"","context":""})
      </p>
    }
    distance={5}
    enableFlip={true}
    key="curiosity-tooltip-loremIpsum"
    position="top"
  >
    <Button
      className="curiosity-usage-graph__legend-item"
      component="a"
      icon={
        <ChartIcon
          fill="#000000"
          size="sm"
          style={
            Object {
              "visibility": "visible",
            }
          }
          symbol="square"
          title={null}
        />
      }
      isDisabled={false}
      key="curiosity-button-loremIpsum"
      onClick={[Function]}
      onKeyPress={[Function]}
      tabIndex={0}
      variant="link"
    >
      t(curiosity-graph.loremIpsumLabel,curiosity-graph.noLabel, {"product":"","context":""})
    </Button>
  </Tooltip>
</Fragment>
`;

exports[`GraphCardChartLegend Component should render basic data: data 1`] = `
<Fragment>
  <Tooltip
    content={
      <p>
        t(curiosity-graph.loremIpsumLegendTooltip, {"product":"test","context":"test"})
      </p>
    }
    distance={5}
    enableFlip={true}
    key="curiosity-tooltip-loremIpsum"
    position="top"
  >
    <Button
      className="curiosity-usage-graph__legend-item"
      component="a"
      icon={
        <ChartIcon
          fill="#000000"
          size="sm"
          style={
            Object {
              "visibility": "visible",
            }
          }
          symbol="square"
          title={null}
        />
      }
      isDisabled={false}
      key="curiosity-button-loremIpsum"
      onClick={[Function]}
      onKeyPress={[Function]}
      tabIndex={0}
      variant="link"
    >
      t(curiosity-graph.loremIpsumLabel,curiosity-graph.noLabel, {"product":"test","context":"test"})
    </Button>
  </Tooltip>
  <Tooltip
    content={
      <p>
        t(curiosity-graph.ametConsecteturLegendTooltip, {"product":"test","context":"test"})
      </p>
    }
    distance={5}
    enableFlip={true}
    key="curiosity-tooltip-ametConsectetur"
    position="top"
  >
    <Button
      className="curiosity-usage-graph__legend-item"
      component="a"
      icon={
        <ChartIcon
          fill={null}
          size="sm"
          symbol="eyeSlash"
          title={null}
        />
      }
      isDisabled={true}
      key="curiosity-button-ametConsectetur"
      onClick={[Function]}
      onKeyPress={[Function]}
      tabIndex={0}
      variant="link"
    >
      t(curiosity-graph.ametConsecteturLabel,curiosity-graph.noLabel, {"product":"test","context":"test"})
    </Button>
  </Tooltip>
  <Tooltip
    content={
      <p>
        t(curiosity-graph.legendTooltip_threshold, {"product":"test","context":"dolorSit_test"})
      </p>
    }
    distance={5}
    enableFlip={true}
    key="curiosity-tooltip-dolorSit"
    position="top"
  >
    <Button
      className="curiosity-usage-graph__legend-item"
      component="a"
      icon={
        <ChartIcon
          fill="#ff0000"
          size="sm"
          style={
            Object {
              "visibility": "visible",
            }
          }
          symbol="dash"
          title={null}
        />
      }
      isDisabled={false}
      key="curiosity-button-dolorSit"
      onClick={[Function]}
      onKeyPress={[Function]}
      tabIndex={0}
      variant="link"
    >
      t(curiosity-graph.label_threshold, {"product":"test","context":"dolorSit_test"})
    </Button>
  </Tooltip>
  <Tooltip
    content={
      <p>
        t(curiosity-graph.legendTooltip_threshold, {"product":"test","context":"nonCursus_test"})
      </p>
    }
    distance={5}
    enableFlip={true}
    key="curiosity-tooltip-nonCursus"
    position="top"
  >
    <Button
      className="curiosity-usage-graph__legend-item"
      component="a"
      icon={
        <ChartIcon
          fill="#ff0000"
          size="sm"
          style={
            Object {
              "visibility": "visible",
            }
          }
          symbol="dash"
          title={null}
        />
      }
      isDisabled={false}
      key="curiosity-button-nonCursus"
      onClick={[Function]}
      onKeyPress={[Function]}
      tabIndex={0}
      variant="link"
    >
      t(curiosity-graph.label_threshold, {"product":"test","context":"nonCursus_test"})
    </Button>
  </Tooltip>
</Fragment>
`;
