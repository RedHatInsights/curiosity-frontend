// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChartArea Component should allow tick formatting: x tick format 1`] = `
<div
  class="uxui-curiosity__modal uxui-curiosity__modal--loading"
  id="curiosity-chartarea"
>
  <div
    class="pf-c-chart"
    style="height:100%;width:100%;user-select:none;pointer-events:none;touch-action:none;position:relative"
  >
    <svg
      height="300"
      role="img"
      style="pointer-events:all;width:100%;height:auto"
      viewBox="0 0 0 300"
      width="0"
    >
      <g
        role="presentation"
      >
        <line
          role="presentation"
          shape-rendering="auto"
          style="stroke:#d2d2d2;fill:transparent;stroke-width:1;stroke-linecap:round;stroke-linejoin:round"
          vector-effect="non-scaling-stroke"
          x1="50"
          x2="-50"
          y1="225"
          y2="225"
        />
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:transparent;size:5px;stroke-linecap:round;stroke-linejoin:round;stroke-width:1"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="50"
            y1="225"
            y2="230"
          />
          <text
            direction="inherit"
            dx="0"
            dy="11.969999999999999"
            id="chart-axis-0-tickLabels-0"
            x="50"
            y="240"
          >
            <tspan
              dx="0"
              style="font-family:var(--pf-chart-global--FontFamily);font-size:14px;letter-spacing:var(--pf-chart-global--letter-spacing);padding:10px;stroke:transparent;fill:#4f5255"
              text-anchor="middle"
              x="50"
            >
              1 ipsum
            </tspan>
          </text>
        </g>
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:transparent;size:5px;stroke-linecap:round;stroke-linejoin:round;stroke-width:1"
            vector-effect="non-scaling-stroke"
            x1="-50"
            x2="-50"
            y1="225"
            y2="230"
          />
          <text
            direction="inherit"
            dx="0"
            dy="11.969999999999999"
            id="chart-axis-0-tickLabels-1"
            x="-50"
            y="240"
          >
            <tspan
              dx="0"
              style="font-family:var(--pf-chart-global--FontFamily);font-size:14px;letter-spacing:var(--pf-chart-global--letter-spacing);padding:10px;stroke:transparent;fill:#4f5255"
              text-anchor="middle"
              x="-50"
            >
              2 ipsum
            </tspan>
          </text>
        </g>
      </g>
      <g
        role="presentation"
      >
        <line
          role="presentation"
          shape-rendering="auto"
          style="stroke:#d2d2d2;fill:transparent;stroke-width:1;stroke-linecap:round;stroke-linejoin:round"
          vector-effect="non-scaling-stroke"
          x1="50"
          x2="50"
          y1="50"
          y2="225"
        />
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:none;pointer-events:painted;stroke-linecap:round;stroke-linejoin:round"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="-50"
            y1="190"
            y2="190"
          />
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:transparent;size:5px;stroke-linecap:round;stroke-linejoin:round;stroke-width:1"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="45"
            y1="190"
            y2="190"
          />
          <text
            direction="inherit"
            dx="0"
            dy="4.97"
            id="chart-axis-1-tickLabels-0"
            x="35"
            y="190"
          >
            <tspan
              dx="0"
              style="font-family:var(--pf-chart-global--FontFamily);font-size:14px;letter-spacing:var(--pf-chart-global--letter-spacing);padding:10px;stroke:transparent;fill:#4f5255"
              text-anchor="end"
              x="35"
            >
              2 dolor sit
            </tspan>
          </text>
        </g>
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:none;pointer-events:painted;stroke-linecap:round;stroke-linejoin:round"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="-50"
            y1="155"
            y2="155"
          />
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:transparent;size:5px;stroke-linecap:round;stroke-linejoin:round;stroke-width:1"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="45"
            y1="155"
            y2="155"
          />
          <text
            direction="inherit"
            dx="0"
            dy="4.97"
            id="chart-axis-1-tickLabels-1"
            x="35"
            y="155"
          >
            <tspan
              dx="0"
              style="font-family:var(--pf-chart-global--FontFamily);font-size:14px;letter-spacing:var(--pf-chart-global--letter-spacing);padding:10px;stroke:transparent;fill:#4f5255"
              text-anchor="end"
              x="35"
            >
              4 dolor sit
            </tspan>
          </text>
        </g>
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:none;pointer-events:painted;stroke-linecap:round;stroke-linejoin:round"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="-50"
            y1="120"
            y2="120"
          />
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:transparent;size:5px;stroke-linecap:round;stroke-linejoin:round;stroke-width:1"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="45"
            y1="120"
            y2="120"
          />
          <text
            direction="inherit"
            dx="0"
            dy="4.97"
            id="chart-axis-1-tickLabels-2"
            x="35"
            y="120"
          >
            <tspan
              dx="0"
              style="font-family:var(--pf-chart-global--FontFamily);font-size:14px;letter-spacing:var(--pf-chart-global--letter-spacing);padding:10px;stroke:transparent;fill:#4f5255"
              text-anchor="end"
              x="35"
            >
              6 dolor sit
            </tspan>
          </text>
        </g>
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:none;pointer-events:painted;stroke-linecap:round;stroke-linejoin:round"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="-50"
            y1="85"
            y2="85"
          />
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:transparent;size:5px;stroke-linecap:round;stroke-linejoin:round;stroke-width:1"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="45"
            y1="85"
            y2="85"
          />
          <text
            direction="inherit"
            dx="0"
            dy="4.97"
            id="chart-axis-1-tickLabels-3"
            x="35"
            y="85"
          >
            <tspan
              dx="0"
              style="font-family:var(--pf-chart-global--FontFamily);font-size:14px;letter-spacing:var(--pf-chart-global--letter-spacing);padding:10px;stroke:transparent;fill:#4f5255"
              text-anchor="end"
              x="35"
            >
              8 dolor sit
            </tspan>
          </text>
        </g>
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:none;pointer-events:painted;stroke-linecap:round;stroke-linejoin:round"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="-50"
            y1="50"
            y2="50"
          />
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:transparent;size:5px;stroke-linecap:round;stroke-linejoin:round;stroke-width:1"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="45"
            y1="50"
            y2="50"
          />
          <text
            direction="inherit"
            dx="0"
            dy="4.97"
            id="chart-axis-1-tickLabels-4"
            x="35"
            y="50"
          >
            <tspan
              dx="0"
              style="font-family:var(--pf-chart-global--FontFamily);font-size:14px;letter-spacing:var(--pf-chart-global--letter-spacing);padding:10px;stroke:transparent;fill:#4f5255"
              text-anchor="end"
              x="35"
            >
              10 dolor sit
            </tspan>
          </text>
        </g>
      </g>
      <g>
        <g
          clip-path="url(#victory-clip-4)"
          style="height:100%;width:100%;user-select:none"
        >
          <defs>
            <clipPath
              id="victory-clip-4"
            >
              <rect
                height="175"
                vector-effect="non-scaling-stroke"
                width="100"
                x="-50"
                y="50"
              />
            </clipPath>
          </defs>
          <path
            d="M50,225L-50,207.5L-50,225L50,225Z"
            role="presentation"
            shape-rendering="auto"
            style="fill:#06c;stroke-width:1;fill-opacity:0.3;stroke:#06c"
          />
        </g>
      </g>
    </svg>
    <div
      style="z-index:99;position:absolute;top:0;left:0;width:100%;height:auto"
    >
      <svg
        height="300"
        style="overflow:visible;width:100%;height:auto"
        viewBox="0 0 0 300"
        width="0"
      />
    </div>
  </div>
</div>
`;

exports[`ChartArea Component should allow tick formatting: y tick format 1`] = `
<div
  class="uxui-curiosity__modal uxui-curiosity__modal--loading"
  id="curiosity-chartarea"
>
  <div
    class="pf-c-chart"
    style="height:100%;width:100%;user-select:none;pointer-events:none;touch-action:none;position:relative"
  >
    <svg
      height="300"
      role="img"
      style="pointer-events:all;width:100%;height:auto"
      viewBox="0 0 0 300"
      width="0"
    >
      <g
        role="presentation"
      >
        <line
          role="presentation"
          shape-rendering="auto"
          style="stroke:#d2d2d2;fill:transparent;stroke-width:1;stroke-linecap:round;stroke-linejoin:round"
          vector-effect="non-scaling-stroke"
          x1="50"
          x2="-50"
          y1="225"
          y2="225"
        />
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:transparent;size:5px;stroke-linecap:round;stroke-linejoin:round;stroke-width:1"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="50"
            y1="225"
            y2="230"
          />
          <text
            direction="inherit"
            dx="0"
            dy="11.969999999999999"
            id="chart-axis-0-tickLabels-0"
            x="50"
            y="240"
          >
            <tspan
              dx="0"
              style="font-family:var(--pf-chart-global--FontFamily);font-size:14px;letter-spacing:var(--pf-chart-global--letter-spacing);padding:10px;stroke:transparent;fill:#4f5255"
              text-anchor="middle"
              x="50"
            >
              2 x axis label
            </tspan>
          </text>
        </g>
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:transparent;size:5px;stroke-linecap:round;stroke-linejoin:round;stroke-width:1"
            vector-effect="non-scaling-stroke"
            x1="-50"
            x2="-50"
            y1="225"
            y2="230"
          />
          <text
            direction="inherit"
            dx="0"
            dy="11.969999999999999"
            id="chart-axis-0-tickLabels-1"
            x="-50"
            y="240"
          >
            <tspan
              dx="0"
              style="font-family:var(--pf-chart-global--FontFamily);font-size:14px;letter-spacing:var(--pf-chart-global--letter-spacing);padding:10px;stroke:transparent;fill:#4f5255"
              text-anchor="middle"
              x="-50"
            >
              2
            </tspan>
          </text>
        </g>
      </g>
      <g
        role="presentation"
      >
        <line
          role="presentation"
          shape-rendering="auto"
          style="stroke:#d2d2d2;fill:transparent;stroke-width:1;stroke-linecap:round;stroke-linejoin:round"
          vector-effect="non-scaling-stroke"
          x1="50"
          x2="50"
          y1="50"
          y2="225"
        />
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:none;pointer-events:painted;stroke-linecap:round;stroke-linejoin:round"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="-50"
            y1="190"
            y2="190"
          />
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:transparent;size:5px;stroke-linecap:round;stroke-linejoin:round;stroke-width:1"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="45"
            y1="190"
            y2="190"
          />
          <text
            direction="inherit"
            dx="0"
            dy="4.97"
            id="chart-axis-1-tickLabels-0"
            x="35"
            y="190"
          >
            <tspan
              dx="0"
              style="font-family:var(--pf-chart-global--FontFamily);font-size:14px;letter-spacing:var(--pf-chart-global--letter-spacing);padding:10px;stroke:transparent;fill:#4f5255"
              text-anchor="end"
              x="35"
            >
              2 dolor sit
            </tspan>
          </text>
        </g>
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:none;pointer-events:painted;stroke-linecap:round;stroke-linejoin:round"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="-50"
            y1="155"
            y2="155"
          />
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:transparent;size:5px;stroke-linecap:round;stroke-linejoin:round;stroke-width:1"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="45"
            y1="155"
            y2="155"
          />
          <text
            direction="inherit"
            dx="0"
            dy="4.97"
            id="chart-axis-1-tickLabels-1"
            x="35"
            y="155"
          >
            <tspan
              dx="0"
              style="font-family:var(--pf-chart-global--FontFamily);font-size:14px;letter-spacing:var(--pf-chart-global--letter-spacing);padding:10px;stroke:transparent;fill:#4f5255"
              text-anchor="end"
              x="35"
            >
              4 dolor sit
            </tspan>
          </text>
        </g>
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:none;pointer-events:painted;stroke-linecap:round;stroke-linejoin:round"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="-50"
            y1="120"
            y2="120"
          />
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:transparent;size:5px;stroke-linecap:round;stroke-linejoin:round;stroke-width:1"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="45"
            y1="120"
            y2="120"
          />
          <text
            direction="inherit"
            dx="0"
            dy="4.97"
            id="chart-axis-1-tickLabels-2"
            x="35"
            y="120"
          >
            <tspan
              dx="0"
              style="font-family:var(--pf-chart-global--FontFamily);font-size:14px;letter-spacing:var(--pf-chart-global--letter-spacing);padding:10px;stroke:transparent;fill:#4f5255"
              text-anchor="end"
              x="35"
            >
              6 dolor sit
            </tspan>
          </text>
        </g>
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:none;pointer-events:painted;stroke-linecap:round;stroke-linejoin:round"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="-50"
            y1="85"
            y2="85"
          />
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:transparent;size:5px;stroke-linecap:round;stroke-linejoin:round;stroke-width:1"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="45"
            y1="85"
            y2="85"
          />
          <text
            direction="inherit"
            dx="0"
            dy="4.97"
            id="chart-axis-1-tickLabels-3"
            x="35"
            y="85"
          >
            <tspan
              dx="0"
              style="font-family:var(--pf-chart-global--FontFamily);font-size:14px;letter-spacing:var(--pf-chart-global--letter-spacing);padding:10px;stroke:transparent;fill:#4f5255"
              text-anchor="end"
              x="35"
            >
              8 dolor sit
            </tspan>
          </text>
        </g>
        <g
          role="presentation"
        >
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:none;pointer-events:painted;stroke-linecap:round;stroke-linejoin:round"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="-50"
            y1="50"
            y2="50"
          />
          <line
            role="presentation"
            shape-rendering="auto"
            style="stroke:#d2d2d2;fill:transparent;size:5px;stroke-linecap:round;stroke-linejoin:round;stroke-width:1"
            vector-effect="non-scaling-stroke"
            x1="50"
            x2="45"
            y1="50"
            y2="50"
          />
          <text
            direction="inherit"
            dx="0"
            dy="4.97"
            id="chart-axis-1-tickLabels-4"
            x="35"
            y="50"
          >
            <tspan
              dx="0"
              style="font-family:var(--pf-chart-global--FontFamily);font-size:14px;letter-spacing:var(--pf-chart-global--letter-spacing);padding:10px;stroke:transparent;fill:#4f5255"
              text-anchor="end"
              x="35"
            >
              10 dolor sit
            </tspan>
          </text>
        </g>
      </g>
      <g>
        <g
          clip-path="url(#victory-clip-2)"
          style="height:100%;width:100%;user-select:none"
        >
          <defs>
            <clipPath
              id="victory-clip-2"
            >
              <rect
                height="175"
                vector-effect="non-scaling-stroke"
                width="100"
                x="-50"
                y="50"
              />
            </clipPath>
          </defs>
          <path
            d="M50,225L-50,207.5L-50,225L50,225Z"
            role="presentation"
            shape-rendering="auto"
            style="fill:#06c;stroke-width:1;fill-opacity:0.3;stroke:#06c"
          />
        </g>
      </g>
    </svg>
    <div
      style="z-index:99;position:absolute;top:0;left:0;width:100%;height:auto"
    >
      <svg
        height="300"
        style="overflow:visible;width:100%;height:auto"
        viewBox="0 0 0 300"
        width="0"
      />
    </div>
  </div>
</div>
`;

exports[`ChartArea Component should handle custom chart legends: hide state 1`] = `
Object {
  "loremGraph": true,
}
`;

exports[`ChartArea Component should handle custom chart legends: isToggled state 1`] = `
Object {
  "returnedToggleValue": true,
  "state": Object {
    "loremGraph": true,
  },
}
`;

exports[`ChartArea Component should handle custom chart legends: renderLegend: should return a custom legend 1`] = `
Object {
  "chart": Object {
    "hide": [Function],
    "isToggled": [Function],
    "revert": [Function],
    "toggle": [Function],
  },
  "datum": Object {
    "dataSets": Array [
      Object {
        "data": Array [
          Object {
            "x": 1,
            "xAxisLabel": "1 x axis label",
            "y": 0,
          },
        ],
        "id": "loremGraph",
        "interpolation": "natural",
        "isStacked": true,
      },
      Object {
        "data": Array [
          Object {
            "x": 1,
            "xAxisLabel": "1 x axis label",
            "y": 10,
          },
        ],
        "id": "ipsumGraph",
        "isThreshold": true,
      },
    ],
  },
}
`;

exports[`ChartArea Component should handle custom chart legends: revert state 1`] = `Object {}`;

exports[`ChartArea Component should handle custom chart legends: toggle state 1`] = `
Object {
  "loremGraph": false,
}
`;

exports[`ChartArea Component should handle custom chart tooltips: componentTooltip 1`] = `
<ContextProvider
  value={
    Object {
      "portalDeregister": [Function],
      "portalRegister": [Function],
      "portalUpdate": [Function],
    }
  }
>
  <div
    className="VictoryContainer"
    style={
      Object {
        "height": "auto",
        "pointerEvents": "none",
        "position": "relative",
        "touchAction": "none",
        "width": "100%",
      }
    }
  >
    <svg
      role="img"
      style={
        Object {
          "height": "auto",
          "pointerEvents": "all",
          "width": "100%",
        }
      }
      viewBox="0 0 undefined undefined"
    />
    <div
      style={
        Object {
          "height": "auto",
          "left": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
          "zIndex": 99,
        }
      }
    >
      <Portal
        style={
          Object {
            "height": "auto",
            "overflow": "visible",
            "width": "100%",
          }
        }
        viewBox="0 0 undefined undefined"
      />
    </div>
  </div>
</ContextProvider>
`;

exports[`ChartArea Component should handle custom chart tooltips: custom tooltip, post-props chart 1`] = `
<div
  className="uxui-curiosity__modal uxui-curiosity__modal--loading"
  id="curiosity-chartarea"
>
  <Chart
    animate={
      Object {
        "duration": 0,
      }
    }
    containerComponent={
      <VictoryVoronoiCursorContainer
        activateData={true}
        activateLabels={true}
        className="VictoryContainer"
        cursorComponent={
          <LineSegment
            lineComponent={<Line />}
            role="presentation"
            shapeRendering="auto"
          />
        }
        cursorDimension="x"
        cursorLabelComponent={
          <VictoryLabel
            capHeight={0.71}
            direction="inherit"
            lineHeight={1}
            textComponent={<Text />}
            tspanComponent={<TSpan />}
          />
        }
        cursorLabelOffset={
          Object {
            "x": 5,
            "y": -10,
          }
        }
        labelComponent={<FlyoutComponent />}
        labels={[Function]}
        portalComponent={<Portal />}
        portalZIndex={99}
        responsive={true}
        voronoiPadding={60}
      />
    }
    domain={
      Object {
        "y": Array [
          0,
          20,
        ],
      }
    }
    padding={
      Object {
        "bottom": 75,
        "left": 50,
        "right": 50,
        "top": 50,
      }
    }
    themeColor="blue"
    width={0}
  >
    <ChartAxis
      animate={false}
      fixLabelOverlap={false}
      tickFormat={[Function]}
      tickValues={
        Array [
          1,
        ]
      }
    />
    <ChartAxis
      animate={false}
      dependentAxis={true}
      showGrid={true}
    />
    <ChartThreshold
      animate={false}
      data={
        Array [
          Object {
            "x": 1,
            "xAxisLabel": "1 x axis label",
            "y": 10,
          },
        ]
      }
      interpolation="step"
      key="generatedid-"
      name="chartArea-1-threshold"
      style={
        Object {
          "data": Object {},
        }
      }
    />
    <ChartStack>
      <ChartArea
        animate={false}
        data={
          Array [
            Object {
              "x": 1,
              "xAxisLabel": "1 x axis label",
              "y": 0,
            },
          ]
        }
        interpolation="natural"
        key="generatedid-"
        name="chartArea-0-area"
        style={
          Object {
            "data": Object {},
          }
        }
      />
    </ChartStack>
  </Chart>
</div>
`;

exports[`ChartArea Component should handle custom chart tooltips: getTooltipData:after function 1`] = `
Array [
  Object {
    "itemsByKey": Object {
      "ipsumGraph": Object {
        "color": "",
        "data": Object {
          "x": 1,
          "xAxisLabel": "1 x axis label",
          "y": 10,
        },
      },
      "loremGraph": Object {
        "color": "",
        "data": Object {
          "x": 1,
          "xAxisLabel": "1 x axis label",
          "y": 0,
        },
      },
    },
    "tooltip": "lorem ipsum dolor...",
    "x": 1,
    "y": null,
  },
]
`;

exports[`ChartArea Component should handle custom chart tooltips: getTooltipData:after node 1`] = `
Array [
  Object {
    "itemsByKey": Object {
      "ipsumGraph": Object {
        "color": "",
        "data": Object {
          "x": 1,
          "xAxisLabel": "1 x axis label",
          "y": 10,
        },
      },
      "loremGraph": Object {
        "color": "",
        "data": Object {
          "x": 1,
          "xAxisLabel": "1 x axis label",
          "y": 0,
        },
      },
    },
    "tooltip": <div
      id="custom-tooltip"
    >
      Object {
        "dataSets": Array [
          Object {
            "data": Array [
              Object {
                "x": 1,
                "xAxisLabel": "1 x axis label",
                "y": 0,
              },
            ],
            "id": "loremGraph",
            "interpolation": "natural",
            "isStacked": true,
          },
          Object {
            "data": Array [
              Object {
                "x": 1,
                "xAxisLabel": "1 x axis label",
                "y": 10,
              },
            ],
            "id": "ipsumGraph",
            "isThreshold": true,
          },
        ],
        "index": 0,
        "itemsByKey": Object {
          "ipsumGraph": Object {
            "color": "",
            "data": Object {
              "x": 1,
              "xAxisLabel": "1 x axis label",
              "y": 10,
            },
          },
          "loremGraph": Object {
            "color": "",
            "data": Object {
              "x": 1,
              "xAxisLabel": "1 x axis label",
              "y": 0,
            },
          },
        },
        "x": 1,
        "y": 0,
      }
    </div>,
    "x": 1,
    "y": null,
  },
]
`;

exports[`ChartArea Component should handle custom chart tooltips: getTooltipData:before 1`] = `Array []`;

exports[`ChartArea Component should handle custom chart tooltips: renderTooltip: should return a custom tooltip 1`] = `
<VictoryVoronoiCursorContainer
  activateData={true}
  activateLabels={true}
  className="VictoryContainer"
  cursorComponent={
    <LineSegment
      lineComponent={<Line />}
      role="presentation"
      shapeRendering="auto"
    />
  }
  cursorDimension="x"
  cursorLabelComponent={
    <VictoryLabel
      capHeight={0.71}
      direction="inherit"
      lineHeight={1}
      textComponent={<Text />}
      tspanComponent={<TSpan />}
    />
  }
  cursorLabelOffset={
    Object {
      "x": 5,
      "y": -10,
    }
  }
  labelComponent={<FlyoutComponent />}
  labels={[Function]}
  portalComponent={<Portal />}
  portalZIndex={99}
  responsive={true}
  voronoiPadding={60}
/>
`;

exports[`ChartArea Component should handle render displays for both data and threshold: threshold 1`] = `
<div
  className="uxui-curiosity__modal uxui-curiosity__modal--loading"
  id="curiosity-chartarea"
>
  <Chart
    animate={
      Object {
        "duration": 0,
      }
    }
    domain={
      Object {
        "y": Array [
          0,
          20,
        ],
      }
    }
    padding={
      Object {
        "bottom": 75,
        "left": 50,
        "right": 50,
        "top": 50,
      }
    }
    themeColor="blue"
    width={0}
  >
    <ChartAxis
      animate={false}
      fixLabelOverlap={false}
      tickFormat={[Function]}
      tickValues={
        Array [
          1,
          2,
        ]
      }
    />
    <ChartAxis
      animate={false}
      dependentAxis={true}
      showGrid={true}
    />
    <ChartThreshold
      animate={false}
      data={
        Array [
          Object {
            "x": 1,
            "xAxisLabel": "1 x axis label",
            "y": 10,
          },
          Object {
            "x": 2,
            "xAxisLabel": "2 x axis label",
            "y": 10,
          },
        ]
      }
      interpolation="step"
      key="generatedid-"
      name="chartArea-1-threshold"
      style={
        Object {
          "data": Object {},
        }
      }
    />
    <ChartStack>
      <ChartArea
        animate={false}
        data={
          Array [
            Object {
              "x": 1,
              "xAxisLabel": "1 x axis label",
              "y": 0,
            },
            Object {
              "x": 2,
              "xAxisLabel": "2 x axis label",
              "y": 1,
            },
          ]
        }
        interpolation="monotoneX"
        key="generatedid-"
        name="chartArea-0-area"
        style={
          Object {
            "data": Object {},
          }
        }
      />
    </ChartStack>
  </Chart>
</div>
`;

exports[`ChartArea Component should handle variation in passed properties with specific methods: getChartDomain: domain 1`] = `
Object {
  "x": Array [
    0,
    100,
  ],
  "y": Array [
    0,
    20,
  ],
}
`;

exports[`ChartArea Component should handle variation in passed properties with specific methods: getChartDomain: isXAxisTicks true 1`] = `
Object {
  "chartDomain": Object {
    "domain": Object {
      "y": Array [
        0,
        20,
      ],
    },
  },
  "maxY": 10,
}
`;

exports[`ChartArea Component should handle variation in passed properties with specific methods: getChartDomain: isYAxisTicks true 1`] = `
Object {
  "chartDomain": Object {
    "domain": Object {
      "x": Array [
        0,
        1,
      ],
      "y": Array [
        0,
        20,
      ],
    },
  },
  "maxY": 10,
}
`;

exports[`ChartArea Component should handle variation in passed properties with specific methods: getChartTicks 1`] = `
Object {
  "isXAxisTicks": true,
  "xAxisProps": Object {
    "fixLabelOverlap": true,
    "tickFormat": [Function],
    "tickValues": Array [
      1,
    ],
  },
  "yAxisProps": Object {
    "dependentAxis": true,
    "showGrid": true,
    "tickFormat": [Function],
  },
}
`;

exports[`ChartArea Component should handle variation in passed properties with specific methods: setChartTicks 1`] = `
Object {
  "xAxisTickFormat": [Function],
  "xAxisTickValues": Array [
    1,
  ],
  "yAxisTickFormat": [Function],
}
`;

exports[`ChartArea Component should handle variation in passed properties with specific methods: setChartTicks: xAxisLabelUseDataSet 1`] = `
Object {
  "xAxisTickFormat": [Function],
  "xAxisTickValues": Array [
    2,
  ],
  "yAxisTickFormat": [Function],
}
`;

exports[`ChartArea Component should handle variation in passed properties with specific methods: variation 1`] = `
<div
  className="uxui-curiosity__modal uxui-curiosity__modal--loading"
  id="curiosity-chartarea"
>
  <Chart
    animate={
      Object {
        "duration": 0,
      }
    }
    domain={
      Object {
        "y": Array [
          0,
          20,
        ],
      }
    }
    padding={
      Object {
        "bottom": 75,
        "left": 50,
        "right": 50,
        "top": 50,
      }
    }
    themeColor="blue"
    width={0}
  >
    <ChartAxis
      animate={false}
      fixLabelOverlap={false}
      tickFormat={[Function]}
      tickValues={
        Array [
          1,
        ]
      }
    />
    <ChartAxis
      animate={false}
      dependentAxis={true}
      showGrid={true}
    />
    <ChartThreshold
      animate={false}
      data={
        Array [
          Object {
            "x": 1,
            "xAxisLabel": "1 x axis label",
            "y": 10,
          },
        ]
      }
      interpolation="step"
      key="generatedid-"
      name="chartArea-1-threshold"
      style={
        Object {
          "data": Object {},
        }
      }
    />
    <ChartStack>
      <ChartArea
        animate={false}
        data={
          Array [
            Object {
              "x": 1,
              "xAxisLabel": "1 x axis label",
              "y": 0,
            },
          ]
        }
        interpolation="natural"
        key="generatedid-"
        name="chartArea-0-area"
        style={
          Object {
            "data": Object {},
          }
        }
      />
    </ChartStack>
  </Chart>
</div>
`;

exports[`ChartArea Component should render a basic component: basic 1`] = `
<div
  className="uxui-curiosity__modal uxui-curiosity__modal--loading"
  id="curiosity-chartarea"
>
  <Chart
    animate={
      Object {
        "duration": 0,
      }
    }
    domain={
      Object {
        "y": Array [
          0,
          10,
        ],
      }
    }
    padding={
      Object {
        "bottom": 75,
        "left": 50,
        "right": 50,
        "top": 50,
      }
    }
    themeColor="blue"
    width={0}
  >
    <ChartAxis
      animate={false}
      fixLabelOverlap={false}
      tickFormat={[Function]}
      tickValues={Array []}
    />
    <ChartAxis
      animate={false}
      dependentAxis={true}
      showGrid={true}
    />
    <ChartStack />
  </Chart>
</div>
`;

exports[`ChartArea Component should render basic data: data 1`] = `
<div
  className="uxui-curiosity__modal uxui-curiosity__modal--loading"
  id="curiosity-chartarea"
>
  <Chart
    animate={
      Object {
        "duration": 0,
      }
    }
    domain={
      Object {
        "y": Array [
          0,
          10,
        ],
      }
    }
    padding={
      Object {
        "bottom": 75,
        "left": 50,
        "right": 50,
        "top": 50,
      }
    }
    themeColor="blue"
    width={0}
  >
    <ChartAxis
      animate={false}
      fixLabelOverlap={false}
      tickFormat={[Function]}
      tickValues={
        Array [
          1,
          2,
        ]
      }
    />
    <ChartAxis
      animate={false}
      dependentAxis={true}
      showGrid={true}
    />
    <ChartThreshold
      animate={false}
      data={
        Array [
          Object {
            "x": 1,
            "xAxisLabel": "1 x axis label",
            "y": 1,
          },
          Object {
            "x": 2,
            "xAxisLabel": "2 x axis label",
            "y": 2,
          },
        ]
      }
      interpolation="step"
      key="generatedid-"
      name="chartArea-1-threshold"
      style={
        Object {
          "data": Object {
            "fill": "#ipsum",
            "stroke": "#lorem",
            "strokeDasharray": "4,3",
            "strokeWidth": 2.5,
          },
        }
      }
    />
    <ChartStack>
      <ChartArea
        animate={false}
        data={
          Array [
            Object {
              "x": 1,
              "xAxisLabel": "1 x axis label",
              "y": 1,
            },
            Object {
              "x": 2,
              "xAxisLabel": "2 x axis label",
              "y": 2,
            },
          ]
        }
        interpolation="monotoneX"
        key="generatedid-"
        name="chartArea-0-area"
        style={
          Object {
            "data": Object {
              "fill": "#ipsum",
              "stroke": "#lorem",
            },
          }
        }
      />
    </ChartStack>
  </Chart>
</div>
`;

exports[`ChartArea Component should set a minimum y axis domain or range: y axis domain or range 1`] = `
Object {
  "chartDomain": Object {
    "domain": Object {
      "y": Array [
        0,
        10,
      ],
    },
  },
  "maxY": 1,
}
`;
