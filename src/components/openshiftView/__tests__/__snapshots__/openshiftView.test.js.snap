// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OpenshiftView Component should display an alternate graph on query-string update: alternate graph 1`] = `
<PageLayout>
  <PageHeader
    t={[Function]}
    viewId="OpenShift"
  >
    t(curiosity-view.title, [object Object])
  </PageHeader>
  <PageToolbar>
    <Connect(Toolbar)
      filterOptions={
        Array [
          Object {
            "id": "sla",
          },
        ]
      }
      productId="lorem ipsum"
      query={
        Object {
          "granularity": "daily",
          "limit": 10,
          "offset": 0,
          "uom": "cores",
        }
      }
      viewId="OpenShift"
    />
  </PageToolbar>
  <PageSection>
    <Connect(C3GraphCard)
      cardTitle="t(curiosity-graph.cardHeading)"
      filterGraphData={
        Array [
          Object {
            "color": "#06c",
            "fill": "#8bc1f7",
            "id": "cores",
            "optional": true,
            "stroke": "#06c",
          },
          Object {
            "id": "thresholdCores",
            "optional": true,
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      productShortLabel="OpenShift"
      query={
        Object {
          "granularity": "daily",
        }
      }
      viewId="OpenShift"
    >
      <Select
        ariaLabel="Select option"
        className=""
        id="generatedid-"
        isDisabled={false}
        isToggleText={true}
        name={null}
        onSelect={[Function]}
        options={
          Array [
            Object {
              "title": "t(curiosity-toolbar.uom, [object Object])",
              "value": "cores",
            },
            Object {
              "title": "t(curiosity-toolbar.uom, [object Object])",
              "value": "sockets",
            },
          ]
        }
        placeholder="Select option"
        selectedOptions="cores"
        toggleIcon={null}
        variant="single"
      />
    </Connect(C3GraphCard)>
  </PageSection>
  <PageSection>
    <Connect(InventoryList)
      cardTitle="t(curiosity-inventory.cardHeading)"
      filterGuestsData={
        Array [
          Object {
            "cell": [Function],
            "id": "displayName",
          },
          Object {
            "id": "inventoryId",
          },
          Object {
            "id": "lastSeen",
          },
        ]
      }
      filterInventoryData={
        Array [
          Object {
            "cell": [Function],
            "id": "displayName",
          },
          Object {
            "cell": [Function],
            "id": "hardwareType",
          },
          Object {
            "id": "cores",
            "optional": true,
          },
          Object {
            "id": "lastSeen",
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      query={
        Object {
          "limit": 10,
          "offset": 0,
          "uom": "cores",
        }
      }
      viewId="OpenShift"
    />
  </PageSection>
</PageLayout>
`;

exports[`OpenshiftView Component should have a fallback title: title 1`] = `
<PageLayout>
  <PageHeader
    t={[Function]}
    viewId="OpenShift"
  >
    t(curiosity-view.title, [object Object])
  </PageHeader>
  <PageToolbar>
    <Connect(Toolbar)
      filterOptions={
        Array [
          Object {
            "id": "sla",
          },
        ]
      }
      productId="lorem ipsum"
      query={
        Object {
          "granularity": "daily",
          "limit": 10,
          "offset": 0,
          "uom": "cores",
        }
      }
      viewId="OpenShift"
    />
  </PageToolbar>
  <PageSection>
    <Connect(GraphCard)
      cardTitle="t(curiosity-graph.cardHeading)"
      filterGraphData={
        Array [
          Object {
            "color": "#06c",
            "fill": "#8bc1f7",
            "id": "cores",
            "optional": true,
            "stroke": "#06c",
          },
          Object {
            "id": "thresholdCores",
            "optional": true,
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      productShortLabel="OpenShift"
      query={
        Object {
          "granularity": "daily",
        }
      }
      viewId="OpenShift"
    >
      <Select
        ariaLabel="Select option"
        className=""
        id="generatedid-"
        isDisabled={false}
        isToggleText={true}
        name={null}
        onSelect={[Function]}
        options={
          Array [
            Object {
              "title": "t(curiosity-toolbar.uom, [object Object])",
              "value": "cores",
            },
            Object {
              "title": "t(curiosity-toolbar.uom, [object Object])",
              "value": "sockets",
            },
          ]
        }
        placeholder="Select option"
        selectedOptions="cores"
        toggleIcon={null}
        variant="single"
      />
    </Connect(GraphCard)>
  </PageSection>
  <PageSection>
    <Connect(InventoryList)
      cardTitle="t(curiosity-inventory.cardHeading)"
      filterGuestsData={
        Array [
          Object {
            "cell": [Function],
            "id": "displayName",
          },
          Object {
            "id": "inventoryId",
          },
          Object {
            "id": "lastSeen",
          },
        ]
      }
      filterInventoryData={
        Array [
          Object {
            "cell": [Function],
            "id": "displayName",
          },
          Object {
            "cell": [Function],
            "id": "hardwareType",
          },
          Object {
            "id": "cores",
            "optional": true,
          },
          Object {
            "id": "lastSeen",
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      query={
        Object {
          "limit": 10,
          "offset": 0,
          "uom": "cores",
        }
      }
      viewId="OpenShift"
    />
  </PageSection>
</PageLayout>
`;

exports[`OpenshiftView Component should have default props that set product configuration: filteredGuestsData results 1`] = `
Object {
  "cells": Array [
    <Button
      component="a"
      href="/insights/inventory/lorem inventory id/"
      isInline={true}
      target="_blank"
      variant="link"
    >
      lorem
    </Button>,
    "lorem inventory id",
    "lorem month ago",
  ],
  "columnHeaders": Array [
    "t(curiosity-inventory.header, [object Object])",
    "t(curiosity-inventory.header, [object Object])",
    "t(curiosity-inventory.header, [object Object])",
  ],
  "data": Object {
    "displayName": Object {
      "title": "t(curiosity-inventory.header, [object Object])",
      "value": "lorem",
    },
    "inventoryId": Object {
      "title": "t(curiosity-inventory.header, [object Object])",
      "value": "lorem inventory id",
    },
    "lastSeen": Object {
      "title": "t(curiosity-inventory.header, [object Object])",
      "value": "lorem month ago",
    },
    "loremIpsum": Object {
      "title": "t(curiosity-inventory.header, [object Object])",
      "value": "hello world",
    },
    "subscriptionManagerId": Object {
      "title": "t(curiosity-inventory.header, [object Object])",
      "value": "lorem subscription id",
    },
  },
}
`;

exports[`OpenshiftView Component should have default props that set product configuration: filteredInventoryData results 1`] = `
Object {
  "cells": Array [
    <Button
      component="a"
      href="/insights/inventory/lorem inventory id/"
      isInline={true}
      target="_blank"
      variant="link"
    >
      lorem
    </Button>,
    <React.Fragment>
      t(curiosity-inventory.hardwareType, [object Object])
       
      <Badge
        isRead={true}
      >
        3
      </Badge>
    </React.Fragment>,
    10,
    12,
    "lorem month ago",
  ],
  "columnHeaders": Array [
    "t(curiosity-inventory.header, [object Object])",
    "t(curiosity-inventory.header, [object Object])",
    "t(curiosity-inventory.header, [object Object])",
    "t(curiosity-inventory.header, [object Object])",
    "t(curiosity-inventory.header, [object Object])",
  ],
  "data": Object {
    "cores": Object {
      "title": "t(curiosity-inventory.header, [object Object])",
      "value": 12,
    },
    "displayName": Object {
      "title": "t(curiosity-inventory.header, [object Object])",
      "value": "lorem",
    },
    "hardwareType": Object {
      "title": "t(curiosity-inventory.header, [object Object])",
      "value": "ipsum",
    },
    "inventoryId": Object {
      "title": "t(curiosity-inventory.header, [object Object])",
      "value": "lorem inventory id",
    },
    "lastSeen": Object {
      "title": "t(curiosity-inventory.header, [object Object])",
      "value": "lorem month ago",
    },
    "loremIpsum": Object {
      "title": "t(curiosity-inventory.header, [object Object])",
      "value": "hello world",
    },
    "numberOfGuests": Object {
      "title": "t(curiosity-inventory.header, [object Object])",
      "value": 3,
    },
    "sockets": Object {
      "title": "t(curiosity-inventory.header, [object Object])",
      "value": 10,
    },
  },
}
`;

exports[`OpenshiftView Component should have default props that set product configuration: initial configuration 1`] = `
Object {
  "initialGraphFilters": Array [
    Object {
      "color": "#06c",
      "fill": "#8bc1f7",
      "id": "cores",
      "optional": true,
      "stroke": "#06c",
    },
    Object {
      "color": "#06c",
      "fill": "#8bc1f7",
      "id": "sockets",
      "optional": true,
      "stroke": "#06c",
    },
    Object {
      "id": "thresholdSockets",
      "optional": true,
    },
    Object {
      "id": "thresholdCores",
      "optional": true,
    },
  ],
  "initialGuestsFilters": Array [
    Object {
      "cell": [Function],
      "id": "displayName",
    },
    Object {
      "id": "inventoryId",
    },
    Object {
      "id": "lastSeen",
    },
  ],
  "initialInventoryFilters": Array [
    Object {
      "cell": [Function],
      "id": "displayName",
    },
    Object {
      "cell": [Function],
      "id": "hardwareType",
    },
    Object {
      "id": "sockets",
      "optional": true,
    },
    Object {
      "id": "cores",
      "optional": true,
    },
    Object {
      "id": "lastSeen",
    },
  ],
  "query": Object {
    "granularity": "daily",
    "limit": 10,
    "offset": 0,
    "uom": "cores",
  },
}
`;

exports[`OpenshiftView Component should render a non-connected component: non-connected 1`] = `
<PageLayout>
  <PageHeader
    t={[Function]}
    viewId="OpenShift"
  >
    t(curiosity-view.title, [object Object])
  </PageHeader>
  <PageToolbar>
    <Connect(Toolbar)
      filterOptions={
        Array [
          Object {
            "id": "sla",
          },
        ]
      }
      productId="lorem ipsum"
      query={
        Object {
          "granularity": "daily",
          "limit": 10,
          "offset": 0,
          "uom": "cores",
        }
      }
      viewId="OpenShift"
    />
  </PageToolbar>
  <PageSection>
    <Connect(GraphCard)
      cardTitle="t(curiosity-graph.cardHeading)"
      filterGraphData={
        Array [
          Object {
            "color": "#06c",
            "fill": "#8bc1f7",
            "id": "cores",
            "optional": true,
            "stroke": "#06c",
          },
          Object {
            "id": "thresholdCores",
            "optional": true,
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      productShortLabel="OpenShift"
      query={
        Object {
          "granularity": "daily",
        }
      }
      viewId="OpenShift"
    >
      <Select
        ariaLabel="Select option"
        className=""
        id="generatedid-"
        isDisabled={false}
        isToggleText={true}
        name={null}
        onSelect={[Function]}
        options={
          Array [
            Object {
              "title": "t(curiosity-toolbar.uom, [object Object])",
              "value": "cores",
            },
            Object {
              "title": "t(curiosity-toolbar.uom, [object Object])",
              "value": "sockets",
            },
          ]
        }
        placeholder="Select option"
        selectedOptions="cores"
        toggleIcon={null}
        variant="single"
      />
    </Connect(GraphCard)>
  </PageSection>
  <PageSection>
    <Connect(InventoryList)
      cardTitle="t(curiosity-inventory.cardHeading)"
      filterGuestsData={
        Array [
          Object {
            "cell": [Function],
            "id": "displayName",
          },
          Object {
            "id": "inventoryId",
          },
          Object {
            "id": "lastSeen",
          },
        ]
      }
      filterInventoryData={
        Array [
          Object {
            "cell": [Function],
            "id": "displayName",
          },
          Object {
            "cell": [Function],
            "id": "hardwareType",
          },
          Object {
            "id": "cores",
            "optional": true,
          },
          Object {
            "id": "lastSeen",
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      query={
        Object {
          "limit": 10,
          "offset": 0,
          "uom": "cores",
        }
      }
      viewId="OpenShift"
    />
  </PageSection>
</PageLayout>
`;
