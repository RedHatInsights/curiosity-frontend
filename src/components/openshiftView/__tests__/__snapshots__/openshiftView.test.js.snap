// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OpenshiftView Component should display an alternate graph on query-string update: alternate graph 1`] = `
<PageLayout>
  <PageHeader
    includeTour={true}
    productLabel="OpenShift"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscription Watch","context":"OpenShift"})
  </PageHeader>
  <PageMessages
    className=""
  >
    <Connect(BannerMessages)
      productId="lorem ipsum"
      query={
        Object {
          "granularity": "daily",
          "limit": 100,
          "offset": 0,
          "uom": "cores",
        }
      }
      viewId="viewOpenShift"
    />
  </PageMessages>
  <PageToolbar
    className=""
  >
    <Connect(Toolbar)
      filterOptions={
        Array [
          Object {
            "id": "sla",
          },
        ]
      }
      productId="lorem ipsum"
      query={
        Object {
          "granularity": "daily",
          "limit": 100,
          "offset": 0,
          "uom": "cores",
        }
      }
      viewId="viewOpenShift"
    />
  </PageToolbar>
  <PageSection>
    <Connect(C3GraphCard)
      cardTitle="t(curiosity-graph.cardHeading)"
      filterGraphData={
        Array [
          Object {
            "color": "#06c",
            "fill": "#8bc1f7",
            "id": "cores",
            "isOptional": true,
            "stroke": "#06c",
          },
          Object {
            "id": "thresholdCores",
            "isOptional": true,
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      productShortLabel="OpenShift"
      query={
        Object {
          "granularity": "daily",
        }
      }
      viewId="viewOpenShift"
    >
      <Select
        ariaLabel="Select option"
        className=""
        id="generatedid-"
        isDisabled={false}
        isToggleText={true}
        name={null}
        onSelect={[Function]}
        options={
          Array [
            Object {
              "title": "t(curiosity-toolbar.uom, {\\"context\\":\\"cores\\"})",
              "value": "cores",
            },
            Object {
              "title": "t(curiosity-toolbar.uom, {\\"context\\":\\"sockets\\"})",
              "value": "sockets",
            },
          ]
        }
        placeholder="Select option"
        selectedOptions="cores"
        toggleIcon={null}
        variant="single"
      />
    </Connect(C3GraphCard)>
  </PageSection>
  <PageSection>
    <Connect(InventoryTabs)
      productId="lorem ipsum"
    >
      <InventoryTab
        active={false}
        key="hostsTab"
        title="t(curiosity-inventory.tab, {\\"context\\":\\"systems\\"})"
      >
        <Connect(InventoryList)
          filterGuestsData={
            Array [
              Object {
                "cell": [Function],
                "header": "t(curiosity-inventory.header, {\\"context\\":\\"guestsDisplayName\\"})",
                "id": "displayName",
              },
              Object {
                "cellWidth": 40,
                "id": "inventoryId",
              },
              Object {
                "cell": [Function],
                "cellWidth": 15,
                "id": "lastSeen",
              },
            ]
          }
          filterInventoryData={
            Array [
              Object {
                "cell": [Function],
                "id": "displayName",
                "isSortable": true,
              },
              Object {
                "cell": [Function],
                "cellWidth": 20,
                "id": "measurementType",
                "isSortable": true,
              },
              Object {
                "cellWidth": 15,
                "id": "cores",
                "isOptional": true,
                "isSortable": true,
                "isWrappable": true,
              },
              Object {
                "cell": [Function],
                "cellWidth": 15,
                "id": "lastSeen",
                "isSortDefault": true,
                "isSortable": true,
                "isWrappable": true,
                "sortDefaultInitialDirection": "asc",
              },
            ]
          }
          key="lorem ipsum"
          productId="lorem ipsum"
          query={
            Object {
              "limit": 100,
              "offset": 0,
              "uom": "cores",
            }
          }
          settings={Object {}}
          viewId="viewOpenShift"
        />
      </InventoryTab>
      <InventoryTab
        active={false}
        key="subscriptionsTab"
        title="t(curiosity-inventory.tab, {\\"context\\":\\"subscriptions\\"})"
      >
        <Connect(InventorySubscriptions)
          filterInventoryData={
            Array [
              Object {
                "id": "productName",
                "isSortable": true,
              },
              Object {
                "cellWidth": 15,
                "id": "serviceLevel",
                "isSortable": true,
                "isWrappable": true,
              },
              Object {
                "cell": [Function],
                "cellWidth": 15,
                "id": "upcomingEventDate",
                "isSortDefault": true,
                "isSortable": true,
                "isWrappable": true,
                "sortDefaultInitialDirection": "asc",
              },
            ]
          }
          key="lorem ipsum"
          productId="lorem ipsum"
          query={
            Object {
              "limit": 100,
              "offset": 0,
              "uom": "cores",
            }
          }
          viewId="viewOpenShift"
        />
      </InventoryTab>
    </Connect(InventoryTabs)>
  </PageSection>
</PageLayout>
`;

exports[`OpenshiftView Component should have a fallback title: title 1`] = `
<PageLayout>
  <PageHeader
    includeTour={true}
    productLabel="OpenShift"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscription Watch","context":"OpenShift"})
  </PageHeader>
  <PageMessages
    className=""
  >
    <Connect(BannerMessages)
      productId="lorem ipsum"
      query={
        Object {
          "granularity": "daily",
          "limit": 100,
          "offset": 0,
          "uom": "cores",
        }
      }
      viewId="viewOpenShift"
    />
  </PageMessages>
  <PageToolbar
    className=""
  >
    <Connect(Toolbar)
      filterOptions={
        Array [
          Object {
            "id": "sla",
          },
        ]
      }
      productId="lorem ipsum"
      query={
        Object {
          "granularity": "daily",
          "limit": 100,
          "offset": 0,
          "uom": "cores",
        }
      }
      viewId="viewOpenShift"
    />
  </PageToolbar>
  <PageSection>
    <Connect(GraphCard)
      cardTitle="t(curiosity-graph.cardHeading)"
      filterGraphData={
        Array [
          Object {
            "color": "#06c",
            "fill": "#8bc1f7",
            "id": "cores",
            "isOptional": true,
            "stroke": "#06c",
          },
          Object {
            "id": "thresholdCores",
            "isOptional": true,
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      productLabel="OpenShift"
      query={
        Object {
          "granularity": "daily",
        }
      }
      viewId="viewOpenShift"
    >
      <Select
        ariaLabel="Select option"
        className=""
        id="generatedid-"
        isDisabled={false}
        isToggleText={true}
        name={null}
        onSelect={[Function]}
        options={
          Array [
            Object {
              "title": "t(curiosity-toolbar.uom, {\\"context\\":\\"cores\\"})",
              "value": "cores",
            },
            Object {
              "title": "t(curiosity-toolbar.uom, {\\"context\\":\\"sockets\\"})",
              "value": "sockets",
            },
          ]
        }
        placeholder="Select option"
        selectedOptions="cores"
        toggleIcon={null}
        variant="single"
      />
    </Connect(GraphCard)>
  </PageSection>
  <PageSection>
    <Connect(InventoryTabs)
      productId="lorem ipsum"
    >
      <InventoryTab
        active={false}
        key="hostsTab"
        title="t(curiosity-inventory.tab, {\\"context\\":\\"systems\\"})"
      >
        <Connect(InventoryList)
          filterGuestsData={
            Array [
              Object {
                "cell": [Function],
                "header": "t(curiosity-inventory.header, {\\"context\\":\\"guestsDisplayName\\"})",
                "id": "displayName",
              },
              Object {
                "cellWidth": 40,
                "id": "inventoryId",
              },
              Object {
                "cell": [Function],
                "cellWidth": 15,
                "id": "lastSeen",
              },
            ]
          }
          filterInventoryData={
            Array [
              Object {
                "cell": [Function],
                "id": "displayName",
                "isSortable": true,
              },
              Object {
                "cell": [Function],
                "cellWidth": 20,
                "id": "measurementType",
                "isSortable": true,
              },
              Object {
                "cellWidth": 15,
                "id": "cores",
                "isOptional": true,
                "isSortable": true,
                "isWrappable": true,
              },
              Object {
                "cell": [Function],
                "cellWidth": 15,
                "id": "lastSeen",
                "isSortDefault": true,
                "isSortable": true,
                "isWrappable": true,
                "sortDefaultInitialDirection": "asc",
              },
            ]
          }
          key="lorem ipsum"
          productId="lorem ipsum"
          query={
            Object {
              "limit": 100,
              "offset": 0,
              "uom": "cores",
            }
          }
          settings={Object {}}
          viewId="viewOpenShift"
        />
      </InventoryTab>
      <InventoryTab
        active={false}
        key="subscriptionsTab"
        title="t(curiosity-inventory.tab, {\\"context\\":\\"subscriptions\\"})"
      >
        <Connect(InventorySubscriptions)
          filterInventoryData={
            Array [
              Object {
                "id": "productName",
                "isSortable": true,
              },
              Object {
                "cellWidth": 15,
                "id": "serviceLevel",
                "isSortable": true,
                "isWrappable": true,
              },
              Object {
                "cell": [Function],
                "cellWidth": 15,
                "id": "upcomingEventDate",
                "isSortDefault": true,
                "isSortable": true,
                "isWrappable": true,
                "sortDefaultInitialDirection": "asc",
              },
            ]
          }
          key="lorem ipsum"
          productId="lorem ipsum"
          query={
            Object {
              "limit": 100,
              "offset": 0,
              "uom": "cores",
            }
          }
          viewId="viewOpenShift"
        />
      </InventoryTab>
    </Connect(InventoryTabs)>
  </PageSection>
</PageLayout>
`;

exports[`OpenshiftView Component should have default props that set product configuration: filteredGuestsData results 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "lorem",
    },
    Object {
      "title": "lorem inventory id",
    },
    Object {
      "title": <DateFormat
        date="lorem date obj"
      />,
    },
  ],
  "columnHeaders": Array [
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"guestsDisplayName\\"})",
      "transforms": Array [],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "transforms": Array [
        [Function],
      ],
    },
  ],
  "data": Object {
    "displayName": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
      "value": "lorem",
    },
    "inventoryId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
      "value": "lorem inventory id",
    },
    "lastSeen": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "value": "lorem date obj",
    },
    "loremIpsum": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"loremIpsum\\"})",
      "value": "hello world",
    },
    "subscriptionManagerId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"subscriptionManagerId\\"})",
      "value": "lorem subscription id",
    },
  },
}
`;

exports[`OpenshiftView Component should have default props that set product configuration: filteredGuestsData results, authorized 1`] = `
Object {
  "cells": Array [
    Object {
      "title": <Button
        component="a"
        href="/insights/inventory/lorem inventory id/"
        isInline={true}
        target="_blank"
        variant="link"
      >
        lorem
      </Button>,
    },
    Object {
      "title": "lorem inventory id",
    },
    Object {
      "title": <DateFormat
        date="lorem date obj"
      />,
    },
  ],
  "columnHeaders": Array [
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"guestsDisplayName\\"})",
      "transforms": Array [],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "transforms": Array [
        [Function],
      ],
    },
  ],
  "data": Object {
    "displayName": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
      "value": "lorem",
    },
    "inventoryId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
      "value": "lorem inventory id",
    },
    "lastSeen": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "value": "lorem date obj",
    },
    "loremIpsum": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"loremIpsum\\"})",
      "value": "hello world",
    },
    "subscriptionManagerId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"subscriptionManagerId\\"})",
      "value": "lorem subscription id",
    },
  },
}
`;

exports[`OpenshiftView Component should have default props that set product configuration: filteredInventoryData results 1`] = `
Object {
  "cells": Array [
    Object {
      "title": <React.Fragment>
        lorem
         
        t(curiosity-inventory.label, {"context":"numberOfGuests","count":3}, [object Object])
      </React.Fragment>,
    },
    Object {
      "title": <React.Fragment>
        t(curiosity-inventory.measurementType, {"context":null})
         
        
      </React.Fragment>,
    },
    Object {
      "title": 10,
    },
    Object {
      "title": 12,
    },
    Object {
      "title": <DateFormat
        date="lorem date obj"
      />,
    },
  ],
  "columnHeaders": Array [
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
      "transforms": Array [],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"measurementType\\"})",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"sockets\\"})",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"cores\\"})",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "transforms": Array [
        [Function],
      ],
    },
  ],
  "data": Object {
    "cores": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"cores\\"})",
      "value": 12,
    },
    "displayName": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
      "value": "lorem",
    },
    "hardwareType": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"hardwareType\\"})",
      "value": "ipsum",
    },
    "inventoryId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
      "value": "lorem inventory id",
    },
    "lastSeen": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "value": "lorem date obj",
    },
    "loremIpsum": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"loremIpsum\\"})",
      "value": "hello world",
    },
    "measurementType": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"measurementType\\"})",
      "value": null,
    },
    "numberOfGuests": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"numberOfGuests\\"})",
      "value": 3,
    },
    "sockets": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"sockets\\"})",
      "value": 10,
    },
  },
}
`;

exports[`OpenshiftView Component should have default props that set product configuration: filteredInventoryData results, authorized 1`] = `
Object {
  "cells": Array [
    Object {
      "title": <React.Fragment>
        <Button
          component="a"
          href="/insights/inventory/lorem inventory id/"
          isInline={true}
          target="_blank"
          variant="link"
        >
          lorem
        </Button>
         
        t(curiosity-inventory.label, {"context":"numberOfGuests","count":3}, [object Object])
      </React.Fragment>,
    },
    Object {
      "title": <React.Fragment>
        t(curiosity-inventory.measurementType, {"context":null})
         
        
      </React.Fragment>,
    },
    Object {
      "title": 10,
    },
    Object {
      "title": 12,
    },
    Object {
      "title": <DateFormat
        date="lorem date obj"
      />,
    },
  ],
  "columnHeaders": Array [
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
      "transforms": Array [],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"measurementType\\"})",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"sockets\\"})",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"cores\\"})",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "transforms": Array [
        [Function],
      ],
    },
  ],
  "data": Object {
    "cores": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"cores\\"})",
      "value": 12,
    },
    "displayName": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
      "value": "lorem",
    },
    "hardwareType": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"hardwareType\\"})",
      "value": "ipsum",
    },
    "inventoryId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
      "value": "lorem inventory id",
    },
    "lastSeen": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "value": "lorem date obj",
    },
    "loremIpsum": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"loremIpsum\\"})",
      "value": "hello world",
    },
    "measurementType": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"measurementType\\"})",
      "value": null,
    },
    "numberOfGuests": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"numberOfGuests\\"})",
      "value": 3,
    },
    "sockets": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"sockets\\"})",
      "value": 10,
    },
  },
}
`;

exports[`OpenshiftView Component should have default props that set product configuration: initial configuration 1`] = `
Object {
  "initialGraphFilters": Array [
    Object {
      "color": "#06c",
      "fill": "#8bc1f7",
      "id": "cores",
      "isOptional": true,
      "stroke": "#06c",
    },
    Object {
      "color": "#06c",
      "fill": "#8bc1f7",
      "id": "sockets",
      "isOptional": true,
      "stroke": "#06c",
    },
    Object {
      "id": "thresholdSockets",
      "isOptional": true,
    },
    Object {
      "id": "thresholdCores",
      "isOptional": true,
    },
  ],
  "initialGuestsFilters": Array [
    Object {
      "cell": [Function],
      "header": "t(curiosity-inventory.header, {\\"context\\":\\"guestsDisplayName\\"})",
      "id": "displayName",
    },
    Object {
      "cellWidth": 40,
      "id": "inventoryId",
    },
    Object {
      "cell": [Function],
      "cellWidth": 15,
      "id": "lastSeen",
    },
  ],
  "initialInventoryFilters": Array [
    Object {
      "cell": [Function],
      "id": "displayName",
      "isSortable": true,
    },
    Object {
      "cell": [Function],
      "cellWidth": 20,
      "id": "measurementType",
      "isSortable": true,
    },
    Object {
      "cellWidth": 15,
      "id": "sockets",
      "isOptional": true,
      "isSortable": true,
      "isWrappable": true,
    },
    Object {
      "cellWidth": 15,
      "id": "cores",
      "isOptional": true,
      "isSortable": true,
      "isWrappable": true,
    },
    Object {
      "cell": [Function],
      "cellWidth": 15,
      "id": "lastSeen",
      "isSortDefault": true,
      "isSortable": true,
      "isWrappable": true,
      "sortDefaultInitialDirection": "asc",
    },
  ],
  "query": Object {
    "granularity": "daily",
    "limit": 100,
    "offset": 0,
    "uom": "cores",
  },
}
`;

exports[`OpenshiftView Component should render a non-connected component: non-connected 1`] = `
<PageLayout>
  <PageHeader
    includeTour={true}
    productLabel="OpenShift"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscription Watch","context":"OpenShift"})
  </PageHeader>
  <PageMessages
    className=""
  >
    <Connect(BannerMessages)
      productId="lorem ipsum"
      query={
        Object {
          "granularity": "daily",
          "limit": 100,
          "offset": 0,
          "uom": "cores",
        }
      }
      viewId="viewOpenShift"
    />
  </PageMessages>
  <PageToolbar
    className=""
  >
    <Connect(Toolbar)
      filterOptions={
        Array [
          Object {
            "id": "sla",
          },
        ]
      }
      productId="lorem ipsum"
      query={
        Object {
          "granularity": "daily",
          "limit": 100,
          "offset": 0,
          "uom": "cores",
        }
      }
      viewId="viewOpenShift"
    />
  </PageToolbar>
  <PageSection>
    <Connect(GraphCard)
      cardTitle="t(curiosity-graph.cardHeading)"
      filterGraphData={
        Array [
          Object {
            "color": "#06c",
            "fill": "#8bc1f7",
            "id": "cores",
            "isOptional": true,
            "stroke": "#06c",
          },
          Object {
            "id": "thresholdCores",
            "isOptional": true,
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      productLabel="OpenShift"
      query={
        Object {
          "granularity": "daily",
        }
      }
      viewId="viewOpenShift"
    >
      <Select
        ariaLabel="Select option"
        className=""
        id="generatedid-"
        isDisabled={false}
        isToggleText={true}
        name={null}
        onSelect={[Function]}
        options={
          Array [
            Object {
              "title": "t(curiosity-toolbar.uom, {\\"context\\":\\"cores\\"})",
              "value": "cores",
            },
            Object {
              "title": "t(curiosity-toolbar.uom, {\\"context\\":\\"sockets\\"})",
              "value": "sockets",
            },
          ]
        }
        placeholder="Select option"
        selectedOptions="cores"
        toggleIcon={null}
        variant="single"
      />
    </Connect(GraphCard)>
  </PageSection>
  <PageSection>
    <Connect(InventoryTabs)
      productId="lorem ipsum"
    >
      <InventoryTab
        active={false}
        key="hostsTab"
        title="t(curiosity-inventory.tab, {\\"context\\":\\"systems\\"})"
      >
        <Connect(InventoryList)
          filterGuestsData={
            Array [
              Object {
                "cell": [Function],
                "header": "t(curiosity-inventory.header, {\\"context\\":\\"guestsDisplayName\\"})",
                "id": "displayName",
              },
              Object {
                "cellWidth": 40,
                "id": "inventoryId",
              },
              Object {
                "cell": [Function],
                "cellWidth": 15,
                "id": "lastSeen",
              },
            ]
          }
          filterInventoryData={
            Array [
              Object {
                "cell": [Function],
                "id": "displayName",
                "isSortable": true,
              },
              Object {
                "cell": [Function],
                "cellWidth": 20,
                "id": "measurementType",
                "isSortable": true,
              },
              Object {
                "cellWidth": 15,
                "id": "cores",
                "isOptional": true,
                "isSortable": true,
                "isWrappable": true,
              },
              Object {
                "cell": [Function],
                "cellWidth": 15,
                "id": "lastSeen",
                "isSortDefault": true,
                "isSortable": true,
                "isWrappable": true,
                "sortDefaultInitialDirection": "asc",
              },
            ]
          }
          key="lorem ipsum"
          productId="lorem ipsum"
          query={
            Object {
              "limit": 100,
              "offset": 0,
              "uom": "cores",
            }
          }
          settings={Object {}}
          viewId="viewOpenShift"
        />
      </InventoryTab>
      <InventoryTab
        active={false}
        key="subscriptionsTab"
        title="t(curiosity-inventory.tab, {\\"context\\":\\"subscriptions\\"})"
      >
        <Connect(InventorySubscriptions)
          filterInventoryData={
            Array [
              Object {
                "id": "productName",
                "isSortable": true,
              },
              Object {
                "cellWidth": 15,
                "id": "serviceLevel",
                "isSortable": true,
                "isWrappable": true,
              },
              Object {
                "cell": [Function],
                "cellWidth": 15,
                "id": "upcomingEventDate",
                "isSortDefault": true,
                "isSortable": true,
                "isWrappable": true,
                "sortDefaultInitialDirection": "asc",
              },
            ]
          }
          key="lorem ipsum"
          productId="lorem ipsum"
          query={
            Object {
              "limit": 100,
              "offset": 0,
              "uom": "cores",
            }
          }
          viewId="viewOpenShift"
        />
      </InventoryTab>
    </Connect(InventoryTabs)>
  </PageSection>
</PageLayout>
`;
