// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OpenshiftView Component should display an alternate graph on query-string update: alternate graph 1`] = `
<PageLayout>
  <PageHeader
    t={[Function]}
    viewId="OpenShift"
  >
    t(curiosity-view.title, [object Object])
  </PageHeader>
  <PageToolbar>
    <Connect(Toolbar)
      query={
        Object {
          "granularity": "daily",
        }
      }
      viewId="OpenShift"
    />
  </PageToolbar>
  <PageSection>
    <Connect(C3GraphCard)
      cardTitle="t(curiosity-graph.cardHeading)"
      filterGraphData={
        Array [
          Object {
            "color": "#06c",
            "fill": "#8bc1f7",
            "id": "cores",
            "stroke": "#06c",
          },
          Object {
            "id": "thresholdCores",
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      productShortLabel="OpenShift"
      query={
        Object {
          "granularity": "daily",
        }
      }
      viewId="OpenShift"
    >
      <Select
        ariaLabel="Select option"
        className=""
        id="generatedid-"
        isDisabled={false}
        isToggleText={true}
        name={null}
        onSelect={[Function]}
        options={
          Array [
            Object {
              "title": "Cores",
              "value": "cores",
            },
            Object {
              "title": "Sockets",
              "value": "sockets",
            },
          ]
        }
        placeholder="Select option"
        selectedOptions="cores"
        toggleIcon={null}
        variant="single"
      />
    </Connect(C3GraphCard)>
  </PageSection>
</PageLayout>
`;

exports[`OpenshiftView Component should have a fallback title: title 1`] = `
<PageLayout>
  <PageHeader
    t={[Function]}
    viewId="OpenShift"
  >
    t(curiosity-view.title, [object Object])
  </PageHeader>
  <PageToolbar>
    <Connect(Toolbar)
      query={
        Object {
          "granularity": "daily",
        }
      }
      viewId="OpenShift"
    />
  </PageToolbar>
  <PageSection>
    <Connect(GraphCard)
      cardTitle="t(curiosity-graph.cardHeading)"
      filterGraphData={
        Array [
          Object {
            "color": "#06c",
            "fill": "#8bc1f7",
            "id": "cores",
            "stroke": "#06c",
          },
          Object {
            "id": "thresholdCores",
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      productShortLabel="OpenShift"
      query={
        Object {
          "granularity": "daily",
        }
      }
      viewId="OpenShift"
    >
      <Select
        ariaLabel="Select option"
        className=""
        id="generatedid-"
        isDisabled={false}
        isToggleText={true}
        name={null}
        onSelect={[Function]}
        options={
          Array [
            Object {
              "title": "Cores",
              "value": "cores",
            },
            Object {
              "title": "Sockets",
              "value": "sockets",
            },
          ]
        }
        placeholder="Select option"
        selectedOptions="cores"
        toggleIcon={null}
        variant="single"
      />
    </Connect(GraphCard)>
  </PageSection>
</PageLayout>
`;

exports[`OpenshiftView Component should render a non-connected component: non-connected 1`] = `
<PageLayout>
  <PageHeader
    t={[Function]}
    viewId="OpenShift"
  >
    t(curiosity-view.title, [object Object])
  </PageHeader>
  <PageToolbar>
    <Connect(Toolbar)
      query={
        Object {
          "granularity": "daily",
        }
      }
      viewId="OpenShift"
    />
  </PageToolbar>
  <PageSection>
    <Connect(GraphCard)
      cardTitle="t(curiosity-graph.cardHeading)"
      filterGraphData={
        Array [
          Object {
            "color": "#06c",
            "fill": "#8bc1f7",
            "id": "cores",
            "stroke": "#06c",
          },
          Object {
            "id": "thresholdCores",
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      productShortLabel="OpenShift"
      query={
        Object {
          "granularity": "daily",
        }
      }
      viewId="OpenShift"
    >
      <Select
        ariaLabel="Select option"
        className=""
        id="generatedid-"
        isDisabled={false}
        isToggleText={true}
        name={null}
        onSelect={[Function]}
        options={
          Array [
            Object {
              "title": "Cores",
              "value": "cores",
            },
            Object {
              "title": "Sockets",
              "value": "sockets",
            },
          ]
        }
        placeholder="Select option"
        selectedOptions="cores"
        toggleIcon={null}
        variant="single"
      />
    </Connect(GraphCard)>
  </PageSection>
</PageLayout>
`;
