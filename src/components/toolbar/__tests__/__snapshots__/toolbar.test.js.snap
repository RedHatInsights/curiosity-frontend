// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Toolbar Component should handle displaying a group variant field: group variant, disabled 1`] = `
<Toolbar
  className="curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar"
  clearAllFilters={[Function]}
  clearFiltersButtonText="t(curiosity-toolbar.clearFilters)"
  collapseListedFiltersBreakpoint="sm"
  id="curiosity-toolbar"
>
  <ToolbarContent
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ToolbarToggleGroup
      breakpoint="md"
      toggleIcon={
        <FilterIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
    >
      <ForwardRef
        variant="filter-group"
      >
        <ToolbarFilter
          categoryName="t(curiosity-toolbar.label_filter, {"context":"sla"})"
          chips={[]}
          deleteChip={[Function]}
          showToolbarItem={true}
        >
          <Sla
            isFilter={true}
          />
        </ToolbarFilter>
      </ForwardRef>
    </ToolbarToggleGroup>
    <ForwardRef />
    <ForwardRef
      alignment={
        {
          "default": "alignRight",
        }
      }
    >
      <span>
        lorem ipsum
      </span>
    </ForwardRef>
  </ToolbarContent>
</Toolbar>
`;

exports[`Toolbar Component should handle displaying a group variant field: group variant, standalone 1`] = `
<ToolbarFieldGroupVariant
  isFilter={false}
  isStandalone={true}
  position="left"
  t={[Function]}
  useOnSelect={[Function]}
  useProduct={[Function]}
  useSelector={[Function]}
  useToolbarFieldOptions={[Function]}
/>
`;

exports[`Toolbar Component should handle displaying secondary components, fields: secondary 1`] = `
<Toolbar
  className="curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar"
  clearAllFilters={[Function]}
  clearFiltersButtonText="t(curiosity-toolbar.clearFilters)"
  collapseListedFiltersBreakpoint="sm"
  id="curiosity-toolbar"
>
  <ToolbarFieldGroupVariant
    isFilter={false}
    isStandalone={false}
    position="left"
    t={[Function]}
    useOnSelect={[Function]}
    useProduct={[Function]}
    useSelector={[Function]}
    useToolbarFieldOptions={[Function]}
  />
  <ToolbarContent
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ToolbarToggleGroup
      breakpoint="md"
      toggleIcon={
        <FilterIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
    >
      <ForwardRef
        variant="filter-group"
      >
        <ToolbarFilter
          categoryName="t(curiosity-toolbar.label_filter, {"context":"sla"})"
          chips={[]}
          deleteChip={[Function]}
          showToolbarItem={true}
        >
          <Sla
            isFilter={true}
          />
        </ToolbarFilter>
      </ForwardRef>
    </ToolbarToggleGroup>
    <ForwardRef />
    <ForwardRef
      alignment={
        {
          "default": "alignRight",
        }
      }
    >
      <span>
        lorem ipsum
      </span>
    </ForwardRef>
  </ToolbarContent>
</Toolbar>
`;

exports[`Toolbar Component should handle updating toolbar chips: chips 1`] = `
<div
  class="pf-c-chip"
  data-ouia-component-id="OUIA-Generated-Chip-1"
  data-ouia-component-type="PF4/Chip"
  data-ouia-safe="true"
>
  <span
    class="pf-c-chip__text"
    id="pf-random-id-3"
  >
    t(curiosity-toolbar.label_sla, {"context":"Premium"})
  </span>
  <button
    aria-disabled="false"
    aria-label="close"
    aria-labelledby="remove_pf-random-id-3 pf-random-id-3"
    class="pf-c-button pf-m-plain"
    data-ouia-component-id="close"
    data-ouia-component-type="PF4/Button"
    data-ouia-safe="true"
    id="remove_pf-random-id-3"
    type="button"
  >
    <svg
      aria-hidden="true"
      fill="currentColor"
      height="1em"
      role="img"
      style="vertical-align: -0.125em;"
      viewBox="0 0 352 512"
      width="1em"
    >
      <path
        d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
      />
    </svg>
  </button>
</div>
`;

exports[`Toolbar Component should handle updating toolbar chips: chips, not clearable 1`] = `null`;

exports[`Toolbar Component should hide categories when a single filter is available: single filter 1`] = `
<Toolbar
  className="curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar"
  clearAllFilters={[Function]}
  clearFiltersButtonText="t(curiosity-toolbar.clearFilters)"
  collapseListedFiltersBreakpoint="sm"
  id="curiosity-toolbar"
>
  <ToolbarFieldGroupVariant
    isFilter={false}
    isStandalone={false}
    position="left"
    t={[Function]}
    useOnSelect={[Function]}
    useProduct={[Function]}
    useSelector={[Function]}
    useToolbarFieldOptions={[Function]}
  />
  <ToolbarContent
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ToolbarToggleGroup
      breakpoint="md"
      toggleIcon={
        <FilterIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
    >
      <ForwardRef
        variant="filter-group"
      >
        <ToolbarFilter
          categoryName="t(curiosity-toolbar.label_filter, {"context":"sla"})"
          chips={[]}
          deleteChip={[Function]}
          showToolbarItem={true}
        >
          <Sla
            isFilter={true}
          />
        </ToolbarFilter>
      </ForwardRef>
    </ToolbarToggleGroup>
    <ForwardRef />
    <ForwardRef
      alignment={
        {
          "default": "alignRight",
        }
      }
    />
  </ToolbarContent>
</Toolbar>
`;

exports[`Toolbar Component should render a basic component: basic 1`] = `
<Toolbar
  className="curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar"
  clearAllFilters={[Function]}
  clearFiltersButtonText="t(curiosity-toolbar.clearFilters)"
  collapseListedFiltersBreakpoint="sm"
  id="curiosity-toolbar"
>
  <ToolbarFieldGroupVariant
    isFilter={false}
    isStandalone={false}
    position="left"
    t={[Function]}
    useOnSelect={[Function]}
    useProduct={[Function]}
    useSelector={[Function]}
    useToolbarFieldOptions={[Function]}
  />
  <ToolbarContent
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ToolbarToggleGroup
      breakpoint="md"
      toggleIcon={
        <FilterIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
    >
      <ForwardRef
        variant="filter-group"
      >
        <ToolbarItem>
          <ToolbarFieldSelectCategory
            t={[Function]}
            useOnSelect={[Function]}
            useSelectCategoryOptions={[Function]}
          />
        </ToolbarItem>
        <ToolbarFilter
          categoryName="t(curiosity-toolbar.label_filter, {"context":"sla"})"
          chips={[]}
          deleteChip={[Function]}
          showToolbarItem={false}
        >
          <Sla
            isFilter={true}
          />
        </ToolbarFilter>
        <ToolbarFilter
          categoryName="t(curiosity-toolbar.label_filter, {"context":"usage"})"
          chips={[]}
          deleteChip={[Function]}
          showToolbarItem={false}
        >
          <Usage
            isFilter={true}
          />
        </ToolbarFilter>
      </ForwardRef>
    </ToolbarToggleGroup>
    <ForwardRef />
    <ForwardRef
      alignment={
        {
          "default": "alignRight",
        }
      }
    />
  </ToolbarContent>
</Toolbar>
`;

exports[`Toolbar Component should return an empty render, or variant filter, when disabled or missing filters: disabled component 1`] = `null`;

exports[`Toolbar Component should return an empty render, or variant filter, when disabled or missing filters: missing filters, has variant filter 1`] = `
<ToolbarFieldGroupVariant
  isFilter={false}
  isStandalone={true}
  position="left"
  t={[Function]}
  useOnSelect={[Function]}
  useProduct={[Function]}
  useSelector={[Function]}
  useToolbarFieldOptions={[Function]}
/>
`;

exports[`Toolbar Component should return an empty render, or variant filter, when disabled or missing filters: missing primary, has secondary filters 1`] = `
<Toolbar
  className="curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar"
  clearAllFilters={[Function]}
  clearFiltersButtonText="t(curiosity-toolbar.clearFilters)"
  collapseListedFiltersBreakpoint="sm"
  id="curiosity-toolbar"
>
  <ToolbarFieldGroupVariant
    isFilter={false}
    isStandalone={false}
    position="left"
    t={[Function]}
    useOnSelect={[Function]}
    useProduct={[Function]}
    useSelector={[Function]}
    useToolbarFieldOptions={[Function]}
  />
  <ToolbarContent
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ToolbarToggleGroup
      breakpoint="md"
      toggleIcon={
        <FilterIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
    >
      <ForwardRef
        variant="filter-group"
      />
    </ToolbarToggleGroup>
    <ForwardRef />
    <ForwardRef
      alignment={
        {
          "default": "alignRight",
        }
      }
    >
      <span>
        lorem ipsum
      </span>
    </ForwardRef>
  </ToolbarContent>
</Toolbar>
`;
