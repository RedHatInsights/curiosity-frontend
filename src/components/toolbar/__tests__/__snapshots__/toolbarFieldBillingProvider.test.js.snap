// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToolbarFieldBillingProvider Component should generate select options: toolbarFieldOptions 1`] = `
[
  {
    "isSelected": true,
    "title": "t(curiosity-toolbar.label_billing_provider, {"context":"mock billing provider","value":"mock billing provider"})",
    "value": "mock billing provider",
  },
]
`;

exports[`ToolbarFieldBillingProvider Component should handle updating through redux state with component: dispatch, component 1`] = `
[
  [
    [
      {
        "type": "SET_QUERY_RESET_INVENTORY_LIST",
        "viewId": undefined,
      },
      {
        "filter": "billing_account_id",
        "type": "SET_QUERY",
        "value": undefined,
        "viewId": undefined,
      },
      {
        "filter": "billing_provider",
        "type": "SET_QUERY",
        "value": "lorem ipsum provider",
        "viewId": undefined,
      },
    ],
  ],
]
`;

exports[`ToolbarFieldBillingProvider Component should handle updating through redux state with hook: dispatch, hook 1`] = `
[
  [
    [
      {
        "type": "SET_QUERY_RESET_INVENTORY_LIST",
        "viewId": "mock-product-id",
      },
      {
        "filter": "billing_account_id",
        "type": "SET_QUERY",
        "value": undefined,
        "viewId": "mock-product-id",
      },
      {
        "filter": "billing_provider",
        "type": "SET_QUERY",
        "value": "dolor sit",
        "viewId": "mock-product-id",
      },
    ],
  ],
  [
    [
      {
        "type": "SET_QUERY_RESET_INVENTORY_LIST",
        "viewId": "mock-product-id",
      },
      {
        "filter": "billing_account_id",
        "type": "SET_QUERY",
        "value": undefined,
        "viewId": "mock-product-id",
      },
      {
        "filter": "billing_provider",
        "type": "SET_QUERY",
        "value": "lorem ipsum",
        "viewId": "mock-product-id",
      },
    ],
  ],
]
`;

exports[`ToolbarFieldBillingProvider Component should render a basic component: basic 1`] = `
<React.Fragment>
  <ToolbarItem
    gap={
      {
        "default": "gapNone",
      }
    }
  >
    <Select
      alignment={
        {
          "position": "left",
        }
      }
      aria-label="t(curiosity-toolbar.placeholder_billing, {"context":"provider"})"
      data-test="toolbarFieldBillingProvider"
      onSelect={[Function]}
      options={[]}
      placeholder="t(curiosity-toolbar.placeholder_billing, {"context":"provider"})"
      selectedOptions="aws"
    />
  </ToolbarItem>
  <ToolbarItem>
    <ToolbarFieldBillingAccount />
  </ToolbarItem>
</React.Fragment>
`;
