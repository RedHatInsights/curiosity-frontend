// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RhelView Component should display an alternate graph on query-string update: alternate graph 1`] = `
<PageLayout>
  <PageHeader
    productLabel="RHEL"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscription Watch","context":"RHEL"})
  </PageHeader>
  <PageToolbar>
    <Connect(Toolbar)
      filterOptions={
        Array [
          Object {
            "id": "sla",
          },
          Object {
            "id": "usage",
            "selected": true,
          },
        ]
      }
      productId="lorem ipsum"
      query={
        Object {
          "dir": "desc",
          "granularity": "daily",
          "limit": 10,
          "offset": 0,
          "sort": "last_seen",
        }
      }
      viewId="viewRHEL"
    />
  </PageToolbar>
  <PageSection>
    <Connect(C3GraphCard)
      cardTitle="t(curiosity-graph.socketsHeading)"
      filterGraphData={
        Array [
          Object {
            "color": "#06c",
            "fill": "#8bc1f7",
            "id": "physicalSockets",
            "stroke": "#06c",
          },
          Object {
            "color": "#009596",
            "fill": "#a2d9d9",
            "id": "hypervisorSockets",
            "stroke": "#009596",
          },
          Object {
            "color": "#5752d1",
            "fill": "#b2b0ea",
            "id": "cloudSockets",
            "stroke": "#5752d1",
          },
          Object {
            "id": "thresholdSockets",
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      productShortLabel="RHEL"
      query={
        Object {
          "granularity": "daily",
        }
      }
      viewId="viewRHEL"
    />
  </PageSection>
  <PageSection>
    <Connect(InventoryList)
      cardTitle="t(curiosity-inventory.cardHeading)"
      filterGuestsData={
        Array [
          Object {
            "cell": [Function],
            "header": "t(curiosity-inventory.header, {\\"context\\":\\"guestsDisplayName\\"})",
            "id": "displayName",
          },
          Object {
            "id": "inventoryId",
          },
          Object {
            "cell": [Function],
            "id": "lastSeen",
          },
        ]
      }
      filterInventoryData={
        Array [
          Object {
            "cell": [Function],
            "id": "displayName",
            "isSortable": true,
          },
          Object {
            "cell": [Function],
            "id": "measurementType",
            "isSortable": false,
          },
          Object {
            "id": "sockets",
            "isSortable": true,
          },
          Object {
            "cell": [Function],
            "id": "lastSeen",
            "isSortable": true,
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      query={
        Object {
          "dir": "desc",
          "limit": 10,
          "offset": 0,
          "sort": "last_seen",
        }
      }
      viewId="viewRHEL"
    />
  </PageSection>
</PageLayout>
`;

exports[`RhelView Component should have a fallback title: title 1`] = `
<PageLayout>
  <PageHeader
    productLabel="RHEL"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscription Watch","context":"RHEL"})
  </PageHeader>
  <PageToolbar>
    <Connect(Toolbar)
      filterOptions={
        Array [
          Object {
            "id": "sla",
          },
          Object {
            "id": "usage",
            "selected": true,
          },
        ]
      }
      productId="lorem ipsum"
      query={
        Object {
          "dir": "desc",
          "granularity": "daily",
          "limit": 10,
          "offset": 0,
          "sort": "last_seen",
        }
      }
      viewId="viewRHEL"
    />
  </PageToolbar>
  <PageSection>
    <Connect(GraphCard)
      cardTitle="t(curiosity-graph.socketsHeading)"
      filterGraphData={
        Array [
          Object {
            "color": "#06c",
            "fill": "#8bc1f7",
            "id": "physicalSockets",
            "stroke": "#06c",
          },
          Object {
            "color": "#009596",
            "fill": "#a2d9d9",
            "id": "hypervisorSockets",
            "stroke": "#009596",
          },
          Object {
            "color": "#5752d1",
            "fill": "#b2b0ea",
            "id": "cloudSockets",
            "stroke": "#5752d1",
          },
          Object {
            "id": "thresholdSockets",
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      productLabel="RHEL"
      query={
        Object {
          "granularity": "daily",
        }
      }
      viewId="viewRHEL"
    />
  </PageSection>
  <PageSection>
    <Connect(InventoryList)
      cardTitle="t(curiosity-inventory.cardHeading)"
      filterGuestsData={
        Array [
          Object {
            "cell": [Function],
            "header": "t(curiosity-inventory.header, {\\"context\\":\\"guestsDisplayName\\"})",
            "id": "displayName",
          },
          Object {
            "id": "inventoryId",
          },
          Object {
            "cell": [Function],
            "id": "lastSeen",
          },
        ]
      }
      filterInventoryData={
        Array [
          Object {
            "cell": [Function],
            "id": "displayName",
            "isSortable": true,
          },
          Object {
            "cell": [Function],
            "id": "measurementType",
            "isSortable": false,
          },
          Object {
            "id": "sockets",
            "isSortable": true,
          },
          Object {
            "cell": [Function],
            "id": "lastSeen",
            "isSortable": true,
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      query={
        Object {
          "dir": "desc",
          "limit": 10,
          "offset": 0,
          "sort": "last_seen",
        }
      }
      viewId="viewRHEL"
    />
  </PageSection>
</PageLayout>
`;

exports[`RhelView Component should have default props that set product configuration: filteredGuestsData results 1`] = `
Object {
  "cells": Array [
    "lorem",
    "lorem inventory id",
    <DateFormat
      date="lorem date obj"
    />,
  ],
  "columnHeaders": Array [
    "t(curiosity-inventory.header, {\\"context\\":\\"guestsDisplayName\\"})",
    "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
    "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
  ],
  "data": Object {
    "displayName": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
      "value": "lorem",
    },
    "inventoryId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
      "value": "lorem inventory id",
    },
    "lastSeen": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "value": "lorem date obj",
    },
    "loremIpsum": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"loremIpsum\\"})",
      "value": "hello world",
    },
    "subscriptionManagerId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"subscriptionManagerId\\"})",
      "value": "lorem subscription id",
    },
  },
}
`;

exports[`RhelView Component should have default props that set product configuration: filteredGuestsData results, authorized 1`] = `
Object {
  "cells": Array [
    <Button
      component="a"
      href="/insights/inventory/lorem inventory id/"
      isInline={true}
      target="_blank"
      variant="link"
    >
      lorem
    </Button>,
    "lorem inventory id",
    <DateFormat
      date="lorem date obj"
    />,
  ],
  "columnHeaders": Array [
    "t(curiosity-inventory.header, {\\"context\\":\\"guestsDisplayName\\"})",
    "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
    "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
  ],
  "data": Object {
    "displayName": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
      "value": "lorem",
    },
    "inventoryId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
      "value": "lorem inventory id",
    },
    "lastSeen": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "value": "lorem date obj",
    },
    "loremIpsum": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"loremIpsum\\"})",
      "value": "hello world",
    },
    "subscriptionManagerId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"subscriptionManagerId\\"})",
      "value": "lorem subscription id",
    },
  },
}
`;

exports[`RhelView Component should have default props that set product configuration: filteredInventoryData results 1`] = `
Object {
  "cells": Array [
    <React.Fragment>
      lorem
       
      t(curiosity-inventory.label, {"context":"numberOfGuests","count":3}, [object Object])
    </React.Fragment>,
    <React.Fragment>
      t(curiosity-inventory.measurementType, {"context":null})
       
      
    </React.Fragment>,
    10,
    <DateFormat
      date="lorem date obj"
    />,
  ],
  "columnHeaders": Array [
    "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
    "t(curiosity-inventory.header, {\\"context\\":\\"measurementType\\"})",
    "t(curiosity-inventory.header, {\\"context\\":\\"sockets\\"})",
    "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
  ],
  "data": Object {
    "cores": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"cores\\"})",
      "value": 12,
    },
    "displayName": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
      "value": "lorem",
    },
    "hardwareType": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"hardwareType\\"})",
      "value": "ipsum",
    },
    "inventoryId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
      "value": "lorem inventory id",
    },
    "lastSeen": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "value": "lorem date obj",
    },
    "loremIpsum": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"loremIpsum\\"})",
      "value": "hello world",
    },
    "measurementType": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"measurementType\\"})",
      "value": null,
    },
    "numberOfGuests": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"numberOfGuests\\"})",
      "value": 3,
    },
    "sockets": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"sockets\\"})",
      "value": 10,
    },
  },
}
`;

exports[`RhelView Component should have default props that set product configuration: filteredInventoryData results, authorized 1`] = `
Object {
  "cells": Array [
    <Button
      component="a"
      href="/insights/inventory/lorem inventory id/"
      isInline={true}
      target="_blank"
      variant="link"
    >
      lorem
       
      t(curiosity-inventory.label, {"context":"numberOfGuests","count":3}, [object Object])
    </Button>,
    <React.Fragment>
      t(curiosity-inventory.measurementType, {"context":null})
       
      
    </React.Fragment>,
    10,
    <DateFormat
      date="lorem date obj"
    />,
  ],
  "columnHeaders": Array [
    "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
    "t(curiosity-inventory.header, {\\"context\\":\\"measurementType\\"})",
    "t(curiosity-inventory.header, {\\"context\\":\\"sockets\\"})",
    "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
  ],
  "data": Object {
    "cores": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"cores\\"})",
      "value": 12,
    },
    "displayName": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
      "value": "lorem",
    },
    "hardwareType": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"hardwareType\\"})",
      "value": "ipsum",
    },
    "inventoryId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
      "value": "lorem inventory id",
    },
    "lastSeen": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "value": "lorem date obj",
    },
    "loremIpsum": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"loremIpsum\\"})",
      "value": "hello world",
    },
    "measurementType": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"measurementType\\"})",
      "value": null,
    },
    "numberOfGuests": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"numberOfGuests\\"})",
      "value": 3,
    },
    "sockets": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"sockets\\"})",
      "value": 10,
    },
  },
}
`;

exports[`RhelView Component should have default props that set product configuration: initial configuration 1`] = `
Object {
  "initialGraphFilters": Array [
    Object {
      "color": "#06c",
      "fill": "#8bc1f7",
      "id": "physicalSockets",
      "stroke": "#06c",
    },
    Object {
      "color": "#009596",
      "fill": "#a2d9d9",
      "id": "hypervisorSockets",
      "stroke": "#009596",
    },
    Object {
      "color": "#5752d1",
      "fill": "#b2b0ea",
      "id": "cloudSockets",
      "stroke": "#5752d1",
    },
    Object {
      "id": "thresholdSockets",
    },
  ],
  "initialGuestsFilters": Array [
    Object {
      "cell": [Function],
      "header": "t(curiosity-inventory.header, {\\"context\\":\\"guestsDisplayName\\"})",
      "id": "displayName",
    },
    Object {
      "id": "inventoryId",
    },
    Object {
      "cell": [Function],
      "id": "lastSeen",
    },
  ],
  "initialInventoryFilters": Array [
    Object {
      "cell": [Function],
      "id": "displayName",
      "isSortable": true,
    },
    Object {
      "cell": [Function],
      "id": "measurementType",
      "isSortable": false,
    },
    Object {
      "id": "sockets",
      "isSortable": true,
    },
    Object {
      "cell": [Function],
      "id": "lastSeen",
      "isSortable": true,
    },
  ],
  "query": Object {
    "dir": "desc",
    "granularity": "daily",
    "limit": 10,
    "offset": 0,
    "sort": "last_seen",
  },
}
`;

exports[`RhelView Component should render a non-connected component: non-connected 1`] = `
<PageLayout>
  <PageHeader
    productLabel="RHEL"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscription Watch","context":"RHEL"})
  </PageHeader>
  <PageToolbar>
    <Connect(Toolbar)
      filterOptions={
        Array [
          Object {
            "id": "sla",
          },
          Object {
            "id": "usage",
            "selected": true,
          },
        ]
      }
      productId="lorem ipsum"
      query={
        Object {
          "dir": "desc",
          "granularity": "daily",
          "limit": 10,
          "offset": 0,
          "sort": "last_seen",
        }
      }
      viewId="viewRHEL"
    />
  </PageToolbar>
  <PageSection>
    <Connect(GraphCard)
      cardTitle="t(curiosity-graph.socketsHeading)"
      filterGraphData={
        Array [
          Object {
            "color": "#06c",
            "fill": "#8bc1f7",
            "id": "physicalSockets",
            "stroke": "#06c",
          },
          Object {
            "color": "#009596",
            "fill": "#a2d9d9",
            "id": "hypervisorSockets",
            "stroke": "#009596",
          },
          Object {
            "color": "#5752d1",
            "fill": "#b2b0ea",
            "id": "cloudSockets",
            "stroke": "#5752d1",
          },
          Object {
            "id": "thresholdSockets",
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      productLabel="RHEL"
      query={
        Object {
          "granularity": "daily",
        }
      }
      viewId="viewRHEL"
    />
  </PageSection>
  <PageSection>
    <Connect(InventoryList)
      cardTitle="t(curiosity-inventory.cardHeading)"
      filterGuestsData={
        Array [
          Object {
            "cell": [Function],
            "header": "t(curiosity-inventory.header, {\\"context\\":\\"guestsDisplayName\\"})",
            "id": "displayName",
          },
          Object {
            "id": "inventoryId",
          },
          Object {
            "cell": [Function],
            "id": "lastSeen",
          },
        ]
      }
      filterInventoryData={
        Array [
          Object {
            "cell": [Function],
            "id": "displayName",
            "isSortable": true,
          },
          Object {
            "cell": [Function],
            "id": "measurementType",
            "isSortable": false,
          },
          Object {
            "id": "sockets",
            "isSortable": true,
          },
          Object {
            "cell": [Function],
            "id": "lastSeen",
            "isSortable": true,
          },
        ]
      }
      key="lorem ipsum"
      productId="lorem ipsum"
      query={
        Object {
          "dir": "desc",
          "limit": 10,
          "offset": 0,
          "sort": "last_seen",
        }
      }
      viewId="viewRHEL"
    />
  </PageSection>
</PageLayout>
`;
