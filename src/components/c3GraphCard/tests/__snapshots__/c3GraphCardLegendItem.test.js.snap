// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`C3GraphCardLegendItem Component should be able to display both threshold and disabling icons: disabled 1`] = `
<Component
  component="a"
  icon={
    <EyeSlashIcon
      color="currentColor"
      noVerticalAlign={false}
      size="sm"
      title={null}
    />
  }
  isDisabled={true}
  key="curiosity-button-lorem"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyPress={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  tabIndex={0}
  variant="link"
/>
`;

exports[`C3GraphCardLegendItem Component should be able to display both threshold and disabling icons: threshold 1`] = `
<Component
  component="a"
  icon={
    <hr
      aria-hidden={true}
      className="threshold-legend-icon"
      style={
        Object {
          "borderTopColor": undefined,
          "visibility": "visible",
        }
      }
    />
  }
  isDisabled={false}
  key="curiosity-button-lorem"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyPress={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  tabIndex={0}
  variant="link"
/>
`;

exports[`C3GraphCardLegendItem Component should handle focus, revert, and toggle chart events while reading and updating state: toggle OFF 1`] = `
Object {
  "updatedIsToggled": false,
}
`;

exports[`C3GraphCardLegendItem Component should handle focus, revert, and toggle chart events while reading and updating state: toggle ON 1`] = `
Object {
  "updatedIsToggled": true,
}
`;

exports[`C3GraphCardLegendItem Component should render a non-connected component: non-connected 1`] = `
<Component
  component="a"
  icon={
    <div
      aria-hidden={true}
      className="legend-icon"
      style={
        Object {
          "backgroundColor": undefined,
          "visibility": "visible",
        }
      }
    />
  }
  isDisabled={false}
  key="curiosity-button-lorem"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyPress={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  tabIndex={0}
  variant="link"
>
  lorem ipsum
</Component>
`;

exports[`C3GraphCardLegendItem Component should render a tooltip with button: tooltip 1`] = `
<Tooltip
  appendTo={[Function]}
  aria="describedby"
  boundary="window"
  className=""
  content={
    <div>
      lorem ipsum
    </div>
  }
  distance={-10}
  enableFlip={true}
  entryDelay={100}
  exitDelay={0}
  flipBehavior={
    Array [
      "top",
      "right",
      "bottom",
      "left",
      "top",
      "right",
      "bottom",
    ]
  }
  id=""
  isAppLauncher={false}
  isContentLeftAligned={false}
  isVisible={false}
  key="curiosity-tooltip-lorem"
  maxWidth="18.75rem"
  position="top"
  tippyProps={Object {}}
  trigger="mouseenter focus"
  zIndex={9999}
>
  <Component
    component="a"
    icon={
      <div
        aria-hidden={true}
        className="legend-icon"
        style={
          Object {
            "backgroundColor": undefined,
            "visibility": "visible",
          }
        }
      />
    }
    isDisabled={false}
    key="curiosity-button-lorem"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyPress={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    tabIndex={0}
    variant="link"
  />
</Tooltip>
`;
