// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InventoryListHelpers applyConfigProperty should determine if filter property is valid and return it or undefined: prop invalid, null 1`] = `undefined`;

exports[`InventoryListHelpers applyConfigProperty should determine if filter property is valid and return it or undefined: prop valid, function 1`] = `"ipsum"`;

exports[`InventoryListHelpers applyConfigProperty should determine if filter property is valid and return it or undefined: prop valid, number 1`] = `1000`;

exports[`InventoryListHelpers applyConfigProperty should determine if filter property is valid and return it or undefined: prop valid, string 1`] = `"hello world"`;

exports[`InventoryListHelpers applySortFilters should apply and return updated filters for table sorting: NOT sortable 1`] = `
Object {
  "id": "lorem",
  "isSortable": false,
}
`;

exports[`InventoryListHelpers applySortFilters should apply and return updated filters for table sorting: sortable 1`] = `
Object {
  "id": "lorem",
  "isSortable": true,
  "onSort": [Function],
}
`;

exports[`InventoryListHelpers applySortFilters should apply and return updated filters for table sorting: sortable, active column 1`] = `
Object {
  "id": "lorem",
  "isSortable": true,
  "onSort": [Function],
  "sortActive": true,
  "sortDirection": "asc",
}
`;

exports[`InventoryListHelpers applySortFilters should apply and return updated filters for table sorting: sortable, direction 1`] = `
Object {
  "ascending": Object {
    "id": "lorem",
    "isSortable": true,
    "onSort": [Function],
    "sortDirection": "asc",
  },
  "descending": Object {
    "id": "lorem",
    "isSortable": true,
    "onSort": [Function],
    "sortDirection": "desc",
  },
}
`;

exports[`InventoryListHelpers applySortFilters should apply and return updated filters for table sorting: sortable, set a default field 1`] = `
Object {
  "id": "lorem",
  "isSortDefault": true,
  "isSortable": true,
  "onSort": [Function],
  "sortActive": true,
  "sortDefaultInitialDirection": "lorem",
  "sortDirection": "lorem",
}
`;

exports[`InventoryListHelpers applyWrappableFilters should apply and return updated filters for table header wrapping: NOT wrappable header 1`] = `
Array [
  Object {
    "id": "lorem",
    "isWrappable": false,
  },
]
`;

exports[`InventoryListHelpers applyWrappableFilters should apply and return updated filters for table header wrapping: append/push a wrappable transform 1`] = `
Object {
  "id": "lorem",
  "isWrappable": true,
  "transforms": Array [
    "lorem",
    [Function],
  ],
}
`;

exports[`InventoryListHelpers applyWrappableFilters should apply and return updated filters for table header wrapping: apply default wrappable transform 1`] = `
Object {
  "id": "lorem",
  "isWrappable": true,
  "transforms": Array [
    [Function],
  ],
}
`;

exports[`InventoryListHelpers applyWrappableFilters should apply and return updated filters for table header wrapping: wrappable header 1`] = `
Array [
  Object {
    "id": "lorem",
    "isWrappable": true,
    "transforms": Array [
      [Function],
    ],
  },
]
`;

exports[`InventoryListHelpers parseInventoryFilters should parse and return updated filters for table cells: NOT sortable 1`] = `
Array [
  Object {
    "id": "lorem",
    "isSortable": false,
  },
]
`;

exports[`InventoryListHelpers parseInventoryFilters should parse and return updated filters for table cells: sortable 1`] = `
Array [
  Object {
    "id": "lorem",
    "isSortable": true,
    "onSort": [Function],
  },
]
`;

exports[`InventoryListHelpers parseRowCellsListData should parse and return formatted/filtered table cells.: basic cell data 1`] = `
Object {
  "cells": Array [
    "ipsum",
    "sit",
  ],
  "columnHeaders": Array [
    "t(curiosity-inventory.header, {\\"context\\":\\"lorem\\"})",
    "t(curiosity-inventory.header, {\\"context\\":\\"dolor\\"})",
  ],
  "data": Object {
    "dolor": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"dolor\\"})",
      "value": "sit",
    },
    "lorem": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lorem\\"})",
      "value": "ipsum",
    },
  },
}
`;

exports[`InventoryListHelpers parseRowCellsListData should parse and return formatted/filtered table cells.: custom callback data 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "ipsum/sit",
    },
  ],
  "columnHeaders": Array [
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lorem\\"})/t(curiosity-inventory.header, {\\"context\\":\\"dolor\\"})",
      "transforms": Array [],
    },
  ],
  "data": Object {
    "dolor": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"dolor\\"})",
      "value": "sit",
    },
    "lorem": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lorem\\"})",
      "value": "ipsum",
    },
  },
}
`;

exports[`InventoryListHelpers parseRowCellsListData should parse and return formatted/filtered table cells.: custom cell data 1`] = `
Object {
  "cells": Array [
    Object {
      "props": Object {
        "textCenter": true,
      },
      "title": "object, cell, lorem",
    },
  ],
  "columnHeaders": Array [
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lorem\\"})",
      "transforms": Array [],
    },
  ],
  "data": Object {
    "dolor": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"dolor\\"})",
      "value": "sit",
    },
    "lorem": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lorem\\"})",
      "value": "ipsum",
    },
  },
}
`;

exports[`InventoryListHelpers parseRowCellsListData should parse and return formatted/filtered table cells.: custom cell tooltips 1`] = `
Object {
  "cells": Array [
    Object {
      "title": <Tooltip
        content="tooltip body content"
        distance={5}
        enableFlip={false}
        entryDelay={100}
        exitDelay={0}
        isNoWrap={false}
        position="top"
      >
        object, body, lorem
      </Tooltip>,
    },
  ],
  "columnHeaders": Array [
    Object {
      "title": <Tooltip
        content="tooltip header content"
        distance={5}
        enableFlip={false}
        entryDelay={100}
        exitDelay={0}
        isNoWrap={false}
        position="top"
      >
        object, header, lorem
      </Tooltip>,
      "transforms": Array [],
    },
  ],
  "data": Object {
    "dolor": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"dolor\\"})",
      "value": "sit",
    },
    "lorem": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lorem\\"})",
      "value": "ipsum",
    },
  },
}
`;

exports[`InventoryListHelpers parseRowCellsListData should parse and return formatted/filtered table cells.: custom cell, hide cell and column header if data is missing 1`] = `
Object {
  "cells": Array [],
  "columnHeaders": Array [],
  "data": Object {},
}
`;

exports[`InventoryListHelpers parseRowCellsListData should parse and return formatted/filtered table cells.: custom cell, use an empty cell if data is missing 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "",
    },
  ],
  "columnHeaders": Array [
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"missing\\"})",
      "transforms": Array [],
    },
  ],
  "data": Object {
    "hello": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"hello\\"})",
      "value": "world",
    },
  },
}
`;

exports[`InventoryListHelpers parseRowCellsListData should parse and return formatted/filtered table cells.: custom header data 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "ipsum",
    },
  ],
  "columnHeaders": Array [
    Object {
      "props": Object {
        "textCenter": true,
      },
      "title": "object, header, lorem",
      "transforms": Array [],
    },
  ],
  "data": Object {
    "dolor": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"dolor\\"})",
      "value": "sit",
    },
    "lorem": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lorem\\"})",
      "value": "ipsum",
    },
  },
}
`;

exports[`InventoryListHelpers parseRowCellsListData should parse and return formatted/filtered table cells.: custom sort 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "ipsum",
    },
  ],
  "columnHeaders": Array [
    Object {
      "onSort": [Function],
      "sortActive": undefined,
      "sortDirection": undefined,
      "title": "header, lorem sort",
      "transforms": Array [],
    },
  ],
  "data": Object {
    "dolor": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"dolor\\"})",
      "value": "sit",
    },
    "lorem": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lorem\\"})",
      "value": "ipsum",
    },
  },
}
`;

exports[`InventoryListHelpers parseRowCellsListData should parse and return formatted/filtered table cells.: filtered data 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "ipsum",
    },
  ],
  "columnHeaders": Array [
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lorem\\"})",
      "transforms": Array [],
    },
  ],
  "data": Object {
    "dolor": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"dolor\\"})",
      "value": "sit",
    },
    "lorem": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lorem\\"})",
      "value": "ipsum",
    },
  },
}
`;

exports[`InventoryListHelpers should have specific functions: inventoryListHelpers 1`] = `
Object {
  "applyConfigProperty": [Function],
  "applyHeaderRowCellFilters": [Function],
  "applySortFilters": [Function],
  "applyWrappableFilters": [Function],
  "parseInventoryFilters": [Function],
  "parseRowCellsListData": [Function],
}
`;
