// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InventoryCard Component should handle expandable guests data: number of guests 1`] = `
<tbody
  class=""
  role="rowgroup"
>
  <tr
    class=""
    data-ouia-component-id="OUIA-Generated-TableRow-5"
    data-ouia-component-type="PF4/TableRow"
    data-ouia-safe="true"
  >
    <td
      class=""
      data-key="0"
      data-label="t(curiosity-inventory.header, {"context":"lorem"})"
    >
      sit
    </td>
    <td
      class=""
      data-key="1"
      data-label="t(curiosity-inventory.header, {"context":"dolor"})"
    >
      amet
    </td>
    <td
      class=""
      data-key="2"
      data-label="t(curiosity-inventory.header, {"context":"numberOfGuests"})"
    >
      1
    </td>
  </tr>
</tbody>
`;

exports[`InventoryCard Component should handle expandable guests data: number of guests, and id 1`] = `
<tbody
  class=""
  role="rowgroup"
>
  <tr
    class=""
    data-ouia-component-id="OUIA-Generated-TableRow-7"
    data-ouia-component-type="PF4/TableRow"
    data-ouia-safe="true"
  >
    <td
      class="pf-c-table__toggle"
      data-key="0"
    >
      <button
        aria-disabled="false"
        aria-expanded="false"
        aria-label="Details"
        aria-labelledby="simple-node0 expandable-toggle0"
        class="pf-c-button pf-m-plain"
        data-ouia-component-id="OUIA-Generated-Button-plain-19"
        data-ouia-component-type="PF4/Button"
        data-ouia-safe="true"
        id="expandable-toggle0"
        type="button"
      >
        <div
          class="pf-c-table__toggle-icon"
        >
          <svg
            aria-hidden="true"
            fill="currentColor"
            height="1em"
            role="img"
            style="vertical-align: -0.125em;"
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
            />
          </svg>
        </div>
      </button>
    </td>
    <td
      class=""
      data-key="1"
      data-label="t(curiosity-inventory.header, {"context":"lorem"})"
    >
      sit
    </td>
    <td
      class=""
      data-key="2"
      data-label="t(curiosity-inventory.header, {"context":"dolor"})"
    >
      amet
    </td>
    <td
      class=""
      data-key="3"
      data-label="t(curiosity-inventory.header, {"context":"numberOfGuests"})"
    >
      1
    </td>
    <td
      class=""
      data-key="4"
      data-label="t(curiosity-inventory.header, {"context":"subscriptionManagerId"})"
    >
      loremIpsum
    </td>
  </tr>
  <tr
    class="pf-c-table__expandable-row"
    data-ouia-component-id="OUIA-Generated-TableRow-8"
    data-ouia-component-type="PF4/TableRow"
    data-ouia-safe="true"
    hidden=""
  >
    <td
      class=""
      colspan="6"
      data-key="0"
      id="expanded-content1"
    />
  </tr>
</tbody>
`;

exports[`InventoryCard Component should handle expandable guests data: number of guests, id, and NO expandable guests display 1`] = `
<tbody
  class=""
  role="rowgroup"
>
  <tr
    class=""
    data-ouia-component-id="OUIA-Generated-TableRow-10"
    data-ouia-component-type="PF4/TableRow"
    data-ouia-safe="true"
  >
    <td
      class=""
      data-key="0"
      data-label="t(curiosity-inventory.header, {"context":"lorem"})"
    >
      sit
    </td>
    <td
      class=""
      data-key="1"
      data-label="t(curiosity-inventory.header, {"context":"dolor"})"
    >
      amet
    </td>
    <td
      class=""
      data-key="2"
      data-label="t(curiosity-inventory.header, {"context":"numberOfGuests"})"
    >
      2
    </td>
    <td
      class=""
      data-key="3"
      data-label="t(curiosity-inventory.header, {"context":"subscriptionManagerId"})"
    >
      loremIpsum
    </td>
  </tr>
</tbody>
`;

exports[`InventoryCard Component should handle multiple display states, error, pending, fulfilled: error 1`] = `
<Card
  className="curiosity-inventory-card"
>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardHeader
      aria-hidden={true}
      className="hidden"
    >
      <CardHeaderMain>
        <ToolbarFieldDisplayName
          t={[Function]}
          useDispatch={[Function]}
          useProduct={[Function]}
          useProductInventoryHostsQuery={[Function]}
        />
      </CardHeaderMain>
      <CardActions
        aria-hidden={true}
        className="transparent"
      >
        <Pagination
          dropDirection="down"
          isCompact={true}
          isDisabled={true}
          itemCount={0}
          offset={0}
          onPage={[Function]}
          onPerPage={[Function]}
          perPage={10}
          variant={null}
        />
      </CardActions>
    </CardHeader>
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardBody>
      <div
        className="blur"
      >
        <Table
          ariaLabel={null}
          borders={true}
          className="curiosity-inventory-list"
          columnHeaders={[]}
          isHeader={true}
          rows={[]}
          summary={null}
          t={[Function]}
          variant="compact"
        />
      </div>
    </CardBody>
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardFooter
      aria-hidden={true}
      className="hidden"
    >
      <TableToolbar
        isFooter={true}
      >
        <Pagination
          dropDirection="up"
          isCompact={false}
          isDisabled={true}
          itemCount={0}
          offset={0}
          onPage={[Function]}
          onPerPage={[Function]}
          perPage={10}
          variant={null}
        />
      </TableToolbar>
    </CardFooter>
  </MinHeight>
</Card>
`;

exports[`InventoryCard Component should handle multiple display states, error, pending, fulfilled: fulfilled 1`] = `
<Card
  className="curiosity-inventory-card"
>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardHeader
      aria-hidden={false}
      className=""
    >
      <CardHeaderMain>
        <ToolbarFieldDisplayName
          t={[Function]}
          useDispatch={[Function]}
          useProduct={[Function]}
          useProductInventoryHostsQuery={[Function]}
        />
      </CardHeaderMain>
      <CardActions
        aria-hidden={false}
        className=""
      >
        <Pagination
          dropDirection="down"
          isCompact={true}
          isDisabled={false}
          itemCount={2}
          offset={0}
          onPage={[Function]}
          onPerPage={[Function]}
          perPage={10}
          variant={null}
        />
      </CardActions>
    </CardHeader>
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardBody>
      <div
        className=""
      >
        <Table
          ariaLabel={null}
          borders={true}
          className="curiosity-inventory-list"
          columnHeaders={
            [
              "t(curiosity-inventory.header, {"context":"lorem"})",
              "t(curiosity-inventory.header, {"context":"dolor"})",
            ]
          }
          isHeader={true}
          rows={
            [
              {
                "cells": [
                  "ipsum",
                  "sit",
                ],
                "expandedContent": undefined,
              },
              {
                "cells": [
                  "sit",
                  "amet",
                ],
                "expandedContent": undefined,
              },
            ]
          }
          summary={null}
          t={[Function]}
          variant="compact"
        />
      </div>
    </CardBody>
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardFooter
      aria-hidden={false}
      className=""
    >
      <TableToolbar
        isFooter={true}
      >
        <Pagination
          dropDirection="up"
          isCompact={false}
          isDisabled={false}
          itemCount={2}
          offset={0}
          onPage={[Function]}
          onPerPage={[Function]}
          perPage={10}
          variant={null}
        />
      </TableToolbar>
    </CardFooter>
  </MinHeight>
</Card>
`;

exports[`InventoryCard Component should handle multiple display states, error, pending, fulfilled: pending 1`] = `
<Card
  className="curiosity-inventory-card"
>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardHeader
      aria-hidden={false}
      className=""
    >
      <CardHeaderMain>
        <ToolbarFieldDisplayName
          t={[Function]}
          useDispatch={[Function]}
          useProduct={[Function]}
          useProductInventoryHostsQuery={[Function]}
        />
      </CardHeaderMain>
      <CardActions
        aria-hidden={true}
        className="transparent"
      >
        <Pagination
          dropDirection="down"
          isCompact={true}
          isDisabled={true}
          itemCount={0}
          offset={0}
          onPage={[Function]}
          onPerPage={[Function]}
          perPage={10}
          variant={null}
        />
      </CardActions>
    </CardHeader>
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardBody>
      <div
        className="fadein"
      >
        <Loader
          skeletonProps={
            {
              "size": "sm",
            }
          }
          tableProps={
            {
              "className": "curiosity-inventory-list",
              "colCount": 1,
              "colWidth": [],
              "rowCount": 10,
              "variant": "compact",
            }
          }
          variant="table"
        />
      </div>
    </CardBody>
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardFooter
      aria-hidden={true}
      className="transparent"
    >
      <TableToolbar
        isFooter={true}
      >
        <Pagination
          dropDirection="up"
          isCompact={false}
          isDisabled={true}
          itemCount={0}
          offset={0}
          onPage={[Function]}
          onPerPage={[Function]}
          perPage={10}
          variant={null}
        />
      </TableToolbar>
    </CardFooter>
  </MinHeight>
</Card>
`;

exports[`InventoryCard Component should handle variations in data: filtered data 1`] = `
<table
  aria-label="t(curiosity-inventory.tableAriaLabel, {"appName":"Subscriptions"})"
  class="curiosity-table curiosity-inventory-list pf-c-table pf-m-grid-md pf-m-compact"
  data-ouia-component-id="OUIA-Generated-Table-2"
  data-ouia-component-type="PF4/Table"
  data-ouia-safe="true"
  role="grid"
  summary="t(curiosity-inventory.tableSummary)"
>
  <thead
    class=""
  >
    <tr
      class=""
      data-ouia-component-id="OUIA-Generated-TableRow-1"
      data-ouia-component-type="PF4/TableRow"
      data-ouia-safe="true"
    >
      <th
        class=""
        data-key="0"
        data-label="t(curiosity-inventory.header, {"context":"lorem"})"
        scope="col"
      >
        t(curiosity-inventory.header, {"context":"lorem"})
      </th>
    </tr>
  </thead>
  <tbody
    class=""
    role="rowgroup"
  >
    <tr
      class=""
      data-ouia-component-id="OUIA-Generated-TableRow-2"
      data-ouia-component-type="PF4/TableRow"
      data-ouia-safe="true"
    >
      <td
        class=""
        data-key="0"
        data-label="t(curiosity-inventory.header, {"context":"lorem"})"
      >
        ipsum
      </td>
    </tr>
    <tr
      class=""
      data-ouia-component-id="OUIA-Generated-TableRow-3"
      data-ouia-component-type="PF4/TableRow"
      data-ouia-safe="true"
    >
      <td
        class=""
        data-key="0"
        data-label="t(curiosity-inventory.header, {"context":"lorem"})"
      >
        sit
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`InventoryCard Component should handle variations in data: variable data 1`] = `
<Card
  className="curiosity-inventory-card"
>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardHeader
      aria-hidden={false}
      className=""
    >
      <CardHeaderMain>
        <ToolbarFieldDisplayName
          t={[Function]}
          useDispatch={[Function]}
          useProduct={[Function]}
          useProductInventoryHostsQuery={[Function]}
        />
      </CardHeaderMain>
      <CardActions
        aria-hidden={false}
        className=""
      >
        <Pagination
          dropDirection="down"
          isCompact={true}
          isDisabled={false}
          itemCount={2}
          offset={0}
          onPage={[Function]}
          onPerPage={[Function]}
          perPage={10}
          variant={null}
        />
      </CardActions>
    </CardHeader>
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardBody>
      <div
        className=""
      >
        <Table
          ariaLabel={null}
          borders={true}
          className="curiosity-inventory-list"
          columnHeaders={
            [
              "t(curiosity-inventory.header, {"context":"lorem"})",
              "t(curiosity-inventory.header, {"context":"dolor"})",
            ]
          }
          isHeader={true}
          rows={
            [
              {
                "cells": [
                  "ipsum",
                  "sit",
                ],
                "expandedContent": undefined,
              },
              {
                "cells": [
                  "sit",
                  "amet",
                ],
                "expandedContent": undefined,
              },
            ]
          }
          summary={null}
          t={[Function]}
          variant="compact"
        />
      </div>
    </CardBody>
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardFooter
      aria-hidden={false}
      className=""
    >
      <TableToolbar
        isFooter={true}
      >
        <Pagination
          dropDirection="up"
          isCompact={false}
          isDisabled={false}
          itemCount={2}
          offset={0}
          onPage={[Function]}
          onPerPage={[Function]}
          perPage={10}
          variant={null}
        />
      </TableToolbar>
    </CardFooter>
  </MinHeight>
</Card>
`;

exports[`InventoryCard Component should render a basic component: basic render 1`] = `
<Card
  className="curiosity-inventory-card"
>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardHeader
      aria-hidden={false}
      className=""
    >
      <CardHeaderMain>
        <ToolbarFieldDisplayName
          t={[Function]}
          useDispatch={[Function]}
          useProduct={[Function]}
          useProductInventoryHostsQuery={[Function]}
        />
      </CardHeaderMain>
      <CardActions
        aria-hidden={true}
        className="transparent"
      >
        <Pagination
          dropDirection="down"
          isCompact={true}
          isDisabled={true}
          itemCount={0}
          offset={0}
          onPage={[Function]}
          onPerPage={[Function]}
          perPage={10}
          variant={null}
        />
      </CardActions>
    </CardHeader>
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardBody>
      <div
        className="fadein"
      >
        <Loader
          skeletonProps={
            {
              "size": "sm",
            }
          }
          tableProps={
            {
              "className": "curiosity-inventory-list",
              "colCount": 1,
              "colWidth": [],
              "rowCount": 10,
              "variant": "compact",
            }
          }
          variant="table"
        />
      </div>
    </CardBody>
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardFooter
      aria-hidden={true}
      className="transparent"
    >
      <TableToolbar
        isFooter={true}
      >
        <Pagination
          dropDirection="up"
          isCompact={false}
          isDisabled={true}
          itemCount={0}
          offset={0}
          onPage={[Function]}
          onPerPage={[Function]}
          perPage={10}
          variant={null}
        />
      </TableToolbar>
    </CardFooter>
  </MinHeight>
</Card>
`;

exports[`InventoryCard Component should return an empty render when disabled: disabled component 1`] = `
<Card
  className="curiosity-inventory-card__disabled"
>
  <CardBody>
    <Bullseye>
      t(curiosity-inventory.tab, {"context":"disabled"})
    </Bullseye>
  </CardBody>
</Card>
`;
