// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InventoryCard Component should handle multiple display states, error, pending, fulfilled: error 1`] = `
<Card
  className="curiosity-card curiosity-inventory-card"
>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardHeader
      actions={
        {
          "actions": <Toolbar
            className="curiosity-toolbar"
            collapseListedFiltersBreakpoint="sm"
          >
            <ToolbarContent
              className="curiosity-toolbar__content"
              isExpanded={false}
              showClearFiltersButton={false}
            >
              <ForwardRef
                align={
                  {
                    "default": "alignRight",
                  }
                }
                aria-hidden={true}
                className="curiosity-toolbar__group transparent"
              >
                <Pagination
                  dropDirection="down"
                  isCompact={true}
                  isDisabled={true}
                  itemCount={0}
                  offset={0}
                  onPage={[Function]}
                  onPerPage={[Function]}
                  perPage={10}
                  variant={null}
                />
              </ForwardRef>
            </ToolbarContent>
          </Toolbar>,
          "className": "curiosity-card__actions",
        }
      }
      aria-hidden={true}
      className="curiosity-card__header hidden"
    />
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardBody
      className="curiosity-card__body"
    >
      <ErrorMessage
        title="t(curiosity-inventory.error_title)"
      />
    </CardBody>
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardFooter
      aria-hidden={true}
      className="curiosity-card__footer hidden"
    >
      <TableToolbar
        isFooter={true}
      >
        <Pagination
          dropDirection="up"
          isCompact={false}
          isDisabled={true}
          itemCount={0}
          offset={0}
          onPage={[Function]}
          onPerPage={[Function]}
          perPage={10}
          variant={null}
        />
      </TableToolbar>
    </CardFooter>
  </MinHeight>
</Card>
`;

exports[`InventoryCard Component should handle multiple display states, error, pending, fulfilled: fulfilled 1`] = `
<Card
  className="curiosity-card curiosity-inventory-card"
>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardHeader
      actions={
        {
          "actions": <Toolbar
            className="curiosity-toolbar"
            collapseListedFiltersBreakpoint="sm"
          >
            <ToolbarContent
              className="curiosity-toolbar__content"
              isExpanded={false}
              showClearFiltersButton={false}
            >
              <ForwardRef
                align={
                  {
                    "default": "alignRight",
                  }
                }
                aria-hidden={true}
                className="curiosity-toolbar__group transparent"
              >
                <Pagination
                  dropDirection="down"
                  isCompact={true}
                  isDisabled={false}
                  itemCount={0}
                  offset={0}
                  onPage={[Function]}
                  onPerPage={[Function]}
                  perPage={10}
                  variant={null}
                />
              </ForwardRef>
            </ToolbarContent>
          </Toolbar>,
          "className": "curiosity-card__actions",
        }
      }
      aria-hidden={false}
      className="curiosity-card__header "
    />
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardBody
      className="curiosity-card__body"
    >
      <div
        className=""
      >
        <Table
          ariaLabelSelectTheadColumn="Select row column"
          ariaLabelTable="t(curiosity-inventory.table, {"context":"ariaLabel","appName":"Subscriptions"})"
          className="curiosity-inventory-list"
          columnHeaders={[]}
          componentClassNames={
            {
              "table": "curiosity-table",
              "td": "curiosity-table__td",
              "tdAction": "curiosity-table__td-action",
              "tdExpand": "curiosity-table__td-expand",
              "tdExpanded": "curiosity-table__td-expand-expanded",
              "tdExpandedContent": "curiosity-table__td-expand-content",
              "tdExpandedWrapper": "curiosity-table__td-expand-wrapper",
              "tdSelect": "curiosity-table__td-select",
              "th": "curiosity-table__th",
              "tr": "curiosity-table__tr",
              "trExpand": "curiosity-table__tr-expand",
              "trExpanded": "curiosity-table__tr-expand-expanded",
              "trExpandedContent": "curiosity-table__tr-expand-content",
            }
          }
          emptyTable={
            {
              "ariaLabel": "t(curiosity-inventory.table, {"context":"ariaLabel","appName":"Subscriptions"})",
              "className": "curiosity-inventory-list",
              "message": "t(curiosity-inventory.table_emptyState, {"context":"description"})",
              "summary": "t(curiosity-inventory.table, {"context":"summary"})",
              "title": "t(curiosity-inventory.table_emptyState, {"context":"title"})",
            }
          }
          isBorders={true}
          isHeader={true}
          isStriped={false}
          onExpand={null}
          onSelect={null}
          onSort={null}
          rows={[]}
          summary="t(curiosity-inventory.table, {"context":"summary"})"
          variant="compact"
        />
      </div>
    </CardBody>
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardFooter
      aria-hidden={true}
      className="curiosity-card__footer transparent"
    >
      <TableToolbar
        isFooter={true}
      >
        <Pagination
          dropDirection="up"
          isCompact={false}
          isDisabled={false}
          itemCount={0}
          offset={0}
          onPage={[Function]}
          onPerPage={[Function]}
          perPage={10}
          variant={null}
        />
      </TableToolbar>
    </CardFooter>
  </MinHeight>
</Card>
`;

exports[`InventoryCard Component should handle multiple display states, error, pending, fulfilled: pending 1`] = `
<Card
  className="curiosity-card curiosity-inventory-card"
>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardHeader
      actions={
        {
          "actions": <Toolbar
            className="curiosity-toolbar"
            collapseListedFiltersBreakpoint="sm"
          >
            <ToolbarContent
              className="curiosity-toolbar__content"
              isExpanded={false}
              showClearFiltersButton={false}
            >
              <ForwardRef
                align={
                  {
                    "default": "alignRight",
                  }
                }
                aria-hidden={true}
                className="curiosity-toolbar__group transparent"
              >
                <Pagination
                  dropDirection="down"
                  isCompact={true}
                  isDisabled={true}
                  itemCount={0}
                  offset={0}
                  onPage={[Function]}
                  onPerPage={[Function]}
                  perPage={10}
                  variant={null}
                />
              </ForwardRef>
            </ToolbarContent>
          </Toolbar>,
          "className": "curiosity-card__actions",
        }
      }
      aria-hidden={false}
      className="curiosity-card__header "
    />
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardBody
      className="curiosity-card__body"
    >
      <div
        className="fadein"
      >
        <Loader
          skeletonProps={
            {
              "size": "sm",
            }
          }
          tableProps={
            {
              "ariaLabel": "t(curiosity-inventory.table, {"context":"ariaLabel","appName":"Subscriptions"})",
              "className": "curiosity-inventory-list",
              "colCount": 1,
              "colWidth": [],
              "isHeader": true,
              "rowCount": undefined,
              "summary": "t(curiosity-inventory.table, {"context":"summary"})",
              "variant": "compact",
            }
          }
          variant="table"
        />
      </div>
    </CardBody>
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardFooter
      aria-hidden={true}
      className="curiosity-card__footer transparent"
    >
      <TableToolbar
        isFooter={true}
      >
        <Pagination
          dropDirection="up"
          isCompact={false}
          isDisabled={true}
          itemCount={0}
          offset={0}
          onPage={[Function]}
          onPerPage={[Function]}
          perPage={10}
          variant={null}
        />
      </TableToolbar>
    </CardFooter>
  </MinHeight>
</Card>
`;

exports[`InventoryCard Component should render a basic component: basic render 1`] = `
<Card
  className="curiosity-card curiosity-inventory-card"
>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardHeader
      actions={
        {
          "actions": <Toolbar
            className="curiosity-toolbar"
            collapseListedFiltersBreakpoint="sm"
          >
            <ToolbarContent
              className="curiosity-toolbar__content"
              isExpanded={false}
              showClearFiltersButton={false}
            >
              <ForwardRef
                align={
                  {
                    "default": "alignRight",
                  }
                }
                aria-hidden={true}
                className="curiosity-toolbar__group transparent"
              >
                <Pagination
                  dropDirection="down"
                  isCompact={true}
                  isDisabled={true}
                  itemCount={0}
                  offset={0}
                  onPage={[Function]}
                  onPerPage={[Function]}
                  perPage={10}
                  variant={null}
                />
              </ForwardRef>
            </ToolbarContent>
          </Toolbar>,
          "className": "curiosity-card__actions",
        }
      }
      aria-hidden={false}
      className="curiosity-card__header "
    />
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardBody
      className="curiosity-card__body"
    >
      <div
        className="fadein"
      >
        <Loader
          skeletonProps={
            {
              "size": "sm",
            }
          }
          tableProps={
            {
              "ariaLabel": "t(curiosity-inventory.table, {"context":"ariaLabel","appName":"Subscriptions"})",
              "className": "curiosity-inventory-list",
              "colCount": 1,
              "colWidth": [],
              "isHeader": true,
              "rowCount": undefined,
              "summary": "t(curiosity-inventory.table, {"context":"summary"})",
              "variant": "compact",
            }
          }
          variant="table"
        />
      </div>
    </CardBody>
  </MinHeight>
  <MinHeight
    isOnLoad={false}
    minHeight={0}
    useResizeObserver={[Function]}
  >
    <CardFooter
      aria-hidden={true}
      className="curiosity-card__footer transparent"
    >
      <TableToolbar
        isFooter={true}
      >
        <Pagination
          dropDirection="up"
          isCompact={false}
          isDisabled={true}
          itemCount={0}
          offset={0}
          onPage={[Function]}
          onPerPage={[Function]}
          perPage={10}
          variant={null}
        />
      </TableToolbar>
    </CardFooter>
  </MinHeight>
</Card>
`;

exports[`InventoryCard Component should return an empty render when disabled: disabled 1`] = `
<Card
  className="curiosity-inventory-card__disabled"
>
  <CardBody>
    <Bullseye>
      t(curiosity-inventory.tab, {"context":"disabled"})
    </Bullseye>
  </CardBody>
</Card>
`;

exports[`InventoryCard Component should return an empty render when disabled: missing filters 1`] = `
<Card
  className="curiosity-inventory-card__disabled"
>
  <CardBody>
    <Bullseye>
      t(curiosity-inventory.tab, {"context":"disabled"})
    </Bullseye>
  </CardBody>
</Card>
`;
