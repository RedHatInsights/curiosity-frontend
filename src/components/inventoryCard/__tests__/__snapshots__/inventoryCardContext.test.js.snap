// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InventoryCardContext should expect specific sort properties: sort properties 1`] = `
{
  "BILLING_PROVIDER": "billing_provider",
  "CATEGORY": "category",
  "CORES": "Cores",
  "CORE_SECONDS": "Core-seconds",
  "INSTANCE_HOURS": "Instance-hours",
  "LAST_SEEN": "last_seen",
  "NAME": "display_name",
  "NUMBER_OF_GUESTS": "number_of_guests",
  "SOCKETS": "Sockets",
  "STORAGE_GIBIBYTES": "Storage-gibibytes",
  "STORAGE_GIBIBYTE_MONTHS": "Storage-gibibyte-months",
  "TRANSFER_GIBIBYTES": "Transfer-gibibytes",
}
`;

exports[`InventoryCardContext should handle a store response with useGetHostsInventory: store response 1`] = `
{
  "data": [
    {
      "data": [
        {
          "lorem": "ipsum",
        },
        {
          "dolor": "sit",
        },
      ],
      "meta": {},
    },
  ],
  "error": false,
  "fulfilled": true,
  "message": null,
  "pending": false,
  "responses": {
    "id": {},
    "list": [
      {
        "data": [
          {
            "data": [
              {
                "lorem": "ipsum",
              },
              {
                "dolor": "sit",
              },
            ],
            "meta": {},
          },
        ],
        "fulfilled": true,
      },
    ],
  },
}
`;

exports[`InventoryCardContext should handle a store response with useGetInstancesInventory: store response 1`] = `
{
  "data": [
    {
      "data": [
        {
          "lorem": "ipsum",
        },
        {
          "dolor": "sit",
        },
      ],
      "meta": {},
    },
  ],
  "error": false,
  "fulfilled": true,
  "message": null,
  "pending": false,
  "responses": {
    "id": {},
    "list": [
      {
        "data": [
          {
            "data": [
              {
                "lorem": "ipsum",
              },
              {
                "dolor": "sit",
              },
            ],
            "meta": {},
          },
        ],
        "fulfilled": true,
      },
    ],
  },
}
`;

exports[`InventoryCardContext should handle an onColumnSort event for hosts: onColumnSort event, dispatch hosts 1`] = `
[
  [
    [
      {
        "dir": "desc",
        "type": "SET_QUERY_RHSM_HOSTS_INVENTORY_dir",
        "viewId": "lorem",
      },
      {
        "sort": "loremIpsumColumnOne",
        "type": "SET_QUERY_RHSM_HOSTS_INVENTORY_sort",
        "viewId": "lorem",
      },
    ],
  ],
  [
    [
      {
        "dir": "asc",
        "type": "SET_QUERY_RHSM_HOSTS_INVENTORY_dir",
        "viewId": "lorem",
      },
      {
        "sort": "loremIpsumColumnOne",
        "type": "SET_QUERY_RHSM_HOSTS_INVENTORY_sort",
        "viewId": "lorem",
      },
    ],
  ],
]
`;

exports[`InventoryCardContext should handle an onColumnSort event: onColumnSort event, dispatch 1`] = `
[
  [
    [
      {
        "dir": "desc",
        "type": "SET_QUERY_RHSM_HOSTS_INVENTORY_dir",
        "viewId": "lorem",
      },
      {
        "sort": "loremIpsumColumnOne",
        "type": "SET_QUERY_RHSM_HOSTS_INVENTORY_sort",
        "viewId": "lorem",
      },
    ],
  ],
  [
    [
      {
        "dir": "asc",
        "type": "SET_QUERY_RHSM_HOSTS_INVENTORY_dir",
        "viewId": "lorem",
      },
      {
        "sort": "loremIpsumColumnOne",
        "type": "SET_QUERY_RHSM_HOSTS_INVENTORY_sort",
        "viewId": "lorem",
      },
    ],
  ],
]
`;

exports[`InventoryCardContext should handle an onPage event: onPage event, dispatch 1`] = `
[
  [
    [
      {
        "offset": 1,
        "type": "SET_QUERY_RHSM_HOSTS_INVENTORY_offset",
        "viewId": "lorem",
      },
      {
        "limit": 5,
        "type": "SET_QUERY_RHSM_HOSTS_INVENTORY_limit",
        "viewId": "lorem",
      },
    ],
  ],
]
`;

exports[`InventoryCardContext should handle variations in hosts inventory API responses: inventory, cancelled 1`] = `
{
  "data": {},
  "pending": true,
}
`;

exports[`InventoryCardContext should handle variations in hosts inventory API responses: inventory, disabled 1`] = `
{
  "data": {},
  "fulfilled": true,
  "pending": false,
}
`;

exports[`InventoryCardContext should handle variations in hosts inventory API responses: inventory, error 1`] = `
{
  "data": {},
  "error": true,
  "pending": false,
}
`;

exports[`InventoryCardContext should handle variations in hosts inventory API responses: inventory, fulfilled 1`] = `
{
  "data": {},
  "fulfilled": true,
  "pending": false,
}
`;

exports[`InventoryCardContext should handle variations in hosts inventory API responses: inventory, pending 1`] = `
{
  "data": {},
  "pending": true,
}
`;

exports[`InventoryCardContext should handle variations in instances inventory API responses: inventory, cancelled 1`] = `
{
  "data": {},
  "pending": true,
}
`;

exports[`InventoryCardContext should handle variations in instances inventory API responses: inventory, disabled 1`] = `
{
  "data": {},
  "fulfilled": true,
  "pending": false,
}
`;

exports[`InventoryCardContext should handle variations in instances inventory API responses: inventory, error 1`] = `
{
  "data": {},
  "error": true,
  "pending": false,
}
`;

exports[`InventoryCardContext should handle variations in instances inventory API responses: inventory, fulfilled 1`] = `
{
  "data": {},
  "fulfilled": true,
  "pending": false,
}
`;

exports[`InventoryCardContext should handle variations in instances inventory API responses: inventory, pending 1`] = `
{
  "data": {},
  "pending": true,
}
`;

exports[`InventoryCardContext should return specific properties: specific properties 1`] = `
{
  "useGetHostsInventory": [Function],
  "useGetInstancesInventory": [Function],
  "useOnColumnSortHosts": [Function],
  "useOnColumnSortInstances": [Function],
  "useOnPageInstances": [Function],
}
`;
