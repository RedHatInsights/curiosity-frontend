// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OptinView Component should render a non-connected component: non-connected 1`] = `
<PageLayout
  className=""
>
  <Card>
    <Flex>
      <Flex
        flex={
          Object {
            "default": "flex_2",
          }
        }
      >
        <FlexItem>
          <CardTitle
            key="heading1Title"
          >
            <Title
              headingLevel="h1"
              size="2xl"
            >
              t(curiosity-optin.cardTitle, {"appName":"Subscriptions"})
            </Title>
          </CardTitle>
          <CardBody
            key="heading1Desc"
          >
            t(curiosity-optin.cardDescription, {"appName":"Subscriptions"})
          </CardBody>
          <CardTitle
            key="heading2Title"
          >
            <Title
              headingLevel="h2"
              size="xl"
            >
              t(curiosity-optin.cardSeeTitle)
            </Title>
          </CardTitle>
          <CardBody
            key="heading2Desc"
          >
            t(curiosity-optin.cardSeeDescription)
          </CardBody>
          <CardTitle
            key="heading3Title"
          >
            <Title
              headingLevel="h2"
              size="xl"
            >
              t(curiosity-optin.cardReportTitle)
            </Title>
          </CardTitle>
          <CardBody
            key="heading3Desc"
          >
            t(curiosity-optin.cardReportDescription)
          </CardBody>
          <CardTitle
            key="heading4Title"
          >
            <Title
              headingLevel="h2"
              size="xl"
            >
              t(curiosity-optin.cardFilterTitle)
            </Title>
          </CardTitle>
          <CardBody
            key="heading4Desc"
          >
            t(curiosity-optin.cardFilterDescription)
          </CardBody>
          <CardFooter>
            <Form>
              <ActionGroup>
                <Button
                  isDisabled={true}
                  variant="primary"
                >
                  t(curiosity-optin.buttonIsActive, {"appName":"Subscriptions"})
                </Button>
              </ActionGroup>
            </Form>
          </CardFooter>
        </FlexItem>
      </Flex>
      <Flex
        alignSelf={
          Object {
            "default": "alignSelfCenter",
          }
        }
        flex={
          Object {
            "default": "flex_1",
          }
        }
      >
        <FlexItem>
          <CardBody>
            <Card
              className="curiosity-optin-tour"
            >
              <CardHeader>
                <CardHeaderMain>
                  <Brand
                    alt="t(curiosity-optin.tourTitleImageAlt)"
                    aria-hidden={true}
                    className="curiosity-optin-image"
                    src="graph4x.png"
                    srcSet="graph4x.png 1064w, graph2x.png 600w"
                  />
                </CardHeaderMain>
              </CardHeader>
              <CardTitle>
                <Title
                  headingLevel="h3"
                  size="2xl"
                >
                  t(curiosity-optin.tourTitle)
                </Title>
              </CardTitle>
              <CardBody>
                t(curiosity-optin.tourDescription)
              </CardBody>
              <CardFooter>
                <Button
                  className="uxui-curiosity__button-tour"
                  variant="secondary"
                >
                  t(curiosity-optin.buttonTour)
                </Button>
              </CardFooter>
            </Card>
          </CardBody>
        </FlexItem>
      </Flex>
    </Flex>
  </Card>
</PageLayout>
`;

exports[`OptinView Component should render an API state driven view: 4XX view 1`] = `
<CardFooter>
  <Form>
    <ActionGroup>
      <Button
        isDisabled={true}
        variant="primary"
      >
        t(curiosity-optin.buttonIsActive, {"appName":"Subscriptions"})
      </Button>
    </ActionGroup>
  </Form>
</CardFooter>
`;

exports[`OptinView Component should render an API state driven view: 200 view 1`] = `
<CardFooter>
  <Form>
    <ActionGroup>
      <Button
        isDisabled={true}
        variant="primary"
      >
        t(curiosity-optin.buttonIsActive, {"appName":"Subscriptions"})
      </Button>
    </ActionGroup>
  </Form>
</CardFooter>
`;

exports[`OptinView Component should render an API state driven view: 401 view 1`] = `
<CardFooter>
  <Form>
    <ActionGroup>
      <Button
        isDisabled={true}
        variant="primary"
      >
        t(curiosity-optin.buttonIsActive, {"appName":"Subscriptions"})
      </Button>
    </ActionGroup>
  </Form>
</CardFooter>
`;

exports[`OptinView Component should render an API state driven view: 403 view 1`] = `
<CardFooter>
  <Form>
    <ActionGroup>
      <Button
        onClick={[Function]}
        variant="primary"
      >
        t(curiosity-optin.buttonActivate, {"appName":"Subscriptions"})
      </Button>
    </ActionGroup>
  </Form>
</CardFooter>
`;

exports[`OptinView Component should render an API state driven view: 500 view 1`] = `
<CardFooter>
  <Form>
    <ActionGroup>
      <Button
        isDisabled={true}
        variant="primary"
      >
        t(curiosity-optin.buttonIsActive, {"appName":"Subscriptions"})
      </Button>
    </ActionGroup>
  </Form>
</CardFooter>
`;

exports[`OptinView Component should render an API state driven view: error view 1`] = `
<CardFooter>
  <p>
    t(curiosity-optin.cardIsErrorDescription, {"appName":"Subscriptions"}, [object Object])
  </p>
</CardFooter>
`;

exports[`OptinView Component should render an API state driven view: fulfilled view 1`] = `
<CardFooter>
  <Form>
    <ActionGroup>
      <Button
        isDisabled={true}
        variant="primary"
      >
        t(curiosity-optin.buttonIsActive, {"appName":"Subscriptions"})
      </Button>
    </ActionGroup>
    <p>
      t(curiosity-optin.cardIsActiveDescription)
    </p>
  </Form>
</CardFooter>
`;

exports[`OptinView Component should render an API state driven view: initial view 1`] = `
<PageLayout
  className=""
>
  <Card>
    <Flex>
      <Flex
        flex={
          Object {
            "default": "flex_2",
          }
        }
      >
        <FlexItem>
          <CardTitle
            key="heading1Title"
          >
            <Title
              headingLevel="h1"
              size="2xl"
            >
              t(curiosity-optin.cardTitle, {"appName":"Subscriptions"})
            </Title>
          </CardTitle>
          <CardBody
            key="heading1Desc"
          >
            t(curiosity-optin.cardDescription, {"appName":"Subscriptions"})
          </CardBody>
          <CardTitle
            key="heading2Title"
          >
            <Title
              headingLevel="h2"
              size="xl"
            >
              t(curiosity-optin.cardSeeTitle)
            </Title>
          </CardTitle>
          <CardBody
            key="heading2Desc"
          >
            t(curiosity-optin.cardSeeDescription)
          </CardBody>
          <CardTitle
            key="heading3Title"
          >
            <Title
              headingLevel="h2"
              size="xl"
            >
              t(curiosity-optin.cardReportTitle)
            </Title>
          </CardTitle>
          <CardBody
            key="heading3Desc"
          >
            t(curiosity-optin.cardReportDescription)
          </CardBody>
          <CardTitle
            key="heading4Title"
          >
            <Title
              headingLevel="h2"
              size="xl"
            >
              t(curiosity-optin.cardFilterTitle)
            </Title>
          </CardTitle>
          <CardBody
            key="heading4Desc"
          >
            t(curiosity-optin.cardFilterDescription)
          </CardBody>
          <CardFooter>
            <Form>
              <ActionGroup>
                <Button
                  isDisabled={true}
                  variant="primary"
                >
                  t(curiosity-optin.buttonIsActive, {"appName":"Subscriptions"})
                </Button>
              </ActionGroup>
            </Form>
          </CardFooter>
        </FlexItem>
      </Flex>
      <Flex
        alignSelf={
          Object {
            "default": "alignSelfCenter",
          }
        }
        flex={
          Object {
            "default": "flex_1",
          }
        }
      >
        <FlexItem>
          <CardBody>
            <Card
              className="curiosity-optin-tour"
            >
              <CardHeader>
                <CardHeaderMain>
                  <Brand
                    alt="t(curiosity-optin.tourTitleImageAlt)"
                    aria-hidden={true}
                    className="curiosity-optin-image"
                    src="graph4x.png"
                    srcSet="graph4x.png 1064w, graph2x.png 600w"
                  />
                </CardHeaderMain>
              </CardHeader>
              <CardTitle>
                <Title
                  headingLevel="h3"
                  size="2xl"
                >
                  t(curiosity-optin.tourTitle)
                </Title>
              </CardTitle>
              <CardBody>
                t(curiosity-optin.tourDescription)
              </CardBody>
              <CardFooter>
                <Button
                  className="uxui-curiosity__button-tour"
                  variant="secondary"
                >
                  t(curiosity-optin.buttonTour)
                </Button>
              </CardFooter>
            </Card>
          </CardBody>
        </FlexItem>
      </Flex>
    </Flex>
  </Card>
</PageLayout>
`;

exports[`OptinView Component should render an API state driven view: null or undefined status view 1`] = `
<CardFooter>
  <Form>
    <ActionGroup>
      <Button
        isDisabled={true}
        variant="primary"
      >
        t(curiosity-optin.buttonIsActive, {"appName":"Subscriptions"})
      </Button>
    </ActionGroup>
  </Form>
</CardFooter>
`;

exports[`OptinView Component should render an API state driven view: pending view 1`] = `
<CardFooter>
  <Form>
    <ActionGroup>
      <Button
        isDisabled={true}
        variant="primary"
      >
        <Spinner
          size="sm"
        />
         
        t(curiosity-optin.buttonActivate, {"appName":"Subscriptions"})
      </Button>
    </ActionGroup>
  </Form>
</CardFooter>
`;
