// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Authorization Component should render a connected component: connected 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

exports[`Authorization Component should render a non-connected component authorized: non-connected authorized 1`] = `
<Authentication
  appName="subscriptions"
  authorizeUser={[Function]}
  history={
    Object {
      "listen": [Function],
      "push": [Function],
    }
  }
  initializeChrome={[Function]}
  navigation={
    Array [
      Object {
        "default": true,
        "id": "all",
        "path": "/rhel-sw/all",
        "pathParameter": "RHEL",
        "title": "Red Hat Enterprise Linux",
      },
      Object {
        "id": "arm",
        "path": "/rhel-sw/arm",
        "pathParameter": "RHEL for ARM",
        "title": "ARM",
      },
      Object {
        "id": "ibmpower",
        "path": "/rhel-sw/ibmpower",
        "pathParameter": "RHEL for IBM Power",
        "title": "IBM Power",
      },
      Object {
        "id": "ibmz",
        "path": "/rhel-sw/ibmz",
        "pathParameter": "RHEL for IBM z",
        "title": "IBM Z systems",
      },
      Object {
        "id": "x86",
        "path": "/rhel-sw/x86",
        "pathParameter": "RHEL for x86",
        "title": "x86",
      },
      Object {
        "id": "openshift-sw",
        "path": "/openshift-sw",
        "pathParameter": "OpenShift Container Platform",
        "title": "Red Hat OpenShift",
      },
    ]
  }
  onNavigation={[Function]}
  redirectUrl="/?not_entitled=subscriptions"
  session={
    Object {
      "authorized": true,
      "error": false,
      "errorMessage": "",
      "pending": false,
    }
  }
  setAppName={[Function]}
  setNavigation={[Function]}
  t={[Function]}
>
  <span
    className="test"
  >
    lorem
  </span>
</Authentication>
`;

exports[`Authorization Component should render a non-connected component error: non-connected error 1`] = `
<Authentication
  appName="subscriptions"
  authorizeUser={[Function]}
  history={
    Object {
      "listen": [Function],
      "push": [Function],
    }
  }
  initializeChrome={[Function]}
  navigation={
    Array [
      Object {
        "default": true,
        "id": "all",
        "path": "/rhel-sw/all",
        "pathParameter": "RHEL",
        "title": "Red Hat Enterprise Linux",
      },
      Object {
        "id": "arm",
        "path": "/rhel-sw/arm",
        "pathParameter": "RHEL for ARM",
        "title": "ARM",
      },
      Object {
        "id": "ibmpower",
        "path": "/rhel-sw/ibmpower",
        "pathParameter": "RHEL for IBM Power",
        "title": "IBM Power",
      },
      Object {
        "id": "ibmz",
        "path": "/rhel-sw/ibmz",
        "pathParameter": "RHEL for IBM z",
        "title": "IBM Z systems",
      },
      Object {
        "id": "x86",
        "path": "/rhel-sw/x86",
        "pathParameter": "RHEL for x86",
        "title": "x86",
      },
      Object {
        "id": "openshift-sw",
        "path": "/openshift-sw",
        "pathParameter": "OpenShift Container Platform",
        "title": "Red Hat OpenShift",
      },
    ]
  }
  onNavigation={[Function]}
  redirectUrl="/?not_entitled=subscriptions"
  session={
    Object {
      "authorized": false,
      "error": true,
      "errorMessage": "Authentication credentials were not provided.",
      "pending": false,
    }
  }
  setAppName={[Function]}
  setNavigation={[Function]}
  t={[Function]}
>
  <MessageView
    icon={[Function]}
    message="t(curiosity-auth.authorizedCopy, ...)"
    title="t(curiosity-auth.authorizedTitle, ...)"
  >
    <PageLayout>
      <PageHeader
        key=".0"
      >
        <PageHeader>
          <section
            className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
            widget-type="InsightsPageHeader"
          >
            <PageHeaderTitle
              title="t(curiosity-auth.authorizedTitle, ...)"
            >
              <Title
                className=""
                size="2xl"
                widget-type="InsightsPageHeaderTitle"
              >
                <h1
                  className="pf-c-title pf-m-2xl"
                  widget-type="InsightsPageHeaderTitle"
                >
                   
                  t(curiosity-auth.authorizedTitle, ...)
                   
                </h1>
              </Title>
            </PageHeaderTitle>
          </section>
        </PageHeader>
      </PageHeader>
      <PageSection
        className="curiosity"
      >
        <section
          className="pf-c-page__main-section curiosity"
        >
          <EmptyState
            className="fadein"
            key=".1"
            variant="full"
          >
            <div
              className="pf-c-empty-state fadein"
            >
              <EmptyStateIcon
                icon={[Function]}
              >
                <BanIcon
                  aria-hidden="true"
                  className="pf-c-empty-state__icon"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                >
                  <svg
                    aria-hidden="true"
                    aria-labelledby={null}
                    className="pf-c-empty-state__icon"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 512 512"
                    width="1em"
                  >
                    <path
                      d="M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z"
                      transform=""
                    />
                  </svg>
                </BanIcon>
              </EmptyStateIcon>
              <EmptyStateBody>
                <div
                  className="pf-c-empty-state__body"
                >
                  t(curiosity-auth.authorizedCopy, ...)
                </div>
              </EmptyStateBody>
            </div>
          </EmptyState>
        </section>
      </PageSection>
    </PageLayout>
  </MessageView>
</Authentication>
`;

exports[`Authorization Component should render a non-connected component pending: non-connected pending 1`] = `
<MessageView
  icon={[Function]}
  message="t(curiosity-auth.pending, ...)"
  title="Â "
/>
`;

exports[`Authorization Component should return a message on 401 error: 401 error 1`] = `
<PageLayout>
  <PageHeader
    key=".0"
  >
    <PageHeader>
      <section
        className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
        widget-type="InsightsPageHeader"
      >
        <PageHeaderTitle
          title="t(curiosity-auth.authorizedTitle, ...)"
        >
          <Title
            className=""
            size="2xl"
            widget-type="InsightsPageHeaderTitle"
          >
            <h1
              className="pf-c-title pf-m-2xl"
              widget-type="InsightsPageHeaderTitle"
            >
               
              t(curiosity-auth.authorizedTitle, ...)
               
            </h1>
          </Title>
        </PageHeaderTitle>
      </section>
    </PageHeader>
  </PageHeader>
  <PageSection
    className="curiosity"
  >
    <section
      className="pf-c-page__main-section curiosity"
    >
      <EmptyState
        className="fadein"
        key=".1"
        variant="full"
      >
        <div
          className="pf-c-empty-state fadein"
        >
          <EmptyStateIcon
            icon={[Function]}
          >
            <BanIcon
              aria-hidden="true"
              className="pf-c-empty-state__icon"
              color="currentColor"
              noVerticalAlign={false}
              size="sm"
              title={null}
            >
              <svg
                aria-hidden="true"
                aria-labelledby={null}
                className="pf-c-empty-state__icon"
                fill="currentColor"
                height="1em"
                role="img"
                style={
                  Object {
                    "verticalAlign": "-0.125em",
                  }
                }
                viewBox="0 0 512 512"
                width="1em"
              >
                <path
                  d="M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z"
                  transform=""
                />
              </svg>
            </BanIcon>
          </EmptyStateIcon>
          <EmptyStateBody>
            <div
              className="pf-c-empty-state__body"
            >
              t(curiosity-auth.authorizedCopy, ...)
            </div>
          </EmptyStateBody>
        </div>
      </EmptyState>
    </section>
  </PageSection>
</PageLayout>
`;

exports[`Authorization Component should return a redirect on 403 error: 403 error 1`] = `
Array [
  <section
    class="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
    widget-type="InsightsPageHeader"
  >
    <h1
      class="pf-c-title pf-m-2xl"
      widget-type="InsightsPageHeaderTitle"
    >
       Subscription Watch 
    </h1>
  </section>,
  <section
    class="pf-c-page__main-section curiosity"
  >
    <section
      class=""
    >
       
      <div
        class="pf-c-empty-state fadein"
      >
        <img
          alt="t(curiosity-tour.emptyStateIconAlt, [object Object])"
          aria-hidden="true"
          class="curiosity-emptystate-img-icon"
          src="subscriptions.svg"
        />
        <h5
          class="pf-c-title pf-m-lg"
        >
          t(curiosity-tour.emptyStateTitle, [object Object])
        </h5>
        <div
          class="pf-c-empty-state__body"
        >
          t(curiosity-tour.emptyStateDescription, [object Object])
        </div>
        <div
          class="pf-c-empty-state__body"
        >
          t(curiosity-tour.emptyStateDescriptionExtended, [object Object])
        </div>
        <button
          class="pf-c-button pf-m-primary"
          type="button"
        >
          t(curiosity-tour.emptyStateButton)
        </button>
        <div
          class="pf-c-empty-state__secondary"
        >
          <a
            aria-disabled="false"
            class="pf-c-button pf-m-link"
            href="https://access.redhat.com/documentation/Subscription_Central/"
            target="_blank"
          >
            t(curiosity-tour.emptyStateLinkLearnMore)
          </a>
          <a
            aria-disabled="false"
            class="pf-c-button pf-m-link"
            href="https://access.redhat.com/account-team"
            target="_blank"
          >
            t(curiosity-tour.emptyStateLinkContactUs)
          </a>
        </div>
      </div>
       
    </section>
  </section>,
]
`;

exports[`Authorization Component should return a redirect on 418 error: 418 error 1`] = `
<Redirect
  baseName="/"
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
  isRedirect={true}
  isReplace={true}
  location={
    Object {
      "hash": "",
      "pathname": "/",
      "search": "",
      "state": undefined,
    }
  }
  match={
    Object {
      "isExact": true,
      "params": Object {},
      "path": "/",
      "url": "/",
    }
  }
  route={null}
  url="/?not_entitled=subscriptions"
>
  Redirected towards 
  /?not_entitled=subscriptions
</Redirect>
`;
