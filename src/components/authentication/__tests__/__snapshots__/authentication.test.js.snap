// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Authentication Component should render a connected component: connected 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

exports[`Authentication Component should render a non-connected component authorized: non-connected authorized 1`] = `
<Authentication
  authorizeUser={[Function]}
  history={
    Object {
      "listen": [Function],
      "push": [Function],
    }
  }
  initializeChrome={[Function]}
  onNavigation={[Function]}
  session={
    Object {
      "authorized": true,
      "error": false,
      "errorMessage": "",
      "pending": false,
    }
  }
  setAppName={[Function]}
  t={[Function]}
>
  <span
    className="test"
  >
    lorem
  </span>
</Authentication>
`;

exports[`Authentication Component should render a non-connected component error: non-connected error 1`] = `
<Authentication
  authorizeUser={[Function]}
  history={
    Object {
      "listen": [Function],
      "push": [Function],
    }
  }
  initializeChrome={[Function]}
  onNavigation={[Function]}
  session={
    Object {
      "authorized": false,
      "error": true,
      "errorMessage": "Authentication credentials were not provided.",
      "pending": false,
    }
  }
  setAppName={[Function]}
  t={[Function]}
>
  <MessageView
    icon={[Function]}
    message="t(curiosity-auth.authorizedCopy, ...)"
    pageTitle={null}
    title="t(curiosity-auth.authorizedTitle, [object Object])"
  >
    <PageLayout>
      <PageHeader
        key=".0"
        t={[Function]}
        viewId={null}
      >
        <PageHeader>
          <section
            className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
            widget-type="InsightsPageHeader"
          >
            <PageHeaderTitle
              className="pf-u-mb-sm"
              title="Subscription Watch"
            >
              <Title
                className="pf-u-mb-sm"
                headingLevel="h1"
                size="2xl"
                widget-type="InsightsPageHeaderTitle"
              >
                <h1
                  className="pf-c-title pf-m-2xl pf-u-mb-sm"
                  widget-type="InsightsPageHeaderTitle"
                >
                   
                  Subscription Watch
                   
                </h1>
              </Title>
            </PageHeaderTitle>
          </section>
        </PageHeader>
      </PageHeader>
      <PageSection
        className="curiosity"
      >
        <section
          className="pf-c-page__main-section curiosity"
        >
          <EmptyState
            className="fadein"
            key=".1"
            variant="full"
          >
            <div
              className="pf-c-empty-state fadein"
            >
              <div
                className="pf-c-empty-state__content"
              >
                <EmptyStateIcon
                  icon={[Function]}
                >
                  <LockIcon
                    aria-hidden="true"
                    className="pf-c-empty-state__icon"
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                  >
                    <svg
                      aria-hidden="true"
                      aria-labelledby={null}
                      className="pf-c-empty-state__icon"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 448 512"
                      width="1em"
                    >
                      <path
                        d="M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"
                        transform=""
                      />
                    </svg>
                  </LockIcon>
                </EmptyStateIcon>
                <Title
                  headingLevel="h2"
                  size="lg"
                >
                  <h2
                    className="pf-c-title pf-m-lg"
                  >
                    t(curiosity-auth.authorizedTitle, [object Object])
                  </h2>
                </Title>
                <EmptyStateBody>
                  <div
                    className="pf-c-empty-state__body"
                  >
                    t(curiosity-auth.authorizedCopy, ...)
                  </div>
                </EmptyStateBody>
              </div>
            </div>
          </EmptyState>
        </section>
      </PageSection>
    </PageLayout>
  </MessageView>
</Authentication>
`;

exports[`Authentication Component should render a non-connected component pending: non-connected pending 1`] = `
<MessageView
  icon={[Function]}
  message="t(curiosity-auth.pending, ...)"
  pageTitle="Â "
  title={null}
/>
`;

exports[`Authentication Component should return a message on 401 error: 401 error 1`] = `
<MessageView
  icon={[Function]}
  message="t(curiosity-auth.authorizedCopy, ...)"
  pageTitle={null}
  title="t(curiosity-auth.authorizedTitle, [object Object])"
/>
`;

exports[`Authentication Component should return a redirect on 418 error: 418 error 1`] = `"418 redirect"`;

exports[`Authentication Component should return a redirect on a specific 403 error and error code: 403 error 1`] = `
<MessageView
  icon={[Function]}
  message="t(curiosity-auth.authorizedCopy, ...)"
  pageTitle={null}
  title="t(curiosity-auth.authorizedTitle, [object Object])"
/>
`;

exports[`Authentication Component should return a redirect on a specific 403 error and error code: 403 redirect error 1`] = `"403 redirect"`;
