// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AuthenticationContext should apply a hook for retrieving auth data from multiple selectors: error response 1`] = `
{
  "data": {
    "errorCodes": [
      "SUBSCRIPTIONS1004",
    ],
    "errorStatus": 403,
    "locale": {},
  },
  "error": true,
  "fulfilled": undefined,
  "pending": undefined,
}
`;

exports[`AuthenticationContext should apply a hook for retrieving auth data from multiple selectors: mock store error response 1`] = `
{
  "data": {
    "errorCodes": [
      "lorem",
      "ipsum",
    ],
    "errorStatus": null,
    "locale": undefined,
  },
  "error": true,
  "fulfilled": false,
  "pending": false,
}
`;

exports[`AuthenticationContext should apply a hook for retrieving auth data from multiple selectors: mock store success response 1`] = `
{
  "data": {
    "authorized": {
      "subscriptions": true,
    },
    "errorCodes": [],
    "errorStatus": null,
    "isAdmin": true,
    "isEntitled": true,
    "locale": {},
    "permissions": [
      {
        "subscriptions": {
          "all": true,
          "resources": {
            "*": {
              "*": [],
              "loremCustom": [],
              "read": [],
            },
          },
        },
      },
    ],
  },
  "error": false,
  "fulfilled": true,
  "pending": false,
}
`;

exports[`AuthenticationContext should apply a hook for retrieving auth data from multiple selectors: success dispatch 1`] = `
[
  [
    [Function],
  ],
  [
    [
      {
        "meta": {
          "data": {
            "name": "subscriptions",
          },
        },
        "payload": Promise {},
        "type": "PLATFORM_APP_NAME",
      },
      {
        "payload": Promise {},
        "type": "PLATFORM_GLOBAL_FILTER_HIDE",
      },
    ],
  ],
  [
    [Function],
  ],
]
`;

exports[`AuthenticationContext should apply a hook for retrieving auth data from multiple selectors: success response 1`] = `
{
  "data": {
    "errorCodes": [],
    "errorStatus": null,
    "locale": {},
  },
  "error": undefined,
  "fulfilled": true,
  "pending": undefined,
}
`;

exports[`AuthenticationContext should apply a hook for retrieving auth data results as context for session: session context, basic 1`] = `
{
  "lorem": "ipsum",
}
`;

exports[`AuthenticationContext should return specific properties: specific properties 1`] = `
{
  "AuthenticationContext": {
    "$$typeof": Symbol(react.context),
    "Consumer": {
      "$$typeof": Symbol(react.context),
      "_calculateChangedBits": null,
      "_context": [Circular],
    },
    "Provider": {
      "$$typeof": Symbol(react.provider),
      "_context": [Circular],
    },
    "_calculateChangedBits": null,
    "_currentRenderer": null,
    "_currentRenderer2": null,
    "_currentValue": [
      {},
      [Function],
    ],
    "_currentValue2": [
      {},
      [Function],
    ],
    "_threadCount": 0,
  },
  "DEFAULT_CONTEXT": [
    {},
    [Function],
  ],
  "useAuthContext": [Function],
  "useGetAuthorization": [Function],
  "useSession": [Function],
}
`;
