// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Router Component should handle unique route settings: settings 1`] = `
<Suspense
  fallback={
    <Loader
      skeletonProps={
        Object {
          "size": "sm",
        }
      }
      tableProps={Object {}}
      variant="title"
    />
  }
  routes={
    Array [
      Object {
        "component": [Function],
        "disabled": false,
        "exact": false,
        "path": "/lorem",
        "redirect": "/loremIpsum",
      },
      Object {
        "activateOnError": true,
        "component": [Function],
        "disabled": false,
        "exact": false,
        "path": "/ipsum",
      },
    ]
  }
>
  <Switch>
    <Route
      exact={false}
      key="/lorem"
      path="/lorem"
      render={[Function]}
    />
    <Route
      exact={false}
      key="/ipsum"
      path="/ipsum"
      render={[Function]}
    />
    <Redirect
      to="/loremIpsum"
    />
  </Switch>
</Suspense>
`;

exports[`Router Component should pass customized props to routed components: routeDetail and location parsedSearch props 1`] = `
Object {
  "locationParsedSearch": Object {
    "dolor": "",
    "ipsum": "1 2",
  },
  "routeDetail": Object {
    "baseName": "/",
    "errorRoute": undefined,
    "routeItem": Object {
      "component": [Function],
      "disabled": false,
      "exact": false,
      "path": "/lorem",
      "redirect": "/loremIpsum",
    },
    "routes": Array [
      Object {
        "component": [Function],
        "disabled": false,
        "exact": false,
        "path": "/lorem",
        "redirect": "/loremIpsum",
      },
    ],
  },
}
`;

exports[`Router Component should render a basic component: basic 1`] = `
<Suspense
  fallback={
    <Loader
      skeletonProps={
        Object {
          "size": "sm",
        }
      }
      tableProps={Object {}}
      variant="title"
    />
  }
  routes={
    Array [
      Object {
        "activateOnError": false,
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "disabled": false,
        "exact": true,
        "id": "rhel",
        "path": "/rhel",
        "redirect": null,
      },
      Object {
        "activateOnError": false,
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "disabled": false,
        "exact": true,
        "id": "rhel-arm",
        "path": "/rhel-arm",
        "redirect": null,
      },
      Object {
        "activateOnError": false,
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "disabled": false,
        "exact": true,
        "id": "rhel-ibmpower",
        "path": "/rhel-ibmpower",
        "redirect": null,
      },
      Object {
        "activateOnError": false,
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "disabled": false,
        "exact": true,
        "id": "rhel-ibmz",
        "path": "/rhel-ibmz",
        "redirect": null,
      },
      Object {
        "activateOnError": false,
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "disabled": false,
        "exact": true,
        "id": "rhel-x86",
        "path": "/rhel-x86",
        "redirect": null,
      },
      Object {
        "activateOnError": false,
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "disabled": false,
        "exact": true,
        "id": "openshift-container",
        "path": "/openshift-container",
        "redirect": null,
      },
      Object {
        "activateOnError": false,
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "disabled": false,
        "exact": true,
        "id": "openshift-dedicated",
        "path": "/openshift-dedicated",
        "redirect": null,
      },
      Object {
        "activateOnError": false,
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "disabled": false,
        "exact": true,
        "id": "satellite",
        "path": "/satellite",
        "redirect": null,
      },
      Object {
        "activateOnError": false,
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "disabled": false,
        "exact": true,
        "id": "satellite-capsule",
        "path": "/satellite-capsule",
        "redirect": null,
      },
      Object {
        "activateOnError": false,
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "disabled": false,
        "exact": true,
        "id": "satellite-server",
        "path": "/satellite-server",
        "redirect": null,
      },
      Object {
        "activateOnError": true,
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "disabled": false,
        "exact": true,
        "id": "optin",
        "path": "/optin",
        "redirect": null,
      },
      Object {
        "activateOnError": false,
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "disabled": false,
        "exact": true,
        "id": "missing",
        "path": "/",
        "redirect": "/",
      },
    ]
  }
>
  <Switch>
    <Route
      exact={true}
      key="/rhel"
      path="/rhel"
      render={[Function]}
    />
    <Route
      exact={true}
      key="/rhel-arm"
      path="/rhel-arm"
      render={[Function]}
    />
    <Route
      exact={true}
      key="/rhel-ibmpower"
      path="/rhel-ibmpower"
      render={[Function]}
    />
    <Route
      exact={true}
      key="/rhel-ibmz"
      path="/rhel-ibmz"
      render={[Function]}
    />
    <Route
      exact={true}
      key="/rhel-x86"
      path="/rhel-x86"
      render={[Function]}
    />
    <Route
      exact={true}
      key="/openshift-container"
      path="/openshift-container"
      render={[Function]}
    />
    <Route
      exact={true}
      key="/openshift-dedicated"
      path="/openshift-dedicated"
      render={[Function]}
    />
    <Route
      exact={true}
      key="/satellite"
      path="/satellite"
      render={[Function]}
    />
    <Route
      exact={true}
      key="/satellite-capsule"
      path="/satellite-capsule"
      render={[Function]}
    />
    <Route
      exact={true}
      key="/satellite-server"
      path="/satellite-server"
      render={[Function]}
    />
    <Route
      exact={true}
      key="/optin"
      path="/optin"
      render={[Function]}
    />
    <Route
      exact={true}
      key="/"
      path="/"
      render={[Function]}
    />
    <Redirect
      to="/"
    />
  </Switch>
</Suspense>
`;
