// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Router Component should handle unique route settings: settings 1`] = `
<Suspense
  fallback={
    <Loader
      skeletonProps={
        {
          "size": "sm",
        }
      }
      tableProps={{}}
      variant="title"
    />
  }
  redirectRoute={
    {
      "activateOnError": false,
      "component": "productView/productViewMissing",
      "default": true,
      "disabled": false,
      "id": "missing",
      "path": "*",
      "redirect": "./",
    }
  }
  routes={
    [
      {
        "component": "loremComponent",
        "disabled": false,
        "exact": false,
        "path": "/lorem",
        "redirect": "/loremIpsum",
      },
      {
        "activateOnError": true,
        "component": "ipsumComponent",
        "disabled": false,
        "exact": false,
        "path": "/ipsum",
      },
      {
        "activateOnError": false,
        "component": "helloWorld",
        "disabled": true,
        "exact": false,
        "path": "/hello",
      },
      {
        "activateOnError": false,
        "component": "loremDolorHello",
        "disabled": false,
        "exact": false,
        "path": "/loremDolorHello",
      },
    ]
  }
  useSetRouteDetail={[Function]}
>
  <Routes>
    <Route
      element={<Unknown />}
      key="/lorem"
      path="/lorem"
    />
    <Route
      element={<Unknown />}
      key="/ipsum"
      path="/ipsum"
    />
    <Route
      element={<Unknown />}
      key="/hello"
      path="/hello"
    />
    <Route
      element={<Unknown />}
      key="/loremDolorHello"
      path="/loremDolorHello"
    />
    <Route
      element={
        <Navigate
          replace={true}
          to="./"
        />
      }
      key="redirect"
      path="*"
    />
  </Routes>
</Suspense>
`;

exports[`Router Component should render a basic component: basic 1`] = `
<Suspense
  fallback={
    <Loader
      skeletonProps={
        {
          "size": "sm",
        }
      }
      tableProps={{}}
      variant="title"
    />
  }
  redirectRoute={
    {
      "activateOnError": false,
      "component": "productView/productViewMissing",
      "default": true,
      "disabled": false,
      "id": "missing",
      "path": "*",
      "redirect": "./",
    }
  }
  routes={
    [
      {
        "activateOnError": false,
        "component": "productView/productView",
        "default": false,
        "disabled": false,
        "id": "any",
        "path": ":productPath",
        "redirect": null,
      },
      {
        "activateOnError": false,
        "component": "productView/productViewMissing",
        "default": true,
        "disabled": false,
        "id": "missing",
        "path": "*",
        "redirect": "./",
      },
    ]
  }
  useSetRouteDetail={[Function]}
>
  <Routes>
    <Route
      element={<Unknown />}
      key=":productPath"
      path=":productPath"
    />
    <Route
      element={<Unknown />}
      key="*"
      path="*"
    />
    <Route
      element={
        <Navigate
          replace={true}
          to="./"
        />
      }
      key="redirect"
      path="*"
    />
  </Routes>
</Suspense>
`;
