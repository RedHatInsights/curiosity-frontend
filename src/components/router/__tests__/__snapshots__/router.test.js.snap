// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Router Component should handle unique route settings: settings 1`] = `
<Router
  routes={
    Array [
      Object {
        "component": [Function],
        "disabled": false,
        "exact": false,
        "redirect": false,
        "render": false,
        "title": "Lorem",
        "to": "/lorem",
      },
      Object {
        "activateOnError": true,
        "component": [Function],
        "disabled": false,
        "exact": false,
        "redirect": false,
        "render": false,
        "title": "Ipsum",
        "to": "/ipsum",
      },
    ]
  }
>
  <Switch>
    <Route
      component={[Function]}
      exact={false}
      key="/lorem"
      path="/lorem"
    />
    <Route
      component={[Function]}
      exact={false}
      key="/ipsum"
      path="/ipsum"
    />
  </Switch>
</Router>
`;

exports[`Router Component should pass customized props to routed components: routeDetail and location parsedSearch props 1`] = `
Object {
  "locationParsedSearch": Object {
    "dolor": "",
    "ipsum": "1 2",
  },
  "routeDetail": Object {
    "baseName": "/",
    "errorRoute": undefined,
    "routeItem": Object {
      "component": [Function],
      "disabled": false,
      "exact": false,
      "redirect": false,
      "render": true,
      "title": "Lorem",
      "to": "/lorem",
    },
    "routes": Array [
      Object {
        "component": [Function],
        "disabled": false,
        "exact": false,
        "redirect": false,
        "render": true,
        "title": "Lorem",
        "to": "/lorem",
      },
    ],
  },
}
`;

exports[`Router Component should render a basic component: basic 1`] = `
<Router
  routes={
    Array [
      Object {
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_ctor": [Function],
          "_result": null,
          "_status": -1,
        },
        "disabled": false,
        "exact": true,
        "redirect": true,
        "render": true,
        "to": "/rhel-sw/all",
      },
      Object {
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_ctor": [Function],
          "_result": null,
          "_status": -1,
        },
        "disabled": false,
        "exact": true,
        "id": "rhel-sw",
        "render": true,
        "to": "/rhel-sw/:variant",
      },
      Object {
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_ctor": [Function],
          "_result": null,
          "_status": -1,
        },
        "disabled": false,
        "exact": true,
        "id": "openshift-sw",
        "render": true,
        "to": "/openshift-sw",
      },
      Object {
        "activateOnError": true,
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_ctor": [Function],
          "_result": null,
          "_status": -1,
        },
        "disabled": false,
        "exact": true,
        "id": "optin",
        "render": true,
        "to": "/optin",
      },
    ]
  }
>
  <Switch>
    <Route
      exact={true}
      key="/rhel-sw/all"
      path="/rhel-sw/all"
      render={[Function]}
    />
    <Route
      exact={true}
      key="/rhel-sw/:variant"
      path="/rhel-sw/:variant"
      render={[Function]}
    />
    <Route
      exact={true}
      key="/openshift-sw"
      path="/openshift-sw"
      render={[Function]}
    />
    <Route
      exact={true}
      key="/optin"
      path="/optin"
      render={[Function]}
    />
    <Redirect
      to="/rhel-sw/all"
    />
  </Switch>
</Router>
`;
