// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Redirect Component should handle a redirect with a url: redirect url 1`] = `
<Fragment>
  Redirected towards 
  //lorem/ipsum?dolor=sit
</Fragment>
`;

exports[`Redirect Component should handle existing routes with and without withRouter: existing route: outside of withRouter 1`] = `
<Suspense
  baseName="/"
  fallback={
    <Loader
      skeletonProps={
        Object {
          "size": "sm",
        }
      }
      tableProps={Object {}}
      variant="title"
    />
  }
  history={Object {}}
  isRedirect={true}
  isReplace={false}
  route="/openshift-container"
  t={[Function]}
  url={null}
>
  <Route
    path="*"
  >
    <lazy />
  </Route>
</Suspense>
`;

exports[`Redirect Component should handle existing routes with and without withRouter: existing route: routed redirect route 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <withRouter(Redirect)
    history={Object {}}
    isRedirect={true}
    route="/openshift-container"
  />
</Router>
`;

exports[`Redirect Component should handle missing routes with and without withRouter: missing route: outside of withRouter 1`] = `
<Suspense
  baseName="/"
  fallback={
    <Loader
      skeletonProps={
        Object {
          "size": "sm",
        }
      }
      tableProps={Object {}}
      variant="title"
    />
  }
  history={Object {}}
  isRedirect={true}
  isReplace={false}
  route="/lorem-ipsum"
  t={[Function]}
  url={null}
>
  <Route
    path="*"
  >
    <Component />
  </Route>
</Suspense>
`;

exports[`Redirect Component should handle missing routes with and without withRouter: missing route: routed redirect route 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <withRouter(Redirect)
    history={Object {}}
    isRedirect={true}
    route="/lorem-ipsum"
  />
</Router>
`;

exports[`Redirect Component should render a basic component: basic 1`] = `null`;

exports[`Redirect Component should render a routed component: routed 1`] = `null`;
