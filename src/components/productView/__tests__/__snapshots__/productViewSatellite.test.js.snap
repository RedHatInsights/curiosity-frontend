// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProductViewSatellite Component should render a non-connected component: non-connected 1`] = `
<Connect(ProductView)
  productConfig={
    Object {
      "graphTallyQuery": Object {
        "beginning": "2019-06-20T00:00:00.000Z",
        "ending": "2019-07-20T23:59:59.999Z",
        "granularity": "daily",
      },
      "initialGraphFilters": Array [
        Object {
          "color": "#06c",
          "fill": "#8bc1f7",
          "id": "physicalSockets",
          "stroke": "#06c",
        },
        Object {
          "color": "#009596",
          "fill": "#a2d9d9",
          "id": "hypervisorSockets",
          "stroke": "#009596",
        },
        Object {
          "color": "#5752d1",
          "fill": "#b2b0ea",
          "id": "cloudSockets",
          "stroke": "#5752d1",
        },
        Object {
          "id": "thresholdSockets",
        },
      ],
      "initialGuestsFilters": Array [
        Object {
          "cell": [Function],
          "header": "t(curiosity-inventory.header, {\\"context\\":\\"guestsDisplayName\\"})",
          "id": "displayName",
        },
        Object {
          "cellWidth": 40,
          "id": "inventoryId",
        },
        Object {
          "cell": [Function],
          "cellWidth": 15,
          "id": "lastSeen",
        },
      ],
      "initialInventoryFilters": Array [
        Object {
          "cell": [Function],
          "id": "displayName",
          "isSortable": true,
        },
        Object {
          "cell": [Function],
          "cellWidth": 20,
          "id": "measurementType",
          "isSortable": true,
        },
        Object {
          "cellWidth": 15,
          "id": "sockets",
          "isSortable": true,
          "isWrappable": true,
        },
        Object {
          "cell": [Function],
          "cellWidth": 15,
          "id": "lastSeen",
          "isSortable": true,
          "isWrappable": true,
        },
      ],
      "initialInventorySettings": Object {},
      "initialSubscriptionsInventoryFilters": Array [
        Object {
          "id": "productName",
          "isSortable": true,
        },
        Object {
          "cellWidth": 15,
          "id": "serviceLevel",
          "isSortable": true,
          "isWrappable": true,
        },
        Object {
          "cell": [Function],
          "cellWidth": 15,
          "id": "upcomingEventDate",
          "isSortable": true,
          "isWrappable": true,
        },
      ],
      "initialToolbarFilters": Array [
        Object {
          "id": "sla",
        },
        Object {
          "id": "usage",
          "selected": true,
        },
      ],
      "inventoryHostsQuery": Object {
        "dir": "asc",
        "limit": 100,
        "offset": 0,
        "sort": "last_seen",
      },
      "inventorySubscriptionsQuery": Object {
        "dir": "asc",
        "limit": 100,
        "offset": 0,
        "sort": "upcoming_event_date",
      },
      "query": Object {},
    }
  }
  routeDetail={
    Object {
      "pathParameter": "lorem ipsum",
      "productParameter": "dolor sit",
    }
  }
/>
`;

exports[`ProductViewSatellite Component should set product configuration: filteredGuestsData results 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "lorem",
    },
    Object {
      "title": "lorem inventory id",
    },
    Object {
      "title": <DateFormat
        date="lorem date obj"
      />,
    },
  ],
  "columnHeaders": Array [
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"guestsDisplayName\\"})",
      "transforms": Array [],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "transforms": Array [
        [Function],
      ],
    },
  ],
  "data": Object {
    "displayName": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
      "value": "lorem",
    },
    "inventoryId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
      "value": "lorem inventory id",
    },
    "lastSeen": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "value": "lorem date obj",
    },
    "loremIpsum": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"loremIpsum\\"})",
      "value": "hello world",
    },
    "subscriptionManagerId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"subscriptionManagerId\\"})",
      "value": "lorem subscription id",
    },
  },
}
`;

exports[`ProductViewSatellite Component should set product configuration: filteredGuestsData results, authorized 1`] = `
Object {
  "cells": Array [
    Object {
      "title": <Button
        component="a"
        href="/insights/inventory/lorem inventory id/"
        isInline={true}
        target="_blank"
        variant="link"
      >
        lorem
      </Button>,
    },
    Object {
      "title": "lorem inventory id",
    },
    Object {
      "title": <DateFormat
        date="lorem date obj"
      />,
    },
  ],
  "columnHeaders": Array [
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"guestsDisplayName\\"})",
      "transforms": Array [],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "transforms": Array [
        [Function],
      ],
    },
  ],
  "data": Object {
    "displayName": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
      "value": "lorem",
    },
    "inventoryId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
      "value": "lorem inventory id",
    },
    "lastSeen": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "value": "lorem date obj",
    },
    "loremIpsum": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"loremIpsum\\"})",
      "value": "hello world",
    },
    "subscriptionManagerId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"subscriptionManagerId\\"})",
      "value": "lorem subscription id",
    },
  },
}
`;

exports[`ProductViewSatellite Component should set product configuration: filteredInventoryData results 1`] = `
Object {
  "cells": Array [
    Object {
      "title": <React.Fragment>
        lorem
         
        t(curiosity-inventory.label, {"context":"numberOfGuests","count":3}, [object Object])
      </React.Fragment>,
    },
    Object {
      "title": <React.Fragment>
        t(curiosity-inventory.measurementType, {"context":null})
         
        
      </React.Fragment>,
    },
    Object {
      "title": 10,
    },
    Object {
      "title": <DateFormat
        date="lorem date obj"
      />,
    },
  ],
  "columnHeaders": Array [
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
      "transforms": Array [],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"measurementType\\"})",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"sockets\\"})",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "transforms": Array [
        [Function],
      ],
    },
  ],
  "data": Object {
    "cores": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"cores\\"})",
      "value": 12,
    },
    "displayName": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
      "value": "lorem",
    },
    "hardwareType": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"hardwareType\\"})",
      "value": "ipsum",
    },
    "inventoryId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
      "value": "lorem inventory id",
    },
    "lastSeen": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "value": "lorem date obj",
    },
    "loremIpsum": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"loremIpsum\\"})",
      "value": "hello world",
    },
    "measurementType": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"measurementType\\"})",
      "value": null,
    },
    "numberOfGuests": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"numberOfGuests\\"})",
      "value": 3,
    },
    "sockets": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"sockets\\"})",
      "value": 10,
    },
  },
}
`;

exports[`ProductViewSatellite Component should set product configuration: filteredInventoryData results, authorized 1`] = `
Object {
  "cells": Array [
    Object {
      "title": <React.Fragment>
        <Button
          component="a"
          href="/insights/inventory/lorem inventory id/"
          isInline={true}
          target="_blank"
          variant="link"
        >
          lorem
        </Button>
         
        t(curiosity-inventory.label, {"context":"numberOfGuests","count":3}, [object Object])
      </React.Fragment>,
    },
    Object {
      "title": <React.Fragment>
        t(curiosity-inventory.measurementType, {"context":null})
         
        
      </React.Fragment>,
    },
    Object {
      "title": 10,
    },
    Object {
      "title": <DateFormat
        date="lorem date obj"
      />,
    },
  ],
  "columnHeaders": Array [
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
      "transforms": Array [],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"measurementType\\"})",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"sockets\\"})",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "transforms": Array [
        [Function],
      ],
    },
  ],
  "data": Object {
    "cores": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"cores\\"})",
      "value": 12,
    },
    "displayName": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"displayName\\"})",
      "value": "lorem",
    },
    "hardwareType": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"hardwareType\\"})",
      "value": "ipsum",
    },
    "inventoryId": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"inventoryId\\"})",
      "value": "lorem inventory id",
    },
    "lastSeen": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"lastSeen\\"})",
      "value": "lorem date obj",
    },
    "loremIpsum": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"loremIpsum\\"})",
      "value": "hello world",
    },
    "measurementType": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"measurementType\\"})",
      "value": null,
    },
    "numberOfGuests": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"numberOfGuests\\"})",
      "value": 3,
    },
    "sockets": Object {
      "title": "t(curiosity-inventory.header, {\\"context\\":\\"sockets\\"})",
      "value": 10,
    },
  },
}
`;

exports[`ProductViewSatellite Component should set product configuration: initial configuration 1`] = `
Object {
  "initialGraphFilters": Array [
    Object {
      "color": "#06c",
      "fill": "#8bc1f7",
      "id": "physicalSockets",
      "stroke": "#06c",
    },
    Object {
      "color": "#009596",
      "fill": "#a2d9d9",
      "id": "hypervisorSockets",
      "stroke": "#009596",
    },
    Object {
      "color": "#5752d1",
      "fill": "#b2b0ea",
      "id": "cloudSockets",
      "stroke": "#5752d1",
    },
    Object {
      "id": "thresholdSockets",
    },
  ],
  "initialGuestsFilters": Array [
    Object {
      "cell": [Function],
      "header": "t(curiosity-inventory.header, {\\"context\\":\\"guestsDisplayName\\"})",
      "id": "displayName",
    },
    Object {
      "cellWidth": 40,
      "id": "inventoryId",
    },
    Object {
      "cell": [Function],
      "cellWidth": 15,
      "id": "lastSeen",
    },
  ],
  "initialInventoryFilters": Array [
    Object {
      "cell": [Function],
      "id": "displayName",
      "isSortable": true,
    },
    Object {
      "cell": [Function],
      "cellWidth": 20,
      "id": "measurementType",
      "isSortable": true,
    },
    Object {
      "cellWidth": 15,
      "id": "sockets",
      "isSortable": true,
      "isWrappable": true,
    },
    Object {
      "cell": [Function],
      "cellWidth": 15,
      "id": "lastSeen",
      "isSortable": true,
      "isWrappable": true,
    },
  ],
  "query": Object {},
}
`;
