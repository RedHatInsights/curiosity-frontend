// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProductView Component should allow custom inventory displays via config: custom tabs, basic inventory tables 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    productLabel="lorem ipsum"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum"})
  </PageHeader>
  <PageColumns
    className=""
  >
    <Context.Provider
      value={
        {
          "initialInventoryFilters": [],
          "initialSubscriptionsInventoryFilters": [],
          "lorem": "ipsum",
          "productId": "lorem",
          "viewId": "viewIpsum",
        }
      }
    >
      <PageMessages
        className=""
      >
        <BannerMessages
          useBannerMessages={[Function]}
          useRemoveBannerMessages={[Function]}
        />
      </PageMessages>
      <PageToolbar
        className=""
      >
        <Toolbar
          hardFilterReset={false}
          isDisabled={false}
          isGroupVariantDisabled={false}
          t={[Function]}
          useProductToolbarQuery={[Function]}
          useSelectCategoryOptions={[Function]}
          useToolbarFieldClear={[Function]}
          useToolbarFieldClearAll={[Function]}
          useToolbarFields={[Function]}
        />
      </PageToolbar>
      <PageSection
        className=""
      >
        <GraphCard
          isDisabled={false}
          useParseFiltersSettings={[Function]}
        />
      </PageSection>
      <PageSection
        className="curiosity-page-section__tabs"
      >
        <InventoryTabs
          activeTab={0}
          defaultActiveTab={0}
          isDisabled={false}
          t={[Function]}
          useOnTab={[Function]}
          useProduct={[Function]}
          useSelector={[Function]}
        >
          <InventoryTab
            active={false}
            title="t(curiosity-inventory.tabInstances, {"context":"lorem"})"
          >
            <InventoryCardInstances
              isDisabled={false}
              t={[Function]}
              useGetInventory={[Function]}
              useInventoryCardActions={[Function]}
              useOnColumnSort={[Function]}
              useOnPage={[Function]}
              useParseFiltersSettings={[Function]}
            />
          </InventoryTab>
          <InventoryTab
            active={false}
            title="t(curiosity-inventory.tabSubscriptions, {"context":"lorem"})"
          >
            <InventoryCardSubscriptions
              isDisabled={false}
              t={[Function]}
              useGetInventory={[Function]}
              useInventoryCardActions={[Function]}
              useOnColumnSort={[Function]}
              useOnPage={[Function]}
              useParseFiltersSettings={[Function]}
            />
          </InventoryTab>
        </InventoryTabs>
      </PageSection>
    </Context.Provider>
  </PageColumns>
</PageLayout>
`;

exports[`ProductView Component should allow custom inventory displays via config: custom tabs, missing inventory 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    productLabel="lorem ipsum"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum"})
  </PageHeader>
  <PageColumns
    className=""
  >
    <Context.Provider
      value={
        {
          "initialInventoryFilters": undefined,
          "initialSubscriptionsInventoryFilters": [],
          "lorem": "ipsum",
          "productId": "lorem",
          "viewId": "viewIpsum",
        }
      }
    >
      <PageMessages
        className=""
      >
        <BannerMessages
          useBannerMessages={[Function]}
          useRemoveBannerMessages={[Function]}
        />
      </PageMessages>
      <PageToolbar
        className=""
      >
        <Toolbar
          hardFilterReset={false}
          isDisabled={false}
          isGroupVariantDisabled={false}
          t={[Function]}
          useProductToolbarQuery={[Function]}
          useSelectCategoryOptions={[Function]}
          useToolbarFieldClear={[Function]}
          useToolbarFieldClearAll={[Function]}
          useToolbarFields={[Function]}
        />
      </PageToolbar>
      <PageSection
        className=""
      >
        <GraphCard
          isDisabled={false}
          useParseFiltersSettings={[Function]}
        />
      </PageSection>
      <PageSection
        className="curiosity-page-section__tabs"
      >
        <InventoryTabs
          activeTab={0}
          defaultActiveTab={0}
          isDisabled={false}
          t={[Function]}
          useOnTab={[Function]}
          useProduct={[Function]}
          useSelector={[Function]}
        >
          <InventoryTab
            active={false}
            title="t(curiosity-inventory.tabSubscriptions, {"context":"lorem"})"
          >
            <InventoryCardSubscriptions
              isDisabled={false}
              t={[Function]}
              useGetInventory={[Function]}
              useInventoryCardActions={[Function]}
              useOnColumnSort={[Function]}
              useOnPage={[Function]}
              useParseFiltersSettings={[Function]}
            />
          </InventoryTab>
        </InventoryTabs>
      </PageSection>
    </Context.Provider>
  </PageColumns>
</PageLayout>
`;

exports[`ProductView Component should allow custom inventory displays via config: custom tabs, missing subscriptions inventory 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    productLabel="lorem ipsum"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum"})
  </PageHeader>
  <PageColumns
    className=""
  >
    <Context.Provider
      value={
        {
          "initialInventoryFilters": [],
          "initialSubscriptionsInventoryFilters": undefined,
          "lorem": "ipsum",
          "productId": "lorem",
          "viewId": "viewIpsum",
        }
      }
    >
      <PageMessages
        className=""
      >
        <BannerMessages
          useBannerMessages={[Function]}
          useRemoveBannerMessages={[Function]}
        />
      </PageMessages>
      <PageToolbar
        className=""
      >
        <Toolbar
          hardFilterReset={false}
          isDisabled={false}
          isGroupVariantDisabled={false}
          t={[Function]}
          useProductToolbarQuery={[Function]}
          useSelectCategoryOptions={[Function]}
          useToolbarFieldClear={[Function]}
          useToolbarFieldClearAll={[Function]}
          useToolbarFields={[Function]}
        />
      </PageToolbar>
      <PageSection
        className=""
      >
        <GraphCard
          isDisabled={false}
          useParseFiltersSettings={[Function]}
        />
      </PageSection>
      <PageSection
        className="curiosity-page-section__tabs"
      >
        <InventoryTabs
          activeTab={0}
          defaultActiveTab={0}
          isDisabled={false}
          t={[Function]}
          useOnTab={[Function]}
          useProduct={[Function]}
          useSelector={[Function]}
        >
          <InventoryTab
            active={false}
            title="t(curiosity-inventory.tabInstances, {"context":"lorem"})"
          >
            <InventoryCardInstances
              isDisabled={false}
              t={[Function]}
              useGetInventory={[Function]}
              useInventoryCardActions={[Function]}
              useOnColumnSort={[Function]}
              useOnPage={[Function]}
              useParseFiltersSettings={[Function]}
            />
          </InventoryTab>
        </InventoryTabs>
      </PageSection>
    </Context.Provider>
  </PageColumns>
</PageLayout>
`;

exports[`ProductView Component should allow custom product views via productDisplay types: custom view, capacity 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    productLabel="lorem ipsum"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum"})
  </PageHeader>
  <PageColumns
    className=""
  >
    <Context.Provider
      value={
        {
          "lorem": "ipsum",
          "productDisplay": "capacity",
          "productId": "lorem",
          "viewId": "viewIpsum",
        }
      }
    >
      <PageMessages
        className=""
      >
        <BannerMessages
          useBannerMessages={[Function]}
          useRemoveBannerMessages={[Function]}
        />
      </PageMessages>
      <PageToolbar
        className=""
      >
        <Toolbar
          hardFilterReset={false}
          isDisabled={false}
          isGroupVariantDisabled={false}
          t={[Function]}
          useProductToolbarQuery={[Function]}
          useSelectCategoryOptions={[Function]}
          useToolbarFieldClear={[Function]}
          useToolbarFieldClearAll={[Function]}
          useToolbarFields={[Function]}
        />
      </PageToolbar>
      <PageSection
        className=""
      >
        <GraphCard
          isDisabled={false}
          useParseFiltersSettings={[Function]}
        />
      </PageSection>
      <PageSection
        className="curiosity-page-section__tabs"
      >
        <InventoryTabs
          activeTab={0}
          defaultActiveTab={0}
          isDisabled={true}
          t={[Function]}
          useOnTab={[Function]}
          useProduct={[Function]}
          useSelector={[Function]}
        />
      </PageSection>
    </Context.Provider>
  </PageColumns>
</PageLayout>
`;

exports[`ProductView Component should allow custom product views via productDisplay types: custom view, dual axes 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    productLabel="lorem ipsum"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum"})
  </PageHeader>
  <PageColumns
    className=""
  >
    <Context.Provider
      value={
        {
          "lorem": "ipsum",
          "productDisplay": "dual-axes",
          "productId": "lorem",
          "viewId": "viewIpsum",
        }
      }
    >
      <PageMessages
        className=""
      >
        <BannerMessages
          useBannerMessages={[Function]}
          useRemoveBannerMessages={[Function]}
        />
      </PageMessages>
      <PageToolbar
        className=""
      >
        <Toolbar
          hardFilterReset={false}
          isDisabled={false}
          isGroupVariantDisabled={false}
          t={[Function]}
          useProductToolbarQuery={[Function]}
          useSelectCategoryOptions={[Function]}
          useToolbarFieldClear={[Function]}
          useToolbarFieldClearAll={[Function]}
          useToolbarFields={[Function]}
        />
      </PageToolbar>
      <PageSection
        className=""
      >
        <GraphCard
          isDisabled={false}
          useParseFiltersSettings={[Function]}
        />
      </PageSection>
      <PageSection
        className="curiosity-page-section__tabs"
      >
        <InventoryTabs
          activeTab={0}
          defaultActiveTab={0}
          isDisabled={true}
          t={[Function]}
          useOnTab={[Function]}
          useProduct={[Function]}
          useSelector={[Function]}
        />
      </PageSection>
    </Context.Provider>
  </PageColumns>
</PageLayout>
`;

exports[`ProductView Component should allow custom product views via productDisplay types: custom view, hourly 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    productLabel="lorem ipsum"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum"})
  </PageHeader>
  <PageColumns
    className=""
  >
    <Context.Provider
      value={
        {
          "lorem": "ipsum",
          "productDisplay": "hourly",
          "productId": "lorem",
          "viewId": "viewIpsum",
        }
      }
    >
      <PageMessages
        className=""
      >
        <BannerMessages
          useBannerMessages={[Function]}
          useRemoveBannerMessages={[Function]}
        />
      </PageMessages>
      <PageToolbar
        className=""
      >
        <Toolbar
          hardFilterReset={false}
          isDisabled={false}
          isGroupVariantDisabled={false}
          t={[Function]}
          useProductToolbarQuery={[Function]}
          useSelectCategoryOptions={[Function]}
          useToolbarFieldClear={[Function]}
          useToolbarFieldClearAll={[Function]}
          useToolbarFields={[Function]}
        />
      </PageToolbar>
      <PageSection
        className=""
      >
        <GraphCard
          isDisabled={false}
          useParseFiltersSettings={[Function]}
        />
      </PageSection>
      <PageSection
        className="curiosity-page-section__tabs"
      >
        <InventoryTabs
          activeTab={0}
          defaultActiveTab={0}
          isDisabled={true}
          t={[Function]}
          useOnTab={[Function]}
          useProduct={[Function]}
          useSelector={[Function]}
        />
      </PageSection>
    </Context.Provider>
  </PageColumns>
</PageLayout>
`;

exports[`ProductView Component should allow custom product views via productDisplay types: custom view, legacy 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    productLabel="lorem ipsum"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum"})
  </PageHeader>
  <PageColumns
    className=""
  >
    <Context.Provider
      value={
        {
          "lorem": "ipsum",
          "productDisplay": "legacy",
          "productId": "lorem",
          "viewId": "viewIpsum",
        }
      }
    >
      <PageMessages
        className=""
      >
        <BannerMessages
          useBannerMessages={[Function]}
          useRemoveBannerMessages={[Function]}
        />
      </PageMessages>
      <PageToolbar
        className=""
      >
        <Toolbar
          hardFilterReset={false}
          isDisabled={false}
          isGroupVariantDisabled={false}
          t={[Function]}
          useProductToolbarQuery={[Function]}
          useSelectCategoryOptions={[Function]}
          useToolbarFieldClear={[Function]}
          useToolbarFieldClearAll={[Function]}
          useToolbarFields={[Function]}
        />
      </PageToolbar>
      <PageSection
        className=""
      >
        <GraphCard
          isDisabled={false}
          useParseFiltersSettings={[Function]}
        />
      </PageSection>
      <PageSection
        className="curiosity-page-section__tabs"
      >
        <InventoryTabs
          activeTab={0}
          defaultActiveTab={0}
          isDisabled={true}
          t={[Function]}
          useOnTab={[Function]}
          useProduct={[Function]}
          useSelector={[Function]}
        />
      </PageSection>
    </Context.Provider>
  </PageColumns>
</PageLayout>
`;

exports[`ProductView Component should allow custom product views via productDisplay types: custom view, partial 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    productLabel="lorem ipsum"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum"})
  </PageHeader>
  <PageColumns
    className=""
  >
    <Context.Provider
      value={
        {
          "lorem": "ipsum",
          "productDisplay": "partial",
          "productId": "lorem",
          "viewId": "viewIpsum",
        }
      }
    >
      <PageMessages
        className=""
      >
        <BannerMessages
          useBannerMessages={[Function]}
          useRemoveBannerMessages={[Function]}
        />
      </PageMessages>
      <PageToolbar
        className=""
      >
        <Toolbar
          hardFilterReset={false}
          isDisabled={false}
          isGroupVariantDisabled={false}
          t={[Function]}
          useProductToolbarQuery={[Function]}
          useSelectCategoryOptions={[Function]}
          useToolbarFieldClear={[Function]}
          useToolbarFieldClearAll={[Function]}
          useToolbarFields={[Function]}
        />
      </PageToolbar>
      <PageSection
        className=""
      >
        <GraphCard
          isDisabled={false}
          useParseFiltersSettings={[Function]}
        />
      </PageSection>
      <PageSection
        className="curiosity-page-section__tabs"
      >
        <InventoryTabs
          activeTab={0}
          defaultActiveTab={0}
          isDisabled={true}
          t={[Function]}
          useOnTab={[Function]}
          useProduct={[Function]}
          useSelector={[Function]}
        />
      </PageSection>
    </Context.Provider>
  </PageColumns>
</PageLayout>
`;

exports[`ProductView Component should render a basic component: basic 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    productLabel="lorem ipsum"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum"})
  </PageHeader>
  <PageColumns
    className=""
  >
    <Context.Provider
      value={
        {
          "lorem": "ipsum",
          "productId": "lorem",
          "viewId": "viewIpsum",
        }
      }
    >
      <PageMessages
        className=""
      >
        <BannerMessages
          useBannerMessages={[Function]}
          useRemoveBannerMessages={[Function]}
        />
      </PageMessages>
      <PageToolbar
        className=""
      >
        <Toolbar
          hardFilterReset={false}
          isDisabled={false}
          isGroupVariantDisabled={false}
          t={[Function]}
          useProductToolbarQuery={[Function]}
          useSelectCategoryOptions={[Function]}
          useToolbarFieldClear={[Function]}
          useToolbarFieldClearAll={[Function]}
          useToolbarFields={[Function]}
        />
      </PageToolbar>
      <PageSection
        className=""
      >
        <GraphCard
          isDisabled={false}
          useParseFiltersSettings={[Function]}
        />
      </PageSection>
      <PageSection
        className="curiosity-page-section__tabs"
      >
        <InventoryTabs
          activeTab={0}
          defaultActiveTab={0}
          isDisabled={true}
          t={[Function]}
          useOnTab={[Function]}
          useProduct={[Function]}
          useSelector={[Function]}
        />
      </PageSection>
    </Context.Provider>
  </PageColumns>
</PageLayout>
`;

exports[`ProductView Component should render nothing if productGroup, and product parameters are empty: empty, productGroup 1`] = `null`;

exports[`ProductView Component should render nothing if productGroup, and product parameters are empty: empty, productId and viewId 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    productLabel="lorem ipsum"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum"})
  </PageHeader>
  <PageColumns
    className=""
  />
</PageLayout>
`;
