// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProductView Component should allow custom inventory displays via config: custom tabs, subscriptions table 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    includeTour={false}
    productLabel="lorem ipsum product label"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum product label"})
  </PageHeader>
  <PageMessages
    className=""
  >
    <BannerMessages
      messages={
        Array [
          Object {
            "id": "cloudigradeMismatch",
            "message": "t(curiosity-banner.dataMismatchMessage, {\\"context\\":\\"cloudigradeMismatch\\",\\"appName\\":\\"Subscriptions\\"}, [object Object])",
            "title": "t(curiosity-banner.dataMismatchTitle)",
          },
        ]
      }
      useAppMessages={[Function]}
      useRouteDetail={[Function]}
    />
  </PageMessages>
  <PageColumns
    className=""
  >
    <ContextProvider
      key="product_lorem"
      value={
        Object {
          "initialSubscriptionsInventoryFilters": Array [],
          "lorem": "ipsum",
          "productId": "lorem",
          "viewId": "viewIpsum",
        }
      }
    >
      <PageToolbar
        className=""
      >
        <Toolbar
          hardFilterReset={false}
          isDisabled={false}
          t={[Function]}
          useSelectCategoryOptions={[Function]}
          useToolbarFieldClear={[Function]}
          useToolbarFieldClearAll={[Function]}
          useToolbarFieldQueries={[Function]}
        />
      </PageToolbar>
      <PageSection
        className=""
      >
        <Connect(GraphCard)
          cardTitle={
            <React.Fragment>
              t(curiosity-graph.cardHeading, {"context":"lorem"})
              <Tooltip
                content={
                  <p>
                    t(curiosity-graph.cardHeadingDescription, {"context":"lorem"})
                  </p>
                }
                distance={5}
                enableFlip={false}
                entryDelay={100}
                exitDelay={0}
                position="top"
              >
                <sup
                  className="curiosity-icon__info"
                >
                  <InfoCircleIcon
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                  />
                </sup>
              </Tooltip>
            </React.Fragment>
          }
          key="graph_lorem"
          productId="lorem"
          query={Object {}}
          viewId="viewIpsum"
        >
          <ToolbarFieldGranularity
            isFilter={false}
            options={
              Array [
                Object {
                  "selected": false,
                  "title": "t(curiosity-toolbar.granularity, {\\"context\\":\\"Daily\\"})",
                  "value": "Daily",
                },
                Object {
                  "selected": false,
                  "title": "t(curiosity-toolbar.granularity, {\\"context\\":\\"Weekly\\"})",
                  "value": "Weekly",
                },
                Object {
                  "selected": false,
                  "title": "t(curiosity-toolbar.granularity, {\\"context\\":\\"Monthly\\"})",
                  "value": "Monthly",
                },
                Object {
                  "selected": false,
                  "title": "t(curiosity-toolbar.granularity, {\\"context\\":\\"Quarterly\\"})",
                  "value": "Quarterly",
                },
              ]
            }
            t={[Function]}
            useOnSelect={[Function]}
            useProductGraphTallyQuery={[Function]}
          />
        </Connect(GraphCard)>
      </PageSection>
      <PageSection
        className=""
      >
        <Connect(InventoryTabs)
          key="inventory_lorem"
          productId="lorem"
        >
          <InventoryTab
            active={false}
            key="inventory_hosts_lorem"
            title="t(curiosity-inventory.tabHosts, {\\"context\\":\\"noInstances_lorem\\"})"
          >
            <Connect(InventoryList)
              key="inv_lorem"
              productId="lorem"
              query={Object {}}
              viewId="viewIpsum"
            />
          </InventoryTab>
          <InventoryTab
            active={false}
            key="inventory_subs_lorem"
            title="t(curiosity-inventory.tabSubscriptions, {\\"context\\":\\"lorem\\"})"
          >
            <Connect(InventorySubscriptions)
              filterInventoryData={Array []}
              key="subs_lorem"
              productId="lorem"
              query={Object {}}
              viewId="viewIpsum"
            />
          </InventoryTab>
        </Connect(InventoryTabs)>
      </PageSection>
    </ContextProvider>
  </PageColumns>
</PageLayout>
`;

exports[`ProductView Component should allow custom product views via props: custom graphCard, descriptions 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    includeTour={false}
    productLabel="lorem ipsum product label"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum product label"})
  </PageHeader>
  <PageMessages
    className=""
  >
    <BannerMessages
      messages={
        Array [
          Object {
            "id": "cloudigradeMismatch",
            "message": "t(curiosity-banner.dataMismatchMessage, {\\"context\\":\\"cloudigradeMismatch\\",\\"appName\\":\\"Subscriptions\\"}, [object Object])",
            "title": "t(curiosity-banner.dataMismatchTitle)",
          },
        ]
      }
      useAppMessages={[Function]}
      useRouteDetail={[Function]}
    />
  </PageMessages>
  <PageColumns
    className=""
  >
    <ContextProvider
      key="product_lorem"
      value={
        Object {
          "lorem": "ipsum",
          "productId": "lorem",
          "viewId": "viewIpsum",
        }
      }
    >
      <PageToolbar
        className=""
      >
        <Toolbar
          hardFilterReset={false}
          isDisabled={false}
          t={[Function]}
          useSelectCategoryOptions={[Function]}
          useToolbarFieldClear={[Function]}
          useToolbarFieldClearAll={[Function]}
          useToolbarFieldQueries={[Function]}
        />
      </PageToolbar>
      <PageSection
        className=""
      >
        <Connect(GraphCard)
          cardTitle={
            <React.Fragment>
              t(curiosity-graph.cardHeading, {"context":"lorem"})
              <Tooltip
                content={
                  <p>
                    t(curiosity-graph.cardHeadingDescription, {"context":"lorem"})
                  </p>
                }
                distance={5}
                enableFlip={false}
                entryDelay={100}
                exitDelay={0}
                position="top"
              >
                <sup
                  className="curiosity-icon__info"
                >
                  <InfoCircleIcon
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                  />
                </sup>
              </Tooltip>
            </React.Fragment>
          }
          key="graph_lorem"
          productId="lorem"
          query={Object {}}
          viewId="viewIpsum"
        >
          <ToolbarFieldGranularity
            isFilter={false}
            options={
              Array [
                Object {
                  "selected": false,
                  "title": "t(curiosity-toolbar.granularity, {\\"context\\":\\"Daily\\"})",
                  "value": "Daily",
                },
                Object {
                  "selected": false,
                  "title": "t(curiosity-toolbar.granularity, {\\"context\\":\\"Weekly\\"})",
                  "value": "Weekly",
                },
                Object {
                  "selected": false,
                  "title": "t(curiosity-toolbar.granularity, {\\"context\\":\\"Monthly\\"})",
                  "value": "Monthly",
                },
                Object {
                  "selected": false,
                  "title": "t(curiosity-toolbar.granularity, {\\"context\\":\\"Quarterly\\"})",
                  "value": "Quarterly",
                },
              ]
            }
            t={[Function]}
            useOnSelect={[Function]}
            useProductGraphTallyQuery={[Function]}
          />
        </Connect(GraphCard)>
      </PageSection>
      <PageSection
        className=""
      >
        <Connect(InventoryTabs)
          key="inventory_lorem"
          productId="lorem"
        >
          <InventoryTab
            active={false}
            key="inventory_hosts_lorem"
            title="t(curiosity-inventory.tabHosts, {\\"context\\":\\"noInstances_lorem\\"})"
          >
            <Connect(InventoryList)
              key="inv_lorem"
              productId="lorem"
              query={Object {}}
              viewId="viewIpsum"
            />
          </InventoryTab>
        </Connect(InventoryTabs)>
      </PageSection>
    </ContextProvider>
  </PageColumns>
</PageLayout>
`;

exports[`ProductView Component should allow custom product views via props: custom toolbar, toolbarGraph 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    includeTour={false}
    productLabel="lorem ipsum product label"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum product label"})
  </PageHeader>
  <PageMessages
    className=""
  >
    <BannerMessages
      messages={
        Array [
          Object {
            "id": "cloudigradeMismatch",
            "message": "t(curiosity-banner.dataMismatchMessage, {\\"context\\":\\"cloudigradeMismatch\\",\\"appName\\":\\"Subscriptions\\"}, [object Object])",
            "title": "t(curiosity-banner.dataMismatchTitle)",
          },
        ]
      }
      useAppMessages={[Function]}
      useRouteDetail={[Function]}
    />
  </PageMessages>
  <PageColumns
    className=""
  >
    <ContextProvider
      key="product_lorem"
      value={
        Object {
          "lorem": "ipsum",
          "productId": "lorem",
          "viewId": "viewIpsum",
        }
      }
    >
      <PageToolbar
        className=""
      >
        <Toolbar
          hardFilterReset={false}
          isDisabled={false}
          t={[Function]}
          useSelectCategoryOptions={[Function]}
          useToolbarFieldClear={[Function]}
          useToolbarFieldClearAll={[Function]}
          useToolbarFieldQueries={[Function]}
        />
      </PageToolbar>
      <PageSection
        className=""
      >
        <Connect(GraphCard)
          cardTitle={
            <React.Fragment>
              t(curiosity-graph.cardHeading, {"context":"lorem"})
            </React.Fragment>
          }
          key="graph_lorem"
          productId="lorem"
          query={Object {}}
          viewId="viewIpsum"
        >
          lorem ipsum
        </Connect(GraphCard)>
      </PageSection>
      <PageSection
        className=""
      >
        <Connect(InventoryTabs)
          key="inventory_lorem"
          productId="lorem"
        >
          <InventoryTab
            active={false}
            key="inventory_hosts_lorem"
            title="t(curiosity-inventory.tabHosts, {\\"context\\":\\"noInstances_lorem\\"})"
          >
            <Connect(InventoryList)
              key="inv_lorem"
              productId="lorem"
              query={Object {}}
              viewId="viewIpsum"
            />
          </InventoryTab>
        </Connect(InventoryTabs)>
      </PageSection>
    </ContextProvider>
  </PageColumns>
</PageLayout>
`;

exports[`ProductView Component should render a basic component: basic 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    includeTour={false}
    productLabel="lorem ipsum product label"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum product label"})
  </PageHeader>
  <PageMessages
    className=""
  >
    <BannerMessages
      messages={
        Array [
          Object {
            "id": "cloudigradeMismatch",
            "message": "t(curiosity-banner.dataMismatchMessage, {\\"context\\":\\"cloudigradeMismatch\\",\\"appName\\":\\"Subscriptions\\"}, [object Object])",
            "title": "t(curiosity-banner.dataMismatchTitle)",
          },
        ]
      }
      useAppMessages={[Function]}
      useRouteDetail={[Function]}
    />
  </PageMessages>
  <PageColumns
    className=""
  >
    <ContextProvider
      key="product_lorem"
      value={
        Object {
          "lorem": "ipsum",
          "productId": "lorem",
          "viewId": "viewIpsum",
        }
      }
    >
      <PageToolbar
        className=""
      >
        <Toolbar
          hardFilterReset={false}
          isDisabled={false}
          t={[Function]}
          useSelectCategoryOptions={[Function]}
          useToolbarFieldClear={[Function]}
          useToolbarFieldClearAll={[Function]}
          useToolbarFieldQueries={[Function]}
        />
      </PageToolbar>
      <PageSection
        className=""
      >
        <Connect(GraphCard)
          cardTitle={
            <React.Fragment>
              t(curiosity-graph.cardHeading, {"context":"lorem"})
            </React.Fragment>
          }
          key="graph_lorem"
          productId="lorem"
          query={Object {}}
          viewId="viewIpsum"
        >
          <ToolbarFieldGranularity
            isFilter={false}
            options={
              Array [
                Object {
                  "selected": false,
                  "title": "t(curiosity-toolbar.granularity, {\\"context\\":\\"Daily\\"})",
                  "value": "Daily",
                },
                Object {
                  "selected": false,
                  "title": "t(curiosity-toolbar.granularity, {\\"context\\":\\"Weekly\\"})",
                  "value": "Weekly",
                },
                Object {
                  "selected": false,
                  "title": "t(curiosity-toolbar.granularity, {\\"context\\":\\"Monthly\\"})",
                  "value": "Monthly",
                },
                Object {
                  "selected": false,
                  "title": "t(curiosity-toolbar.granularity, {\\"context\\":\\"Quarterly\\"})",
                  "value": "Quarterly",
                },
              ]
            }
            t={[Function]}
            useOnSelect={[Function]}
            useProductGraphTallyQuery={[Function]}
          />
        </Connect(GraphCard)>
      </PageSection>
      <PageSection
        className=""
      >
        <Connect(InventoryTabs)
          key="inventory_lorem"
          productId="lorem"
        >
          <InventoryTab
            active={false}
            key="inventory_hosts_lorem"
            title="t(curiosity-inventory.tabHosts, {\\"context\\":\\"noInstances_lorem\\"})"
          >
            <Connect(InventoryList)
              key="inv_lorem"
              productId="lorem"
              query={Object {}}
              viewId="viewIpsum"
            />
          </InventoryTab>
        </Connect(InventoryTabs)>
      </PageSection>
    </ContextProvider>
  </PageColumns>
</PageLayout>
`;

exports[`ProductView Component should render nothing if path and product parameters are empty: empty 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    includeTour={false}
    productLabel={null}
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions"})
  </PageHeader>
  <PageMessages
    className=""
  >
    <BannerMessages
      messages={
        Array [
          Object {
            "id": "cloudigradeMismatch",
            "message": "t(curiosity-banner.dataMismatchMessage, {\\"context\\":\\"cloudigradeMismatch\\",\\"appName\\":\\"Subscriptions\\"}, [object Object])",
            "title": "t(curiosity-banner.dataMismatchTitle)",
          },
        ]
      }
      useAppMessages={[Function]}
      useRouteDetail={[Function]}
    />
  </PageMessages>
  <PageColumns
    className=""
  />
</PageLayout>
`;
