// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProductView Component should allow custom inventory displays via config: custom tabs, subscriptions table 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    productLabel="lorem ipsum product label"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum product label"})
  </PageHeader>
  <PageColumns
    className=""
  >
    <ContextProvider
      key="product_lorem"
      value={
        {
          "initialSubscriptionsInventoryFilters": [],
          "lorem": "ipsum",
          "productId": "lorem",
          "viewId": "viewIpsum",
        }
      }
    >
      <PageMessages
        className=""
      >
        <BannerMessages
          messages={
            [
              {
                "id": "cloudigradeMismatch",
                "message": "t(curiosity-banner.dataMismatchMessage, {"context":"cloudigradeMismatch","appName":"Subscriptions"}, [object Object])",
                "title": "t(curiosity-banner.dataMismatchTitle)",
              },
            ]
          }
          useGetAppMessages={[Function]}
        />
      </PageMessages>
      <PageToolbar
        className=""
      >
        <Toolbar
          hardFilterReset={false}
          isDisabled={false}
          t={[Function]}
          useProductToolbarQuery={[Function]}
          useSelectCategoryOptions={[Function]}
          useToolbarFieldClear={[Function]}
          useToolbarFieldClearAll={[Function]}
          useToolbarSecondaryFields={[Function]}
        />
      </PageToolbar>
      <PageSection
        className=""
      >
        <GraphCard
          isDisabled={false}
          useParseFiltersSettings={[Function]}
        />
      </PageSection>
      <PageSection
        className=""
      >
        <Connect(InventoryTabs)
          isDisabled={false}
          key="inventory_lorem"
          productId="lorem"
        >
          <InventoryTab
            active={false}
            key="inventory_subs_lorem"
            title="t(curiosity-inventory.tabSubscriptions, {"context":"lorem"})"
          >
            <InventoryCardSubscriptions
              isDisabled={false}
              useGetInventory={[Function]}
              useOnColumnSort={[Function]}
              useOnPage={[Function]}
              useProductInventoryConfig={[Function]}
              useProductInventoryQuery={[Function]}
            />
          </InventoryTab>
        </Connect(InventoryTabs)>
      </PageSection>
    </ContextProvider>
  </PageColumns>
</PageLayout>
`;

exports[`ProductView Component should allow custom product views via props: custom graphCard, descriptions 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    productLabel="lorem ipsum product label"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum product label"})
  </PageHeader>
  <PageColumns
    className=""
  >
    <ContextProvider
      key="product_lorem"
      value={
        {
          "lorem": "ipsum",
          "productId": "lorem",
          "viewId": "viewIpsum",
        }
      }
    >
      <PageMessages
        className=""
      >
        <BannerMessages
          messages={
            [
              {
                "id": "cloudigradeMismatch",
                "message": "t(curiosity-banner.dataMismatchMessage, {"context":"cloudigradeMismatch","appName":"Subscriptions"}, [object Object])",
                "title": "t(curiosity-banner.dataMismatchTitle)",
              },
            ]
          }
          useGetAppMessages={[Function]}
        />
      </PageMessages>
      <PageToolbar
        className=""
      >
        <Toolbar
          hardFilterReset={false}
          isDisabled={false}
          t={[Function]}
          useProductToolbarQuery={[Function]}
          useSelectCategoryOptions={[Function]}
          useToolbarFieldClear={[Function]}
          useToolbarFieldClearAll={[Function]}
          useToolbarSecondaryFields={[Function]}
        />
      </PageToolbar>
      <PageSection
        className=""
      >
        <GraphCard
          isDisabled={false}
          useParseFiltersSettings={[Function]}
        />
      </PageSection>
      <PageSection
        className=""
      >
        <Connect(InventoryTabs)
          isDisabled={true}
          key="inventory_lorem"
          productId="lorem"
        />
      </PageSection>
    </ContextProvider>
  </PageColumns>
</PageLayout>
`;

exports[`ProductView Component should allow custom product views via props: custom toolbar, toolbarGraph 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    productLabel="lorem ipsum product label"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum product label"})
  </PageHeader>
  <PageColumns
    className=""
  >
    <ContextProvider
      key="product_lorem"
      value={
        {
          "lorem": "ipsum",
          "productId": "lorem",
          "viewId": "viewIpsum",
        }
      }
    >
      <PageMessages
        className=""
      >
        <BannerMessages
          messages={
            [
              {
                "id": "cloudigradeMismatch",
                "message": "t(curiosity-banner.dataMismatchMessage, {"context":"cloudigradeMismatch","appName":"Subscriptions"}, [object Object])",
                "title": "t(curiosity-banner.dataMismatchTitle)",
              },
            ]
          }
          useGetAppMessages={[Function]}
        />
      </PageMessages>
      <PageToolbar
        className=""
      >
        <Toolbar
          hardFilterReset={false}
          isDisabled={false}
          t={[Function]}
          useProductToolbarQuery={[Function]}
          useSelectCategoryOptions={[Function]}
          useToolbarFieldClear={[Function]}
          useToolbarFieldClearAll={[Function]}
          useToolbarSecondaryFields={[Function]}
        />
      </PageToolbar>
      <PageSection
        className=""
      >
        <GraphCard
          isDisabled={false}
          useParseFiltersSettings={[Function]}
        />
      </PageSection>
      <PageSection
        className=""
      >
        <Connect(InventoryTabs)
          isDisabled={true}
          key="inventory_lorem"
          productId="lorem"
        />
      </PageSection>
    </ContextProvider>
  </PageColumns>
</PageLayout>
`;

exports[`ProductView Component should render a basic component: basic 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    productLabel="lorem ipsum product label"
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions","context":"lorem ipsum product label"})
  </PageHeader>
  <PageColumns
    className=""
  >
    <ContextProvider
      key="product_lorem"
      value={
        {
          "lorem": "ipsum",
          "productId": "lorem",
          "viewId": "viewIpsum",
        }
      }
    >
      <PageMessages
        className=""
      >
        <BannerMessages
          messages={
            [
              {
                "id": "cloudigradeMismatch",
                "message": "t(curiosity-banner.dataMismatchMessage, {"context":"cloudigradeMismatch","appName":"Subscriptions"}, [object Object])",
                "title": "t(curiosity-banner.dataMismatchTitle)",
              },
            ]
          }
          useGetAppMessages={[Function]}
        />
      </PageMessages>
      <PageToolbar
        className=""
      >
        <Toolbar
          hardFilterReset={false}
          isDisabled={false}
          t={[Function]}
          useProductToolbarQuery={[Function]}
          useSelectCategoryOptions={[Function]}
          useToolbarFieldClear={[Function]}
          useToolbarFieldClearAll={[Function]}
          useToolbarSecondaryFields={[Function]}
        />
      </PageToolbar>
      <PageSection
        className=""
      >
        <GraphCard
          isDisabled={false}
          useParseFiltersSettings={[Function]}
        />
      </PageSection>
      <PageSection
        className=""
      >
        <Connect(InventoryTabs)
          isDisabled={true}
          key="inventory_lorem"
          productId="lorem"
        />
      </PageSection>
    </ContextProvider>
  </PageColumns>
</PageLayout>
`;

exports[`ProductView Component should render nothing if path and product parameters are empty: empty 1`] = `
<PageLayout
  className=""
>
  <PageHeader
    productLabel={null}
    t={[Function]}
  >
    t(curiosity-view.title, {"appName":"Subscriptions"})
  </PageHeader>
  <PageColumns
    className=""
  />
</PageLayout>
`;

exports[`ProductView Component should use an instances inventory for rhosak: custom inventory, instances table 1`] = `
<InventoryTab
  active={false}
  key="inventory_instances_rhosak"
  title="t(curiosity-inventory.tabInstances, {"context":"rhosak"})"
>
  <InventoryCard
    cardActions={
      <CardHeaderMain>
        <ToolbarFieldDisplayName
          t={[Function]}
          useDispatch={[Function]}
          useProduct={[Function]}
          useProductInventoryHostsQuery={[Function]}
        />
      </CardHeaderMain>
    }
    isDisabled={false}
    perPageDefault={10}
    t={[Function]}
    useGetInventory={[Function]}
    useOnColumnSort={[Function]}
    useOnPage={[Function]}
    useProduct={[Function]}
    useProductInventoryConfig={[Function]}
    useProductInventoryQuery={[Function]}
    useSession={[Function]}
  />
</InventoryTab>
`;
