// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProductViewContext should apply a hook factory for retrieving api queries: query factory 1`] = `
{
  "lorem": "ipsum",
}
`;

exports[`ProductViewContext should apply a hook for retrieving product context: product context, basic 1`] = `
{
  "dolor": {
    "dolor": "sit",
  },
  "lorem": {
    "lorem": "ipsum",
  },
  "productId": "lorem",
  "viewId": "viewIpsum",
}
`;

exports[`ProductViewContext should apply hooks for retrieving specific api queries: exportQuery 1`] = `
{
  "product_id": undefined,
  "sla": "testSla",
}
`;

exports[`ProductViewContext should apply hooks for retrieving specific api queries: graphTallyQuery 1`] = `
{
  "granularity": "testGranularity",
}
`;

exports[`ProductViewContext should apply hooks for retrieving specific api queries: inventoryGuestsQuery 1`] = `
{
  "offset": "testOffset",
}
`;

exports[`ProductViewContext should apply hooks for retrieving specific api queries: inventoryHostsQuery 1`] = `
{
  "limit": "testLimit",
}
`;

exports[`ProductViewContext should apply hooks for retrieving specific api queries: inventorySubscriptionsQuery 1`] = `
{
  "sla": "testSla",
}
`;

exports[`ProductViewContext should apply hooks for retrieving specific api queries: query 1`] = `
{
  "lorem": "ipsum",
}
`;

exports[`ProductViewContext should apply hooks for retrieving specific api queries: toolbarQuery 1`] = `
{
  "granularity": "testGranularity",
  "limit": "testLimit",
  "lorem": "ipsum",
  "sla": "testSla",
}
`;

exports[`ProductViewContext should apply hooks for retrieving specific config filters and settings: productConfig 1`] = `
{
  "productGroup": "loremIpsum",
  "productId": "lorem",
  "productLabel": "labelLorem",
  "productVariants": undefined,
  "viewId": "viewIpsum",
}
`;

exports[`ProductViewContext should apply hooks for retrieving specific config filters and settings: productGraphConfig 1`] = `
{
  "filters": [
    {
      "lorem": "ipsum",
    },
  ],
  "settings": {
    "lorem": "ipsum",
  },
}
`;

exports[`ProductViewContext should apply hooks for retrieving specific config filters and settings: productInventoryGuestsConfig 1`] = `
{
  "filters": [
    {
      "sit": "dolor",
    },
  ],
  "initialQuery": {},
  "settings": {
    "sit": "dolor",
  },
}
`;

exports[`ProductViewContext should apply hooks for retrieving specific config filters and settings: productInventoryHostsConfig 1`] = `
{
  "filters": [
    {
      "dolor": "sit",
    },
  ],
  "settings": {
    "dolor": "sit",
  },
}
`;

exports[`ProductViewContext should apply hooks for retrieving specific config filters and settings: productInventorySubscriptionsConfig 1`] = `
{
  "filters": [
    {
      "sit": "amet",
    },
  ],
  "settings": {
    "sit": "amet",
  },
}
`;

exports[`ProductViewContext should apply hooks for retrieving specific config filters and settings: productToolbarConfig 1`] = `
{
  "filters": [
    {
      "ipsum": "dolor",
    },
    {
      "hello": "world",
    },
  ],
  "settings": {
    "ipsum": "dolor",
  },
}
`;

exports[`ProductViewContext should return specific properties: specific properties 1`] = `
{
  "DEFAULT_CONTEXT": [
    {},
    [Function],
  ],
  "ProductViewContext": {
    "$$typeof": Symbol(react.context),
    "Consumer": {
      "$$typeof": Symbol(react.context),
      "_context": [Circular],
    },
    "Provider": {
      "$$typeof": Symbol(react.provider),
      "_context": [Circular],
    },
    "_currentRenderer": null,
    "_currentRenderer2": null,
    "_currentValue": [
      {},
      [Function],
    ],
    "_currentValue2": [
      {},
      [Function],
    ],
    "_defaultValue": null,
    "_globalName": null,
    "_threadCount": 0,
  },
  "useGraphConfig": [Function],
  "useGraphTallyQuery": [Function],
  "useInventoryGuestsConfig": [Function],
  "useInventoryGuestsQuery": [Function],
  "useInventoryHostsConfig": [Function],
  "useInventoryHostsQuery": [Function],
  "useInventorySubscriptionsConfig": [Function],
  "useInventorySubscriptionsQuery": [Function],
  "useProduct": [Function],
  "useProductContext": [Function],
  "useProductExportQuery": [Function],
  "useQuery": [Function],
  "useQueryFactory": [Function],
  "useToolbarConfig": [Function],
  "useToolbarQuery": [Function],
}
`;
