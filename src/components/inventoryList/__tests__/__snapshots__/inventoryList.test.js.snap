// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InventoryList Component should handle expandable guests data: number of guests 1`] = `
<Table
  ariaLabel={null}
  borders={true}
  className="curiosity-inventory-list"
  columnHeaders={
    Array [
      "t(curiosity-inventory.header, [object Object])",
      "t(curiosity-inventory.header, [object Object])",
      "t(curiosity-inventory.header, [object Object])",
    ]
  }
  isHeader={true}
  rows={
    Array [
      Object {
        "cells": Array [
          "sit",
          "amet",
          1,
        ],
        "expandedContent": undefined,
      },
    ]
  }
  summary={null}
  t={[Function]}
  variant="compact"
/>
`;

exports[`InventoryList Component should handle expandable guests data: number of guests, and id 1`] = `
<Table
  ariaLabel={null}
  borders={true}
  className="curiosity-inventory-list"
  columnHeaders={
    Array [
      "t(curiosity-inventory.header, [object Object])",
      "t(curiosity-inventory.header, [object Object])",
      "t(curiosity-inventory.header, [object Object])",
      "t(curiosity-inventory.header, [object Object])",
    ]
  }
  isHeader={true}
  rows={
    Array [
      Object {
        "cells": Array [
          "sit",
          "amet",
          1,
          "loremipsum",
        ],
        "expandedContent": <UNDEFINED
          filterGuestsData={Array []}
          id="loremipsum"
          numberOfGuests={1}
          query={
            Object {
              "limit": 10,
              "offset": 0,
            }
          }
        />,
      },
    ]
  }
  summary={null}
  t={[Function]}
  variant="compact"
/>
`;

exports[`InventoryList Component should handle variations in data: filtered data 1`] = `
<Card
  className="curiosity-inventory-card"
>
  <CardHeader>
    <CardTitle>
      <Title
        headingLevel="h2"
        size="lg"
      />
    </CardTitle>
    <CardActions
      className=""
    >
      <Connect(Pagination)
        isCompact={true}
        isDisabled={false}
        itemCount={0}
        perPageDefault={10}
        productId="lorem"
        viewId="inventoryList"
      />
    </CardActions>
  </CardHeader>
  <CardBody>
    <div
      className="fadein"
    >
      <Table
        ariaLabel={null}
        borders={true}
        className="curiosity-inventory-list"
        columnHeaders={
          Array [
            "t(curiosity-inventory.header, [object Object])",
          ]
        }
        isHeader={true}
        rows={
          Array [
            Object {
              "cells": Array [
                "ipsum",
              ],
              "expandedContent": false,
            },
            Object {
              "cells": Array [
                "sit",
              ],
              "expandedContent": false,
            },
          ]
        }
        summary={null}
        t={[Function]}
        variant="compact"
      />
    </div>
  </CardBody>
  <CardFooter
    className=""
  >
    <TableToolbar
      isFooter={true}
    >
      <Connect(Pagination)
        dropDirection="up"
        isDisabled={false}
        itemCount={0}
        perPageDefault={10}
        productId="lorem"
        viewId="inventoryList"
      />
    </TableToolbar>
  </CardFooter>
</Card>
`;

exports[`InventoryList Component should handle variations in data: variable data 1`] = `
<Card
  className="curiosity-inventory-card"
>
  <CardHeader>
    <CardTitle>
      <Title
        headingLevel="h2"
        size="lg"
      />
    </CardTitle>
    <CardActions
      className=""
    >
      <Connect(Pagination)
        isCompact={true}
        isDisabled={false}
        itemCount={0}
        perPageDefault={10}
        productId="lorem"
        viewId="inventoryList"
      />
    </CardActions>
  </CardHeader>
  <CardBody>
    <div
      className="fadein"
    >
      <Table
        ariaLabel={null}
        borders={true}
        className="curiosity-inventory-list"
        columnHeaders={
          Array [
            "t(curiosity-inventory.header, [object Object])",
            "t(curiosity-inventory.header, [object Object])",
          ]
        }
        isHeader={true}
        rows={
          Array [
            Object {
              "cells": Array [
                "ipsum",
                "sit",
              ],
              "expandedContent": false,
            },
            Object {
              "cells": Array [
                "sit",
                "amet",
              ],
              "expandedContent": false,
            },
          ]
        }
        summary={null}
        t={[Function]}
        variant="compact"
      />
    </div>
  </CardBody>
  <CardFooter
    className=""
  >
    <TableToolbar
      isFooter={true}
    >
      <Connect(Pagination)
        dropDirection="up"
        isDisabled={false}
        itemCount={0}
        perPageDefault={10}
        productId="lorem"
        viewId="inventoryList"
      />
    </TableToolbar>
  </CardFooter>
</Card>
`;

exports[`InventoryList Component should render a non-connected component: non-connected 1`] = `
<Card
  className="curiosity-inventory-card"
>
  <CardHeader>
    <CardTitle>
      <Title
        headingLevel="h2"
        size="lg"
      />
    </CardTitle>
    <CardActions
      className=""
    >
      <Connect(Pagination)
        isCompact={true}
        isDisabled={false}
        itemCount={0}
        perPageDefault={10}
        productId="lorem"
        viewId="inventoryList"
      />
    </CardActions>
  </CardHeader>
  <CardBody>
    <div
      className="fadein"
    >
      <Table
        ariaLabel={null}
        borders={true}
        className="curiosity-inventory-list"
        columnHeaders={Array []}
        isHeader={true}
        rows={Array []}
        summary={null}
        t={[Function]}
        variant="compact"
      />
    </div>
  </CardBody>
  <CardFooter
    className=""
  >
    <TableToolbar
      isFooter={true}
    >
      <Connect(Pagination)
        dropDirection="up"
        isDisabled={false}
        itemCount={0}
        perPageDefault={10}
        productId="lorem"
        viewId="inventoryList"
      />
    </TableToolbar>
  </CardFooter>
</Card>
`;
