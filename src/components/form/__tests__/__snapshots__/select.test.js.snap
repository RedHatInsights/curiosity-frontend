// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select Component should allow alternate array and object options: key value object 1`] = `
[
  {
    "0": "i",
    "1": "p",
    "2": "s",
    "3": "u",
    "4": "m",
    "label": "lorem",
    "selected": true,
    "text": "lorem",
    "textContent": "lorem",
    "title": "lorem",
    "value": "ipsum",
  },
  {
    "0": "w",
    "1": "o",
    "2": "r",
    "3": "l",
    "4": "d",
    "label": "hello",
    "selected": true,
    "text": "hello",
    "textContent": "hello",
    "title": "hello",
    "value": "world",
  },
]
`;

exports[`Select Component should allow alternate array and object options: key value object 2`] = `
[
  {
    "label": "lorem",
    "selected": true,
    "text": "lorem",
    "textContent": "lorem",
    "title": "lorem",
    "value": "ipsum",
  },
  {
    "label": "hello",
    "selected": true,
    "text": "hello",
    "textContent": "hello",
    "title": "hello",
    "value": "world",
  },
]
`;

exports[`Select Component should allow alternate array and object options: string array 1`] = `
[
  {
    "label": "lorem",
    "selected": false,
    "text": "lorem",
    "textContent": "lorem",
    "title": "lorem",
    "value": "lorem",
  },
  {
    "label": "ipsum",
    "selected": true,
    "text": "ipsum",
    "textContent": "ipsum",
    "title": "ipsum",
    "value": "ipsum",
  },
  {
    "label": "hello",
    "selected": false,
    "text": "hello",
    "textContent": "hello",
    "title": "hello",
    "value": "hello",
  },
  {
    "label": "world",
    "selected": false,
    "text": "world",
    "textContent": "world",
    "title": "world",
    "value": "world",
  },
]
`;

exports[`Select Component should allow alternate array and object options: undefined options 1`] = `[]`;

exports[`Select Component should allow alternate direction and position options: direction up 1`] = `"pf-v5-c-select pf-m-top curiosity-select-pf   "`;

exports[`Select Component should allow alternate direction and position options: position right 1`] = `"pf-v5-c-select curiosity-select-pf curiosity-select-pf__position-down curiosity-select-pf__position-right "`;

exports[`Select Component should allow being disabled with missing options: no options 1`] = `
<select
  props="{
  "id": "test",
  "options": [],
  "ariaLabel": "Select option",
  "className": "",
  "direction": "down",
  "isDisabled": false,
  "isDropdownButton": false,
  "isFlipEnabled": false,
  "isInline": true,
  "isToggleText": true,
  "maxHeight": null,
  "name": null,
  "placeholder": "Select option",
  "position": "left",
  "selectedOptions": null,
  "splitButtonVariant": null,
  "toggleIcon": null,
  "variant": "single",
  "children": []
}"
>
  <div
    class="curiosity-select curiosity-select__inline"
  >
    <div
      class="pf-v5-c-select curiosity-select-pf curiosity-select-pf__position-down  "
      data-ouia-component-id="OUIA-Generated-Select-single-7"
      data-ouia-component-type="PF5/Select"
      data-ouia-safe="true"
    >
      <button
        aria-expanded="false"
        aria-haspopup="listbox"
        aria-label="Options menu"
        aria-labelledby=" pf-select-toggle-id-30"
        class="pf-v5-c-select__toggle pf-m-placeholder pf-m-disabled"
        disabled=""
        id="pf-select-toggle-id-30"
        type="button"
      >
        <div
          class="pf-v5-c-select__toggle-wrapper"
        >
          <span
            class="pf-v5-c-select__toggle-text"
          >
            Select option
          </span>
        </div>
        <span
          class="pf-v5-c-select__toggle-arrow"
        >
          <svg
            aria-hidden="true"
            class="pf-v5-svg"
            fill="currentColor"
            height="1em"
            role="img"
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
            />
          </svg>
        </span>
      </button>
    </div>
  </div>
</select>
`;

exports[`Select Component should allow being disabled with missing options: options, but disabled 1`] = `
<select
  props="{
  "id": "test",
  "options": [
    "lorem",
    "ipsum",
    "hello",
    "world"
  ],
  "ariaLabel": "Select option",
  "className": "",
  "direction": "down",
  "isDisabled": true,
  "isDropdownButton": false,
  "isFlipEnabled": false,
  "isInline": true,
  "isToggleText": true,
  "maxHeight": null,
  "name": null,
  "placeholder": "Select option",
  "position": "left",
  "selectedOptions": null,
  "splitButtonVariant": null,
  "toggleIcon": null,
  "variant": "single",
  "children": []
}"
>
  <div
    class="curiosity-select curiosity-select__inline"
  >
    <div
      class="pf-v5-c-select curiosity-select-pf curiosity-select-pf__position-down  "
      data-ouia-component-id="OUIA-Generated-Select-single-9"
      data-ouia-component-type="PF5/Select"
      data-ouia-safe="true"
    >
      <button
        aria-expanded="false"
        aria-haspopup="listbox"
        aria-label="Options menu"
        aria-labelledby=" pf-select-toggle-id-39"
        class="pf-v5-c-select__toggle pf-m-placeholder pf-m-disabled"
        disabled=""
        id="pf-select-toggle-id-39"
        type="button"
      >
        <div
          class="pf-v5-c-select__toggle-wrapper"
        >
          <span
            class="pf-v5-c-select__toggle-text"
          >
            Select option
          </span>
        </div>
        <span
          class="pf-v5-c-select__toggle-arrow"
        >
          <svg
            aria-hidden="true"
            class="pf-v5-svg"
            fill="currentColor"
            height="1em"
            role="img"
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
            />
          </svg>
        </span>
      </button>
    </div>
  </div>
</select>
`;

exports[`Select Component should allow being disabled with missing options: options, but no content 1`] = `
<select
  props="{
  "id": "test",
  "options": [],
  "ariaLabel": "Select option",
  "className": "",
  "direction": "down",
  "isDisabled": false,
  "isDropdownButton": false,
  "isFlipEnabled": false,
  "isInline": true,
  "isToggleText": true,
  "maxHeight": null,
  "name": null,
  "placeholder": "Select option",
  "position": "left",
  "selectedOptions": null,
  "splitButtonVariant": null,
  "toggleIcon": null,
  "variant": "single",
  "children": []
}"
>
  <div
    class="curiosity-select curiosity-select__inline"
  >
    <div
      class="pf-v5-c-select curiosity-select-pf curiosity-select-pf__position-down  "
      data-ouia-component-id="OUIA-Generated-Select-single-8"
      data-ouia-component-type="PF5/Select"
      data-ouia-safe="true"
    >
      <button
        aria-expanded="false"
        aria-haspopup="listbox"
        aria-label="Options menu"
        aria-labelledby=" pf-select-toggle-id-33"
        class="pf-v5-c-select__toggle pf-m-placeholder pf-m-disabled"
        disabled=""
        id="pf-select-toggle-id-33"
        type="button"
      >
        <div
          class="pf-v5-c-select__toggle-wrapper"
        >
          <span
            class="pf-v5-c-select__toggle-text"
          >
            Select option
          </span>
        </div>
        <span
          class="pf-v5-c-select__toggle-arrow"
        >
          <svg
            aria-hidden="true"
            class="pf-v5-svg"
            fill="currentColor"
            height="1em"
            role="img"
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
            />
          </svg>
        </span>
      </button>
    </div>
  </div>
</select>
`;

exports[`Select Component should allow data- props: data- attributes 1`] = `
{
  "ariaLabel": "Select option",
  "buttonVariant": undefined,
  "children": [],
  "className": "",
  "data-dolor-sit": "dolor sit",
  "data-lorem": "ipsum",
  "direction": "down",
  "id": "generatedid-",
  "isDisabled": false,
  "isDropdownButton": false,
  "isFlipEnabled": false,
  "isInline": true,
  "isToggleText": true,
  "maxHeight": null,
  "name": null,
  "onSelect": [Function],
  "onSplitButton": [Function],
  "options": [],
  "placeholder": "Select option",
  "position": "left",
  "selectedOptions": null,
  "splitButtonVariant": null,
  "toggleIcon": null,
  "variant": "single",
}
`;

exports[`Select Component should allow plain objects as values, and be able to select options based on values within the object: select when option values are objects 1`] = `
[
  {
    "label": "lorem",
    "selected": false,
    "text": "lorem",
    "textContent": "lorem",
    "title": "lorem",
    "value": {
      "dolor": "sit",
    },
  },
  {
    "label": "dolor",
    "selected": false,
    "text": "dolor",
    "textContent": "dolor",
    "title": "dolor",
    "value": {
      "lorem": "ipsum",
    },
  },
  {
    "label": "hello",
    "selected": true,
    "text": "hello",
    "textContent": "hello",
    "title": "hello",
    "value": {
      "hello": "world",
    },
  },
]
`;

exports[`Select Component should allow selected options to match value or title: value or title match 1`] = `
[
  {
    "0": "i",
    "1": "p",
    "2": "s",
    "3": "u",
    "4": "m",
    "label": "lorem",
    "selected": true,
    "text": "lorem",
    "textContent": "lorem",
    "title": "lorem",
    "value": "ipsum",
  },
  {
    "0": "w",
    "1": "o",
    "2": "r",
    "3": "l",
    "4": "d",
    "label": "hello",
    "selected": true,
    "text": "hello",
    "textContent": "hello",
    "title": "hello",
    "value": "world",
  },
  {
    "0": "s",
    "1": "e",
    "2": "t",
    "label": "dolor",
    "selected": false,
    "text": "dolor",
    "textContent": "dolor",
    "title": "dolor",
    "value": "set",
  },
]
`;

exports[`Select Component should apply patternfly dropdown props based on wrapper props: dropdown props, button variants 1`] = `
{
  "isDisabled": true,
}
`;

exports[`Select Component should apply patternfly dropdown props based on wrapper props: dropdown props, disabled 1`] = `
{
  "isDisabled": true,
}
`;

exports[`Select Component should apply patternfly dropdown props based on wrapper props: dropdown props, no options, disabled 1`] = `
{
  "isDisabled": true,
}
`;

exports[`Select Component should apply patternfly dropdown props based on wrapper props: dropdown props, options, disabled 1`] = `
{
  "isDisabled": true,
}
`;

exports[`Select Component should apply patternfly dropdown props based on wrapper props: dropdown props, placeholder 1`] = `
{
  "isDisabled": true,
}
`;

exports[`Select Component should apply patternfly select props based on wrapper props: select props, disabled 1`] = `
{
  "isDisabled": true,
}
`;

exports[`Select Component should apply patternfly select props based on wrapper props: select props, no options, disabled 1`] = `
{
  "isDisabled": true,
}
`;

exports[`Select Component should apply patternfly select props based on wrapper props: select props, options, disabled 1`] = `
{
  "isDisabled": true,
}
`;

exports[`Select Component should apply patternfly select props based on wrapper props: select props, placeholder 1`] = `
{
  "isDisabled": true,
}
`;

exports[`Select Component should disable toggle text: disabled text 1`] = `"pf-v5-c-select curiosity-select-pf__no-toggle-text curiosity-select-pf__position-down  "`;

exports[`Select Component should emulate pf dropdown: emulated dropdown 1`] = `
<select
  props="{
  "isDropdownButton": true,
  "buttonVariant": "secondary",
  "options": [
    "lorem",
    "ipsum",
    "hello",
    "world"
  ],
  "ariaLabel": "Select option",
  "className": "",
  "direction": "down",
  "id": "generatedid-",
  "isDisabled": false,
  "isFlipEnabled": false,
  "isInline": true,
  "isToggleText": true,
  "maxHeight": null,
  "name": null,
  "placeholder": "Select option",
  "position": "left",
  "selectedOptions": null,
  "splitButtonVariant": null,
  "toggleIcon": null,
  "variant": "single",
  "children": []
}"
>
  <div
    class="curiosity-select curiosity-select__inline"
  >
    <div
      class="pf-v5-c-dropdown"
      data-ouia-component-id="OUIA-Generated-Dropdown-1"
      data-ouia-component-type="PF5/Dropdown"
      data-ouia-safe="true"
      togglevariant="secondary"
    >
      <button
        aria-expanded="false"
        aria-haspopup="true"
        class="pf-v5-c-dropdown__toggle pf-m-secondary"
        data-ouia-component-id="OUIA-Generated-DropdownToggle-1"
        data-ouia-component-type="PF5/DropdownToggle"
        data-ouia-safe="true"
        id="pf-dropdown-toggle-id-1"
        type="button"
      >
        <span
          class="pf-v5-c-dropdown__toggle-text"
        >
          Select option
        </span>
        <span
          class="pf-v5-c-dropdown__toggle-icon"
        >
          <svg
            aria-hidden="true"
            class="pf-v5-svg"
            fill="currentColor"
            height="1em"
            role="img"
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
            />
          </svg>
        </span>
      </button>
    </div>
  </div>
</select>
`;

exports[`Select Component should render a basic component: basic component 1`] = `
<select
  props="{
  "id": "test",
  "options": [
    {
      "title": "lorem",
      "value": "ipsum"
    },
    {
      "title": "hello",
      "value": "world",
      "selected": true
    }
  ],
  "ariaLabel": "Select option",
  "className": "",
  "direction": "down",
  "isDisabled": false,
  "isDropdownButton": false,
  "isFlipEnabled": false,
  "isInline": true,
  "isToggleText": true,
  "maxHeight": null,
  "name": null,
  "placeholder": "Select option",
  "position": "left",
  "selectedOptions": null,
  "splitButtonVariant": null,
  "toggleIcon": null,
  "variant": "single",
  "children": []
}"
>
  <div
    class="curiosity-select curiosity-select__inline"
  >
    <div
      class="pf-v5-c-select curiosity-select-pf curiosity-select-pf__position-down  "
      data-ouia-component-id="OUIA-Generated-Select-single-1"
      data-ouia-component-type="PF5/Select"
      data-ouia-safe="true"
    >
      <button
        aria-expanded="false"
        aria-haspopup="listbox"
        aria-label="Options menu"
        aria-labelledby=" pf-select-toggle-id-1"
        class="pf-v5-c-select__toggle"
        id="pf-select-toggle-id-1"
        type="button"
      >
        <div
          class="pf-v5-c-select__toggle-wrapper"
        >
          <span
            class="pf-v5-c-select__toggle-text"
          >
            hello
          </span>
        </div>
        <span
          class="pf-v5-c-select__toggle-arrow"
        >
          <svg
            aria-hidden="true"
            class="pf-v5-svg"
            fill="currentColor"
            height="1em"
            role="img"
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
            />
          </svg>
        </span>
      </button>
    </div>
  </div>
</select>
`;

exports[`Select Component should render a checkbox select: checkbox select 1`] = `
<select
  props="{
  "id": "test",
  "options": [
    {
      "title": "lorem",
      "value": "ipsum"
    },
    {
      "title": "hello",
      "value": "world",
      "selected": true
    }
  ],
  "selectedOptions": [
    "world",
    "ipsum"
  ],
  "variant": "checkbox",
  "placeholder": "multiselect test",
  "ariaLabel": "Select option",
  "className": "",
  "direction": "down",
  "isDisabled": false,
  "isDropdownButton": false,
  "isFlipEnabled": false,
  "isInline": true,
  "isToggleText": true,
  "maxHeight": null,
  "name": null,
  "position": "left",
  "splitButtonVariant": null,
  "toggleIcon": null,
  "children": []
}"
>
  <div
    class="curiosity-select curiosity-select__inline"
  >
    <div
      class="pf-v5-c-select curiosity-select-pf curiosity-select-pf__position-down  "
      data-ouia-component-id="OUIA-Generated-Select-checkbox-1"
      data-ouia-component-type="PF5/Select"
      data-ouia-safe="true"
    >
      <button
        aria-expanded="false"
        aria-label="Options menu"
        aria-labelledby=" pf-select-toggle-id-3"
        class="pf-v5-c-select__toggle"
        id="pf-select-toggle-id-3"
        type="button"
      >
        <div
          class="pf-v5-c-select__toggle-wrapper"
        >
          <span
            class="pf-v5-c-select__toggle-text"
          >
            multiselect test
          </span>
          <div
            class="pf-v5-c-select__toggle-badge"
          >
            <span
              class="pf-v5-c-badge pf-m-read"
            >
              2
            </span>
          </div>
        </div>
        <span
          class="pf-v5-c-select__toggle-arrow"
        >
          <svg
            aria-hidden="true"
            class="pf-v5-svg"
            fill="currentColor"
            height="1em"
            role="img"
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
            />
          </svg>
        </span>
      </button>
    </div>
  </div>
</select>
`;

exports[`Select Component should render an expanded select: expanded 1`] = `
<ul
  aria-label="Select option"
  class="pf-v5-c-select__menu"
  role="listbox"
>
  <li
    class="pf-v5-c-select__menu-wrapper"
    id="bG9yZW0tbG9yZW0="
    role="presentation"
  >
    <button
      class="pf-v5-c-select__menu-item"
      data-title="lorem"
      data-value="lorem"
      role="option"
      type="button"
    >
      lorem
    </button>
  </li>
  <li
    class="pf-v5-c-select__menu-wrapper"
    id="aXBzdW0taXBzdW0="
    role="presentation"
  >
    <button
      class="pf-v5-c-select__menu-item"
      data-title="ipsum"
      data-value="ipsum"
      role="option"
      type="button"
    >
      ipsum
    </button>
  </li>
  <li
    class="pf-v5-c-select__menu-wrapper"
    id="aGVsbG8taGVsbG8="
    role="presentation"
  >
    <button
      class="pf-v5-c-select__menu-item"
      data-title="hello"
      data-value="hello"
      role="option"
      type="button"
    >
      hello
    </button>
  </li>
  <li
    class="pf-v5-c-select__menu-wrapper"
    id="d29ybGQtd29ybGQ="
    role="presentation"
  >
    <button
      class="pf-v5-c-select__menu-item"
      data-title="world"
      data-value="world"
      role="option"
      type="button"
    >
      world
    </button>
  </li>
</ul>
`;

exports[`Select Component should return an emulated onchange event, checklist variant: checklist emulated event, last item checked 1`] = `
{
  "checked": false,
  "currentTarget": {
    "checked": false,
    "id": "test",
    "name": "test",
    "options": [
      {
        "label": "lorem",
        "selected": true,
        "text": "lorem",
        "textContent": "lorem",
        "title": "lorem",
        "value": "lorem",
      },
      {
        "label": "ipsum",
        "selected": false,
        "text": "ipsum",
        "textContent": "ipsum",
        "title": "ipsum",
        "value": "ipsum",
      },
      {
        "label": "hello",
        "selected": false,
        "text": "hello",
        "textContent": "hello",
        "title": "hello",
        "value": "hello",
      },
      {
        "label": "world",
        "selected": false,
        "text": "world",
        "textContent": "world",
        "title": "world",
        "value": "world",
      },
    ],
    "selected": [
      "lorem",
    ],
    "selectedIndex": 1,
    "type": "select-multiple",
    "value": "ipsum",
  },
  "id": "test",
  "name": "test",
  "options": [
    {
      "label": "lorem",
      "selected": true,
      "text": "lorem",
      "textContent": "lorem",
      "title": "lorem",
      "value": "lorem",
    },
    {
      "label": "ipsum",
      "selected": false,
      "text": "ipsum",
      "textContent": "ipsum",
      "title": "ipsum",
      "value": "ipsum",
    },
    {
      "label": "hello",
      "selected": false,
      "text": "hello",
      "textContent": "hello",
      "title": "hello",
      "value": "hello",
    },
    {
      "label": "world",
      "selected": false,
      "text": "world",
      "textContent": "world",
      "title": "world",
      "value": "world",
    },
  ],
  "persist": [Function],
  "selected": [
    "lorem",
  ],
  "selectedIndex": 1,
  "target": {
    "checked": false,
    "id": "test",
    "name": "test",
    "options": [
      {
        "label": "lorem",
        "selected": true,
        "text": "lorem",
        "textContent": "lorem",
        "title": "lorem",
        "value": "lorem",
      },
      {
        "label": "ipsum",
        "selected": false,
        "text": "ipsum",
        "textContent": "ipsum",
        "title": "ipsum",
        "value": "ipsum",
      },
      {
        "label": "hello",
        "selected": false,
        "text": "hello",
        "textContent": "hello",
        "title": "hello",
        "value": "hello",
      },
      {
        "label": "world",
        "selected": false,
        "text": "world",
        "textContent": "world",
        "title": "world",
        "value": "world",
      },
    ],
    "selected": [
      "lorem",
    ],
    "selectedIndex": 1,
    "type": "select-multiple",
    "value": "ipsum",
  },
  "type": "select-multiple",
  "value": "ipsum",
}
`;

exports[`Select Component should return an emulated onchange event: default emulated event 1`] = `
{
  "currentTarget": {
    "id": "test",
    "name": "test",
    "options": [
      {
        "label": "lorem",
        "selected": true,
        "text": "lorem",
        "textContent": "lorem",
        "title": "lorem",
        "value": "lorem",
      },
      {
        "label": "ipsum",
        "selected": false,
        "text": "ipsum",
        "textContent": "ipsum",
        "title": "ipsum",
        "value": "ipsum",
      },
      {
        "label": "hello",
        "selected": false,
        "text": "hello",
        "textContent": "hello",
        "title": "hello",
        "value": "hello",
      },
      {
        "label": "world",
        "selected": false,
        "text": "world",
        "textContent": "world",
        "title": "world",
        "value": "world",
      },
    ],
    "selected": {
      "label": "lorem",
      "selected": true,
      "text": "lorem",
      "textContent": "lorem",
      "title": "lorem",
      "value": "lorem",
    },
    "selectedIndex": 0,
    "type": "select-one",
    "value": "lorem",
  },
  "id": "test",
  "name": "test",
  "options": [
    {
      "label": "lorem",
      "selected": true,
      "text": "lorem",
      "textContent": "lorem",
      "title": "lorem",
      "value": "lorem",
    },
    {
      "label": "ipsum",
      "selected": false,
      "text": "ipsum",
      "textContent": "ipsum",
      "title": "ipsum",
      "value": "ipsum",
    },
    {
      "label": "hello",
      "selected": false,
      "text": "hello",
      "textContent": "hello",
      "title": "hello",
      "value": "hello",
    },
    {
      "label": "world",
      "selected": false,
      "text": "world",
      "textContent": "world",
      "title": "world",
      "value": "world",
    },
  ],
  "persist": [Function],
  "selected": {
    "label": "lorem",
    "selected": true,
    "text": "lorem",
    "textContent": "lorem",
    "title": "lorem",
    "value": "lorem",
  },
  "selectedIndex": 0,
  "target": {
    "id": "test",
    "name": "test",
    "options": [
      {
        "label": "lorem",
        "selected": true,
        "text": "lorem",
        "textContent": "lorem",
        "title": "lorem",
        "value": "lorem",
      },
      {
        "label": "ipsum",
        "selected": false,
        "text": "ipsum",
        "textContent": "ipsum",
        "title": "ipsum",
        "value": "ipsum",
      },
      {
        "label": "hello",
        "selected": false,
        "text": "hello",
        "textContent": "hello",
        "title": "hello",
        "value": "hello",
      },
      {
        "label": "world",
        "selected": false,
        "text": "world",
        "textContent": "world",
        "title": "world",
        "value": "world",
      },
    ],
    "selected": {
      "label": "lorem",
      "selected": true,
      "text": "lorem",
      "textContent": "lorem",
      "title": "lorem",
      "value": "lorem",
    },
    "selectedIndex": 0,
    "type": "select-one",
    "value": "lorem",
  },
  "type": "select-one",
  "value": "lorem",
}
`;
