// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select Component should allow a alternate array and object options: key value object 1`] = `
<div
  class="pf-c-select curiosity-select "
  data-ouia-component-id="OUIA-Generated-Select-single-2"
  data-ouia-component-type="PF4/Select"
  data-ouia-safe="true"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-labelledby=" pf-select-toggle-id-11"
    class="pf-c-select__toggle"
    id="pf-select-toggle-id-11"
    type="button"
  >
    <div
      class="pf-c-select__toggle-wrapper"
    >
      <span
        class="pf-c-select__toggle-text"
      >
        lorem
      </span>
    </div>
    <span
      class="pf-c-select__toggle-arrow"
    >
      <svg
        aria-hidden="true"
        fill="currentColor"
        height="1em"
        role="img"
        style="vertical-align: -0.125em;"
        viewBox="0 0 320 512"
        width="1em"
      >
        <path
          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
        />
      </svg>
    </span>
  </button>
</div>
`;

exports[`Select Component should allow a alternate array and object options: string array 1`] = `
<div
  class="pf-c-select curiosity-select "
  data-ouia-component-id="OUIA-Generated-Select-single-2"
  data-ouia-component-type="PF4/Select"
  data-ouia-safe="true"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-labelledby=" pf-select-toggle-id-8"
    class="pf-c-select__toggle"
    id="pf-select-toggle-id-8"
    type="button"
  >
    <div
      class="pf-c-select__toggle-wrapper"
    >
      <span
        class="pf-c-select__toggle-text"
      >
        ipsum
      </span>
    </div>
    <span
      class="pf-c-select__toggle-arrow"
    >
      <svg
        aria-hidden="true"
        fill="currentColor"
        height="1em"
        role="img"
        style="vertical-align: -0.125em;"
        viewBox="0 0 320 512"
        width="1em"
      >
        <path
          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
        />
      </svg>
    </span>
  </button>
</div>
`;

exports[`Select Component should allow being disabled with missing options: no options 1`] = `
<Select
  aria-label="Select option"
  aria-labelledby=""
  chipGroupComponent={null}
  className="curiosity-select "
  clearSelectionsAriaLabel="Clear all"
  createText="Create"
  customBadgeText={null}
  customContent={null}
  direction="down"
  favorites={Array []}
  favoritesLabel="Favorites"
  hasInlineFilter={false}
  inlineFilterPlaceholderText={null}
  inputIdPrefix=""
  isCreatable={false}
  isDisabled={true}
  isGrouped={false}
  isOpen={false}
  isPlain={false}
  menuAppendTo="inline"
  noResultsFoundText="No results found"
  onClear={[Function]}
  onCreateOption={[Function]}
  onFilter={null}
  onSelect={[Function]}
  onToggle={[Function]}
  ouiaSafe={true}
  placeholderText="Select option"
  removeSelectionAriaLabel="Remove"
  selections={Array []}
  toggleAriaLabel="Options menu"
  toggleIcon={null}
  toggleId={null}
  typeAheadAriaLabel=""
  variant="single"
  width=""
/>
`;

exports[`Select Component should allow being disabled with missing options: options, but disabled 1`] = `
<Select
  aria-label="Select option"
  aria-labelledby=""
  chipGroupComponent={null}
  className="curiosity-select "
  clearSelectionsAriaLabel="Clear all"
  createText="Create"
  customBadgeText={null}
  customContent={null}
  direction="down"
  favorites={Array []}
  favoritesLabel="Favorites"
  hasInlineFilter={false}
  inlineFilterPlaceholderText={null}
  inputIdPrefix=""
  isCreatable={false}
  isDisabled={true}
  isGrouped={false}
  isOpen={false}
  isPlain={false}
  menuAppendTo="inline"
  noResultsFoundText="No results found"
  onClear={[Function]}
  onCreateOption={[Function]}
  onFilter={null}
  onSelect={[Function]}
  onToggle={[Function]}
  ouiaSafe={true}
  placeholderText="Select option"
  removeSelectionAriaLabel="Remove"
  selections={Array []}
  toggleAriaLabel="Options menu"
  toggleIcon={null}
  toggleId={null}
  typeAheadAriaLabel=""
  variant="single"
  width=""
>
  <SelectOption
    className=""
    component="button"
    data-title="lorem"
    data-value="lorem"
    id="bG9yZW0tbG9yZW0="
    index={0}
    inputId=""
    isChecked={false}
    isDisabled={false}
    isFavorite={null}
    isNoResultsOption={false}
    isPlaceholder={false}
    isSelected={false}
    key="bG9yZW0tbG9yZW0="
    keyHandler={[Function]}
    onClick={[Function]}
    sendRef={[Function]}
    value="lorem"
  />
  <SelectOption
    className=""
    component="button"
    data-title="ipsum"
    data-value="ipsum"
    id="aXBzdW0taXBzdW0="
    index={0}
    inputId=""
    isChecked={false}
    isDisabled={false}
    isFavorite={null}
    isNoResultsOption={false}
    isPlaceholder={false}
    isSelected={false}
    key="aXBzdW0taXBzdW0="
    keyHandler={[Function]}
    onClick={[Function]}
    sendRef={[Function]}
    value="ipsum"
  />
  <SelectOption
    className=""
    component="button"
    data-title="hello"
    data-value="hello"
    id="aGVsbG8taGVsbG8="
    index={0}
    inputId=""
    isChecked={false}
    isDisabled={false}
    isFavorite={null}
    isNoResultsOption={false}
    isPlaceholder={false}
    isSelected={false}
    key="aGVsbG8taGVsbG8="
    keyHandler={[Function]}
    onClick={[Function]}
    sendRef={[Function]}
    value="hello"
  />
  <SelectOption
    className=""
    component="button"
    data-title="world"
    data-value="world"
    id="d29ybGQtd29ybGQ="
    index={0}
    inputId=""
    isChecked={false}
    isDisabled={false}
    isFavorite={null}
    isNoResultsOption={false}
    isPlaceholder={false}
    isSelected={false}
    key="d29ybGQtd29ybGQ="
    keyHandler={[Function]}
    onClick={[Function]}
    sendRef={[Function]}
    value="world"
  />
</Select>
`;

exports[`Select Component should allow being disabled with missing options: options, but no content 1`] = `
<Select
  aria-label="Select option"
  aria-labelledby=""
  chipGroupComponent={null}
  className="curiosity-select "
  clearSelectionsAriaLabel="Clear all"
  createText="Create"
  customBadgeText={null}
  customContent={null}
  direction="down"
  favorites={Array []}
  favoritesLabel="Favorites"
  hasInlineFilter={false}
  inlineFilterPlaceholderText={null}
  inputIdPrefix=""
  isCreatable={false}
  isDisabled={true}
  isGrouped={false}
  isOpen={false}
  isPlain={false}
  menuAppendTo="inline"
  noResultsFoundText="No results found"
  onClear={[Function]}
  onCreateOption={[Function]}
  onFilter={null}
  onSelect={[Function]}
  onToggle={[Function]}
  ouiaSafe={true}
  placeholderText="Select option"
  removeSelectionAriaLabel="Remove"
  selections={Array []}
  toggleAriaLabel="Options menu"
  toggleIcon={null}
  toggleId={null}
  typeAheadAriaLabel=""
  variant="single"
  width=""
/>
`;

exports[`Select Component should allow selected options to match value or title: value or title match 1`] = `
<div
  class="pf-c-select curiosity-select "
  data-ouia-component-id="OUIA-Generated-Select-checkbox-2"
  data-ouia-component-type="PF4/Select"
  data-ouia-safe="true"
>
  <button
    aria-expanded="false"
    aria-labelledby=" pf-select-toggle-id-14"
    class="pf-c-select__toggle"
    id="pf-select-toggle-id-14"
    type="button"
  >
    <div
      class="pf-c-select__toggle-wrapper"
    >
      <span
        class="pf-c-select__toggle-text"
      >
        Select option
      </span>
      <div
        class="pf-c-select__toggle-badge"
      >
        <span
          class="pf-c-badge pf-m-read"
        >
          2
        </span>
      </div>
    </div>
    <span
      class="pf-c-select__toggle-arrow"
    >
      <svg
        aria-hidden="true"
        fill="currentColor"
        height="1em"
        role="img"
        style="vertical-align: -0.125em;"
        viewBox="0 0 320 512"
        width="1em"
      >
        <path
          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
        />
      </svg>
    </span>
  </button>
</div>
`;

exports[`Select Component should disable toggle text: disabled text 1`] = `
<Select
  aria-label="Select option"
  aria-labelledby=""
  chipGroupComponent={null}
  className="curiosity-select__no-toggle-text "
  clearSelectionsAriaLabel="Clear all"
  createText="Create"
  customBadgeText={null}
  customContent={null}
  direction="down"
  favorites={Array []}
  favoritesLabel="Favorites"
  hasInlineFilter={false}
  inlineFilterPlaceholderText={null}
  inputIdPrefix=""
  isCreatable={false}
  isDisabled={false}
  isGrouped={false}
  isOpen={false}
  isPlain={false}
  menuAppendTo="inline"
  noResultsFoundText="No results found"
  onClear={[Function]}
  onCreateOption={[Function]}
  onFilter={null}
  onSelect={[Function]}
  onToggle={[Function]}
  ouiaSafe={true}
  placeholderText="Select option"
  removeSelectionAriaLabel="Remove"
  selections={Array []}
  toggleAriaLabel="Options menu"
  toggleIcon={
    <FilterIcon
      color="currentColor"
      noVerticalAlign={false}
      size="sm"
    />
  }
  toggleId={null}
  typeAheadAriaLabel=""
  variant="single"
  width=""
>
  <SelectOption
    className=""
    component="button"
    data-title="lorem"
    data-value="lorem"
    id="bG9yZW0tbG9yZW0="
    index={0}
    inputId=""
    isChecked={false}
    isDisabled={false}
    isFavorite={null}
    isNoResultsOption={false}
    isPlaceholder={false}
    isSelected={false}
    key="bG9yZW0tbG9yZW0="
    keyHandler={[Function]}
    onClick={[Function]}
    sendRef={[Function]}
    value="lorem"
  />
  <SelectOption
    className=""
    component="button"
    data-title="ipsum"
    data-value="ipsum"
    id="aXBzdW0taXBzdW0="
    index={0}
    inputId=""
    isChecked={false}
    isDisabled={false}
    isFavorite={null}
    isNoResultsOption={false}
    isPlaceholder={false}
    isSelected={false}
    key="aXBzdW0taXBzdW0="
    keyHandler={[Function]}
    onClick={[Function]}
    sendRef={[Function]}
    value="ipsum"
  />
</Select>
`;

exports[`Select Component should render a basic component: basic component 1`] = `
<div
  class="pf-c-select curiosity-select "
  data-ouia-component-id="OUIA-Generated-Select-single-1"
  data-ouia-component-type="PF4/Select"
  data-ouia-safe="true"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-labelledby=" pf-select-toggle-id-2"
    class="pf-c-select__toggle"
    id="pf-select-toggle-id-2"
    type="button"
  >
    <div
      class="pf-c-select__toggle-wrapper"
    >
      <span
        class="pf-c-select__toggle-text"
      >
        hello
      </span>
    </div>
    <span
      class="pf-c-select__toggle-arrow"
    >
      <svg
        aria-hidden="true"
        fill="currentColor"
        height="1em"
        role="img"
        style="vertical-align: -0.125em;"
        viewBox="0 0 320 512"
        width="1em"
      >
        <path
          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
        />
      </svg>
    </span>
  </button>
</div>
`;

exports[`Select Component should render a checkbox select: checkbox select 1`] = `
<div
  class="pf-c-select curiosity-select "
  data-ouia-component-id="OUIA-Generated-Select-checkbox-1"
  data-ouia-component-type="PF4/Select"
  data-ouia-safe="true"
>
  <button
    aria-expanded="false"
    aria-labelledby=" pf-select-toggle-id-5"
    class="pf-c-select__toggle"
    id="pf-select-toggle-id-5"
    type="button"
  >
    <div
      class="pf-c-select__toggle-wrapper"
    >
      <span
        class="pf-c-select__toggle-text"
      >
        multiselect test
      </span>
      <div
        class="pf-c-select__toggle-badge"
      >
        <span
          class="pf-c-badge pf-m-read"
        >
          2
        </span>
      </div>
    </div>
    <span
      class="pf-c-select__toggle-arrow"
    >
      <svg
        aria-hidden="true"
        fill="currentColor"
        height="1em"
        role="img"
        style="vertical-align: -0.125em;"
        viewBox="0 0 320 512"
        width="1em"
      >
        <path
          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
        />
      </svg>
    </span>
  </button>
</div>
`;

exports[`Select Component should render a expanded select: expanded 1`] = `
<Select
  ariaLabel="Select option"
  className=""
  id="test"
  isDisabled={false}
  isToggleText={true}
  name={null}
  onSelect={[Function]}
  options={
    Array [
      "lorem",
      "ipsum",
      "hello",
      "world",
    ]
  }
  placeholder="Select option"
  selectedOptions={null}
  toggleIcon={null}
  variant="single"
>
  <Select
    aria-label="Select option"
    aria-labelledby=""
    chipGroupComponent={null}
    className="curiosity-select "
    clearSelectionsAriaLabel="Clear all"
    createText="Create"
    customBadgeText={null}
    customContent={null}
    direction="down"
    favorites={Array []}
    favoritesLabel="Favorites"
    hasInlineFilter={false}
    inlineFilterPlaceholderText={null}
    inputIdPrefix=""
    isCreatable={false}
    isDisabled={false}
    isGrouped={false}
    isOpen={true}
    isPlain={false}
    menuAppendTo="inline"
    noResultsFoundText="No results found"
    onClear={[Function]}
    onCreateOption={[Function]}
    onFilter={null}
    onSelect={[Function]}
    onToggle={[Function]}
    ouiaSafe={true}
    placeholderText="Select option"
    removeSelectionAriaLabel="Remove"
    selections={Array []}
    toggleAriaLabel="Options menu"
    toggleIcon={null}
    toggleId={null}
    typeAheadAriaLabel=""
    variant="single"
    width=""
  >
    <GenerateId
      prefix="pf-random-id-"
    >
      <div
        className="pf-c-select pf-m-expanded curiosity-select "
        data-ouia-component-id="OUIA-Generated-Select-single-4"
        data-ouia-component-type="PF4/Select"
        data-ouia-safe={true}
      >
        <SelectToggle
          aria-label="Options menu"
          aria-labelledby=" pf-select-toggle-id-29"
          className=""
          handleTypeaheadKeys={[Function]}
          hasClearButton={false}
          id="pf-select-toggle-id-29"
          isActive={false}
          isDisabled={false}
          isOpen={true}
          isPlain={false}
          menuRef={
            Object {
              "current": <ul
                aria-label="Select option"
                class="pf-c-select__menu"
                role="listbox"
              >
                <li
                  class="pf-c-select__menu-wrapper"
                  id="bG9yZW0tbG9yZW0="
                  role="presentation"
                >
                  <button
                    class="pf-c-select__menu-item"
                    data-title="lorem"
                    data-value="lorem"
                    role="option"
                    type="button"
                  >
                    lorem
                  </button>
                </li>
                <li
                  class="pf-c-select__menu-wrapper"
                  id="aXBzdW0taXBzdW0="
                  role="presentation"
                >
                  <button
                    class="pf-c-select__menu-item"
                    data-title="ipsum"
                    data-value="ipsum"
                    role="option"
                    type="button"
                  >
                    ipsum
                  </button>
                </li>
                <li
                  class="pf-c-select__menu-wrapper"
                  id="aGVsbG8taGVsbG8="
                  role="presentation"
                >
                  <button
                    class="pf-c-select__menu-item"
                    data-title="hello"
                    data-value="hello"
                    role="option"
                    type="button"
                  >
                    hello
                  </button>
                </li>
                <li
                  class="pf-c-select__menu-wrapper"
                  id="d29ybGQtd29ybGQ="
                  role="presentation"
                >
                  <button
                    class="pf-c-select__menu-item"
                    data-title="world"
                    data-value="world"
                    role="option"
                    type="button"
                  >
                    world
                  </button>
                </li>
              </ul>,
            }
          }
          onClickTypeaheadToggleButton={[Function]}
          onClose={[Function]}
          onEnter={[Function]}
          onToggle={[Function]}
          parentRef={
            Object {
              "current": <div
                class="pf-c-select pf-m-expanded curiosity-select "
                data-ouia-component-id="OUIA-Generated-Select-single-4"
                data-ouia-component-type="PF4/Select"
                data-ouia-safe="true"
              >
                <button
                  aria-expanded="true"
                  aria-haspopup="listbox"
                  aria-labelledby=" pf-select-toggle-id-29"
                  class="pf-c-select__toggle"
                  id="pf-select-toggle-id-29"
                  type="button"
                >
                  <div
                    class="pf-c-select__toggle-wrapper"
                  >
                    <span
                      class="pf-c-select__toggle-text"
                    >
                      Select option
                    </span>
                  </div>
                  <span
                    class="pf-c-select__toggle-arrow"
                  >
                    <svg
                      aria-hidden="true"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 320 512"
                      width="1em"
                    >
                      <path
                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                      />
                    </svg>
                  </span>
                </button>
                <ul
                  aria-label="Select option"
                  class="pf-c-select__menu"
                  role="listbox"
                >
                  <li
                    class="pf-c-select__menu-wrapper"
                    id="bG9yZW0tbG9yZW0="
                    role="presentation"
                  >
                    <button
                      class="pf-c-select__menu-item"
                      data-title="lorem"
                      data-value="lorem"
                      role="option"
                      type="button"
                    >
                      lorem
                    </button>
                  </li>
                  <li
                    class="pf-c-select__menu-wrapper"
                    id="aXBzdW0taXBzdW0="
                    role="presentation"
                  >
                    <button
                      class="pf-c-select__menu-item"
                      data-title="ipsum"
                      data-value="ipsum"
                      role="option"
                      type="button"
                    >
                      ipsum
                    </button>
                  </li>
                  <li
                    class="pf-c-select__menu-wrapper"
                    id="aGVsbG8taGVsbG8="
                    role="presentation"
                  >
                    <button
                      class="pf-c-select__menu-item"
                      data-title="hello"
                      data-value="hello"
                      role="option"
                      type="button"
                    >
                      hello
                    </button>
                  </li>
                  <li
                    class="pf-c-select__menu-wrapper"
                    id="d29ybGQtd29ybGQ="
                    role="presentation"
                  >
                    <button
                      class="pf-c-select__menu-item"
                      data-title="world"
                      data-value="world"
                      role="option"
                      type="button"
                    >
                      world
                    </button>
                  </li>
                </ul>
              </div>,
            }
          }
          type="button"
          variant="single"
        >
          <button
            aria-expanded={true}
            aria-haspopup="listbox"
            aria-labelledby=" pf-select-toggle-id-29"
            className="pf-c-select__toggle"
            disabled={false}
            id="pf-select-toggle-id-29"
            onClick={[Function]}
            onKeyDown={[Function]}
            type="button"
          >
            <div
              className="pf-c-select__toggle-wrapper"
            >
              <span
                className="pf-c-select__toggle-text"
              >
                Select option
              </span>
            </div>
            <span
              className="pf-c-select__toggle-arrow"
            >
              <CaretDownIcon
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              >
                <svg
                  aria-hidden={true}
                  aria-labelledby={null}
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 0 320 512"
                  width="1em"
                >
                  <path
                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                  />
                </svg>
              </CaretDownIcon>
            </span>
          </button>
        </SelectToggle>
        <ForwardRef
          aria-label="Select option"
          aria-labelledby=""
          isGrouped={false}
          keyHandler={[Function]}
          openedOnEnter={false}
          sendRef={[Function]}
        >
          <SelectMenu
            aria-label="Select option"
            aria-labelledby=""
            className=""
            hasInlineFilter={false}
            innerRef={
              Object {
                "current": <ul
                  aria-label="Select option"
                  class="pf-c-select__menu"
                  role="listbox"
                >
                  <li
                    class="pf-c-select__menu-wrapper"
                    id="bG9yZW0tbG9yZW0="
                    role="presentation"
                  >
                    <button
                      class="pf-c-select__menu-item"
                      data-title="lorem"
                      data-value="lorem"
                      role="option"
                      type="button"
                    >
                      lorem
                    </button>
                  </li>
                  <li
                    class="pf-c-select__menu-wrapper"
                    id="aXBzdW0taXBzdW0="
                    role="presentation"
                  >
                    <button
                      class="pf-c-select__menu-item"
                      data-title="ipsum"
                      data-value="ipsum"
                      role="option"
                      type="button"
                    >
                      ipsum
                    </button>
                  </li>
                  <li
                    class="pf-c-select__menu-wrapper"
                    id="aGVsbG8taGVsbG8="
                    role="presentation"
                  >
                    <button
                      class="pf-c-select__menu-item"
                      data-title="hello"
                      data-value="hello"
                      role="option"
                      type="button"
                    >
                      hello
                    </button>
                  </li>
                  <li
                    class="pf-c-select__menu-wrapper"
                    id="d29ybGQtd29ybGQ="
                    role="presentation"
                  >
                    <button
                      class="pf-c-select__menu-item"
                      data-title="world"
                      data-value="world"
                      role="option"
                      type="button"
                    >
                      world
                    </button>
                  </li>
                </ul>,
              }
            }
            isCustomContent={false}
            isExpanded={false}
            isGrouped={false}
            keyHandler={[Function]}
            maxHeight=""
            openedOnEnter={false}
            selected=""
            sendRef={[Function]}
          >
            <ul
              aria-label="Select option"
              aria-labelledby={null}
              className="pf-c-select__menu"
              role="listbox"
            >
              <SelectOption
                className=""
                component="button"
                data-title="lorem"
                data-value="lorem"
                id="bG9yZW0tbG9yZW0="
                index={0}
                inputId="pf-random-id-5-0"
                isChecked={false}
                isDisabled={false}
                isFavorite={null}
                isNoResultsOption={false}
                isPlaceholder={false}
                isSelected={false}
                key=".$bG9yZW0tbG9yZW0=0"
                keyHandler={[Function]}
                onClick={[Function]}
                sendRef={[Function]}
                value="lorem"
              >
                <li
                  className="pf-c-select__menu-wrapper"
                  id="bG9yZW0tbG9yZW0="
                  role="presentation"
                >
                  <button
                    aria-selected={null}
                    className="pf-c-select__menu-item"
                    data-title="lorem"
                    data-value="lorem"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="option"
                    type="button"
                  >
                    lorem
                  </button>
                </li>
              </SelectOption>
              <SelectOption
                className=""
                component="button"
                data-title="ipsum"
                data-value="ipsum"
                id="aXBzdW0taXBzdW0="
                index={1}
                inputId="pf-random-id-5-1"
                isChecked={false}
                isDisabled={false}
                isFavorite={null}
                isNoResultsOption={false}
                isPlaceholder={false}
                isSelected={false}
                key=".$aXBzdW0taXBzdW0=0"
                keyHandler={[Function]}
                onClick={[Function]}
                sendRef={[Function]}
                value="ipsum"
              >
                <li
                  className="pf-c-select__menu-wrapper"
                  id="aXBzdW0taXBzdW0="
                  role="presentation"
                >
                  <button
                    aria-selected={null}
                    className="pf-c-select__menu-item"
                    data-title="ipsum"
                    data-value="ipsum"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="option"
                    type="button"
                  >
                    ipsum
                  </button>
                </li>
              </SelectOption>
              <SelectOption
                className=""
                component="button"
                data-title="hello"
                data-value="hello"
                id="aGVsbG8taGVsbG8="
                index={2}
                inputId="pf-random-id-5-2"
                isChecked={false}
                isDisabled={false}
                isFavorite={null}
                isNoResultsOption={false}
                isPlaceholder={false}
                isSelected={false}
                key=".$aGVsbG8taGVsbG8=0"
                keyHandler={[Function]}
                onClick={[Function]}
                sendRef={[Function]}
                value="hello"
              >
                <li
                  className="pf-c-select__menu-wrapper"
                  id="aGVsbG8taGVsbG8="
                  role="presentation"
                >
                  <button
                    aria-selected={null}
                    className="pf-c-select__menu-item"
                    data-title="hello"
                    data-value="hello"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="option"
                    type="button"
                  >
                    hello
                  </button>
                </li>
              </SelectOption>
              <SelectOption
                className=""
                component="button"
                data-title="world"
                data-value="world"
                id="d29ybGQtd29ybGQ="
                index={3}
                inputId="pf-random-id-5-3"
                isChecked={false}
                isDisabled={false}
                isFavorite={null}
                isNoResultsOption={false}
                isPlaceholder={false}
                isSelected={false}
                key=".$d29ybGQtd29ybGQ=0"
                keyHandler={[Function]}
                onClick={[Function]}
                sendRef={[Function]}
                value="world"
              >
                <li
                  className="pf-c-select__menu-wrapper"
                  id="d29ybGQtd29ybGQ="
                  role="presentation"
                >
                  <button
                    aria-selected={null}
                    className="pf-c-select__menu-item"
                    data-title="world"
                    data-value="world"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="option"
                    type="button"
                  >
                    world
                  </button>
                </li>
              </SelectOption>
            </ul>
          </SelectMenu>
        </ForwardRef>
      </div>
    </GenerateId>
  </Select>
</Select>
`;

exports[`Select Component should return an emulated onchange event: emulated event 1`] = `
Object {
  "currentTarget": Object {
    "id": "test",
    "name": "test",
    "options": Array [
      Object {
        "label": "lorem",
        "selected": false,
        "text": "lorem",
        "textContent": "lorem",
        "title": "lorem",
        "value": "lorem",
      },
      Object {
        "label": "ipsum",
        "selected": false,
        "text": "ipsum",
        "textContent": "ipsum",
        "title": "ipsum",
        "value": "ipsum",
      },
      Object {
        "label": "hello",
        "selected": true,
        "text": "hello",
        "textContent": "hello",
        "title": "hello",
        "value": "hello",
      },
      Object {
        "label": "world",
        "selected": false,
        "text": "world",
        "textContent": "world",
        "title": "world",
        "value": "world",
      },
    ],
    "selected": Object {
      "label": "hello",
      "selected": true,
      "text": "hello",
      "textContent": "hello",
      "title": "hello",
      "value": "hello",
    },
    "selectedIndex": 2,
    "type": "select-one",
    "value": "hello",
  },
  "id": "test",
  "name": "test",
  "options": Array [
    Object {
      "label": "lorem",
      "selected": false,
      "text": "lorem",
      "textContent": "lorem",
      "title": "lorem",
      "value": "lorem",
    },
    Object {
      "label": "ipsum",
      "selected": false,
      "text": "ipsum",
      "textContent": "ipsum",
      "title": "ipsum",
      "value": "ipsum",
    },
    Object {
      "label": "hello",
      "selected": true,
      "text": "hello",
      "textContent": "hello",
      "title": "hello",
      "value": "hello",
    },
    Object {
      "label": "world",
      "selected": false,
      "text": "world",
      "textContent": "world",
      "title": "world",
      "value": "world",
    },
  ],
  "persist": [Function],
  "selected": Object {
    "label": "hello",
    "selected": true,
    "text": "hello",
    "textContent": "hello",
    "title": "hello",
    "value": "hello",
  },
  "selectedIndex": 2,
  "target": Object {
    "id": "test",
    "name": "test",
    "options": Array [
      Object {
        "label": "lorem",
        "selected": false,
        "text": "lorem",
        "textContent": "lorem",
        "title": "lorem",
        "value": "lorem",
      },
      Object {
        "label": "ipsum",
        "selected": false,
        "text": "ipsum",
        "textContent": "ipsum",
        "title": "ipsum",
        "value": "ipsum",
      },
      Object {
        "label": "hello",
        "selected": true,
        "text": "hello",
        "textContent": "hello",
        "title": "hello",
        "value": "hello",
      },
      Object {
        "label": "world",
        "selected": false,
        "text": "world",
        "textContent": "world",
        "title": "world",
        "value": "world",
      },
    ],
    "selected": Object {
      "label": "hello",
      "selected": true,
      "text": "hello",
      "textContent": "hello",
      "title": "hello",
      "value": "hello",
    },
    "selectedIndex": 2,
    "type": "select-one",
    "value": "hello",
  },
  "type": "select-one",
  "value": "hello",
}
`;

exports[`Select Component should return an emulated onchange event: emulated event 2`] = `
Object {
  "checked": true,
  "currentTarget": Object {
    "checked": true,
    "id": "test",
    "name": "test",
    "options": Array [
      Object {
        "label": "lorem",
        "selected": false,
        "text": "lorem",
        "textContent": "lorem",
        "title": "lorem",
        "value": "lorem",
      },
      Object {
        "label": "ipsum",
        "selected": false,
        "text": "ipsum",
        "textContent": "ipsum",
        "title": "ipsum",
        "value": "ipsum",
      },
      Object {
        "label": "hello",
        "selected": true,
        "text": "hello",
        "textContent": "hello",
        "title": "hello",
        "value": "hello",
      },
      Object {
        "label": "world",
        "selected": true,
        "text": "world",
        "textContent": "world",
        "title": "world",
        "value": "world",
      },
    ],
    "selected": Array [
      "hello",
      "world",
    ],
    "selectedIndex": 3,
    "type": "select-multiple",
    "value": "world",
  },
  "id": "test",
  "name": "test",
  "options": Array [
    Object {
      "label": "lorem",
      "selected": false,
      "text": "lorem",
      "textContent": "lorem",
      "title": "lorem",
      "value": "lorem",
    },
    Object {
      "label": "ipsum",
      "selected": false,
      "text": "ipsum",
      "textContent": "ipsum",
      "title": "ipsum",
      "value": "ipsum",
    },
    Object {
      "label": "hello",
      "selected": true,
      "text": "hello",
      "textContent": "hello",
      "title": "hello",
      "value": "hello",
    },
    Object {
      "label": "world",
      "selected": true,
      "text": "world",
      "textContent": "world",
      "title": "world",
      "value": "world",
    },
  ],
  "persist": [Function],
  "selected": Array [
    "hello",
    "world",
  ],
  "selectedIndex": 3,
  "target": Object {
    "checked": true,
    "id": "test",
    "name": "test",
    "options": Array [
      Object {
        "label": "lorem",
        "selected": false,
        "text": "lorem",
        "textContent": "lorem",
        "title": "lorem",
        "value": "lorem",
      },
      Object {
        "label": "ipsum",
        "selected": false,
        "text": "ipsum",
        "textContent": "ipsum",
        "title": "ipsum",
        "value": "ipsum",
      },
      Object {
        "label": "hello",
        "selected": true,
        "text": "hello",
        "textContent": "hello",
        "title": "hello",
        "value": "hello",
      },
      Object {
        "label": "world",
        "selected": true,
        "text": "world",
        "textContent": "world",
        "title": "world",
        "value": "world",
      },
    ],
    "selected": Array [
      "hello",
      "world",
    ],
    "selectedIndex": 3,
    "type": "select-multiple",
    "value": "world",
  },
  "type": "select-multiple",
  "value": "world",
}
`;
