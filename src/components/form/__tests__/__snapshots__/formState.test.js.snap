// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormState Component should clone returned values to avoid mutation by consumer: not mutated 1`] = `
Object {
  "lorem": "ipsum",
}
`;

exports[`FormState Component should do a basic validation check: basic validation 1`] = `
Object {
  "lorem": "required",
}
`;

exports[`FormState Component should do a basic validation check: initial errors 1`] = `Object {}`;

exports[`FormState Component should do a validation check on mount: errors on mount 1`] = `
Object {
  "lorem": "required test",
}
`;

exports[`FormState Component should handle basic checked values: checked input types 1`] = `
<form>
  <label>
    Ipsum
    <input
      checked=""
      name="ipsum"
      type="radio"
    />
  </label>
  <label>
    Dolor
    <input
      checked=""
      name="dolor"
      type="checkbox"
    />
  </label>
</form>
`;

exports[`FormState Component should handle custom events: multiple custom events 1`] = `
Object {
  "dolor": "sit",
  "lorem": "woot again",
}
`;

exports[`FormState Component should handle custom events: single custom event 1`] = `
Object {
  "dolor": "",
  "lorem": "woot",
}
`;

exports[`FormState Component should render a basic component: basic render 1`] = `
<form>
  <label>
    Lorem
    <input
      name="lorem"
      readonly=""
      type="text"
      value="ipsum"
    />
  </label>
</form>
`;

exports[`FormState Component should render a basic component: initial props 1`] = `
Object {
  "children": [Function],
  "onReset": [Function],
  "onSubmit": [Function],
  "resetUsingSetValues": true,
  "setValues": Object {
    "lorem": "ipsum",
  },
  "setValuesAssumeBoolIsChecked": true,
  "setValuesOnUpdate": false,
  "validate": [Function],
  "validateOnMount": false,
  "validateOnUpdate": false,
}
`;

exports[`FormState Component should render a basic component: initial state 1`] = `
Object {
  "isSubmitting": false,
  "isUpdating": false,
  "isValid": null,
  "isValidating": false,
  "submitCount": 0,
}
`;

exports[`FormState Component should update handle reset, changes, and submit events while updating state: onevent 1`] = `
Object {
  "isSubmitting": false,
  "isUpdating": false,
  "isValid": true,
  "isValidating": false,
  "submitCount": 0,
}
`;

exports[`FormState Component should update handle reset, changes, and submit events while updating state: onevent values updated 1`] = `
Object {
  "lorem": "dolor",
}
`;

exports[`FormState Component should update handle reset, changes, and submit events while updating state: onreset 1`] = `
Object {
  "isSubmitting": false,
  "isUpdating": false,
  "isValid": null,
  "isValidating": false,
  "submitCount": 0,
}
`;

exports[`FormState Component should update handle reset, changes, and submit events while updating state: onsubmit 1`] = `
Object {
  "isSubmitting": false,
  "isUpdating": false,
  "isValid": true,
  "isValidating": false,
  "submitCount": 1,
}
`;

exports[`FormState Component should update handle reset, changes, and submit events while updating state: reset values updated 1`] = `
Object {
  "lorem": "ipsum",
}
`;
