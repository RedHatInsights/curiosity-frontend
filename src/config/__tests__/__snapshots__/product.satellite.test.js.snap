// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Product Satellite config should apply graph configuration: filters 1`] = `
{
  "groupedFiltersSettings": {
    "settings": {
      "isStandalone": false,
      "metric": undefined,
      "metrics": [
        {
          "chartType": "area",
          "color": "#06c",
          "fill": "#8bc1f7",
          "id": "Sockets_physical",
          "isCapacity": false,
          "isStacked": true,
          "isStandalone": false,
          "isThreshold": false,
          "metric": "Sockets",
          "query": {
            "category": "physical",
          },
          "stroke": "#06c",
          "strokeWidth": 2,
        },
        {
          "chartType": "area",
          "color": "#009596",
          "fill": "#a2d9d9",
          "id": "Sockets_hypervisor",
          "isCapacity": false,
          "isStacked": true,
          "isStandalone": false,
          "isThreshold": false,
          "metric": "Sockets",
          "query": {
            "category": "hypervisor",
          },
          "stroke": "#009596",
          "strokeWidth": 2,
        },
        {
          "chartType": "area",
          "color": "#5752d1",
          "fill": "#b2b0ea",
          "id": "Sockets_cloud",
          "isCapacity": false,
          "isStacked": true,
          "isStandalone": false,
          "isThreshold": false,
          "metric": "Sockets",
          "query": {
            "category": "cloud",
          },
          "stroke": "#5752d1",
          "strokeWidth": 2,
        },
      ],
    },
  },
  "standaloneFiltersSettings": [],
}
`;

exports[`Product Satellite config should apply graph configuration: settings 1`] = `{}`;

exports[`Product Satellite config should apply guest inventory configuration: filtered 1`] = `
{
  "cells": [
    {
      "title": "lorem",
    },
    {
      "title": "lorem inventory id",
    },
    {
      "title": <DateFormat
        date="2022-01-01T00:00:00.000Z"
      />,
    },
  ],
  "columnHeaders": [
    {
      "title": "t(curiosity-inventory.header, {"context":"guestsDisplayName"})",
      "transforms": [],
    },
    {
      "title": "t(curiosity-inventory.header, {"context":"inventoryId"})",
      "transforms": [
        [Function],
      ],
    },
    {
      "title": "t(curiosity-inventory.header, {"context":"lastSeen"})",
      "transforms": [
        [Function],
      ],
    },
  ],
  "data": {
    "displayName": {
      "title": "t(curiosity-inventory.header, {"context":"displayName"})",
      "value": "lorem",
    },
    "inventoryId": {
      "title": "t(curiosity-inventory.header, {"context":"inventoryId"})",
      "value": "lorem inventory id",
    },
    "lastSeen": {
      "title": "t(curiosity-inventory.header, {"context":"lastSeen"})",
      "value": "2022-01-01T00:00:00.000Z",
    },
    "loremIpsum": {
      "title": "t(curiosity-inventory.header, {"context":"loremIpsum"})",
      "value": "hello world",
    },
    "subscriptionManagerId": {
      "title": "t(curiosity-inventory.header, {"context":"subscriptionManagerId"})",
      "value": "lorem subscription id",
    },
  },
}
`;

exports[`Product Satellite config should apply guest inventory configuration: filtered, authorized 1`] = `
{
  "cells": [
    {
      "title": <Button
        component="a"
        href="/insights/inventory/lorem inventory id/"
        isInline={true}
        variant="link"
      >
        lorem
      </Button>,
    },
    {
      "title": "lorem inventory id",
    },
    {
      "title": <DateFormat
        date="2022-01-01T00:00:00.000Z"
      />,
    },
  ],
  "columnHeaders": [
    {
      "title": "t(curiosity-inventory.header, {"context":"guestsDisplayName"})",
      "transforms": [],
    },
    {
      "title": "t(curiosity-inventory.header, {"context":"inventoryId"})",
      "transforms": [
        [Function],
      ],
    },
    {
      "title": "t(curiosity-inventory.header, {"context":"lastSeen"})",
      "transforms": [
        [Function],
      ],
    },
  ],
  "data": {
    "displayName": {
      "title": "t(curiosity-inventory.header, {"context":"displayName"})",
      "value": "lorem",
    },
    "inventoryId": {
      "title": "t(curiosity-inventory.header, {"context":"inventoryId"})",
      "value": "lorem inventory id",
    },
    "lastSeen": {
      "title": "t(curiosity-inventory.header, {"context":"lastSeen"})",
      "value": "2022-01-01T00:00:00.000Z",
    },
    "loremIpsum": {
      "title": "t(curiosity-inventory.header, {"context":"loremIpsum"})",
      "value": "hello world",
    },
    "subscriptionManagerId": {
      "title": "t(curiosity-inventory.header, {"context":"subscriptionManagerId"})",
      "value": "lorem subscription id",
    },
  },
}
`;

exports[`Product Satellite config should apply hosts inventory configuration: filtered 1`] = `
{
  "cells": [
    {
      "title": <React.Fragment>
        lorem
         
        t(curiosity-inventory.label, {"context":"numberOfGuests","count":3}, [object Object])
      </React.Fragment>,
    },
    {
      "title": <React.Fragment>
        t(curiosity-inventory.measurementType, {"context":null})
         
        
      </React.Fragment>,
    },
    {
      "title": 10,
    },
    {
      "title": <DateFormat
        date="2022-01-01T00:00:00.000Z"
      />,
    },
  ],
  "columnHeaders": [
    {
      "title": "t(curiosity-inventory.header, {"context":"displayName"})",
      "transforms": [],
    },
    {
      "title": "t(curiosity-inventory.header, {"context":"measurementType"})",
      "transforms": [
        [Function],
      ],
    },
    {
      "title": "t(curiosity-inventory.header, {"context":"sockets"})",
      "transforms": [
        [Function],
      ],
    },
    {
      "title": "t(curiosity-inventory.header, {"context":"lastSeen"})",
      "transforms": [
        [Function],
      ],
    },
  ],
  "data": {
    "cores": {
      "title": "t(curiosity-inventory.header, {"context":"cores"})",
      "value": 12,
    },
    "displayName": {
      "title": "t(curiosity-inventory.header, {"context":"displayName"})",
      "value": "lorem",
    },
    "hardwareType": {
      "title": "t(curiosity-inventory.header, {"context":"hardwareType"})",
      "value": "ipsum",
    },
    "inventoryId": {
      "title": "t(curiosity-inventory.header, {"context":"inventoryId"})",
      "value": "lorem inventory id",
    },
    "lastSeen": {
      "title": "t(curiosity-inventory.header, {"context":"lastSeen"})",
      "value": "2022-01-01T00:00:00.000Z",
    },
    "loremIpsum": {
      "title": "t(curiosity-inventory.header, {"context":"loremIpsum"})",
      "value": "hello world",
    },
    "measurementType": {
      "title": "t(curiosity-inventory.header, {"context":"measurementType"})",
      "value": null,
    },
    "numberOfGuests": {
      "title": "t(curiosity-inventory.header, {"context":"numberOfGuests"})",
      "value": 3,
    },
    "sockets": {
      "title": "t(curiosity-inventory.header, {"context":"sockets"})",
      "value": 10,
    },
  },
}
`;

exports[`Product Satellite config should apply hosts inventory configuration: filtered, fallback display 1`] = `
{
  "cells": [
    {
      "title": "lorem",
    },
    {
      "title": <React.Fragment>
        t(curiosity-inventory.measurementType, {"context":null})
         
        <Label
          color="purple"
        >
          t(curiosity-inventory.cloudProvider, {"context":"dolor sit"})
        </Label>
      </React.Fragment>,
    },
    {
      "title": 10,
    },
    {
      "title": "",
    },
  ],
  "columnHeaders": [
    {
      "title": "t(curiosity-inventory.header, {"context":"displayName"})",
      "transforms": [],
    },
    {
      "title": "t(curiosity-inventory.header, {"context":"measurementType"})",
      "transforms": [
        [Function],
      ],
    },
    {
      "title": "t(curiosity-inventory.header, {"context":"sockets"})",
      "transforms": [
        [Function],
      ],
    },
    {
      "title": "t(curiosity-inventory.header, {"context":"lastSeen"})",
      "transforms": [
        [Function],
      ],
    },
  ],
  "data": {
    "cloudProvider": {
      "title": "t(curiosity-inventory.header, {"context":"cloudProvider"})",
      "value": "dolor sit",
    },
    "cores": {
      "title": "t(curiosity-inventory.header, {"context":"cores"})",
      "value": 12,
    },
    "displayName": {
      "title": "t(curiosity-inventory.header, {"context":"displayName"})",
      "value": "lorem",
    },
    "hardwareType": {
      "title": "t(curiosity-inventory.header, {"context":"hardwareType"})",
      "value": "ipsum",
    },
    "inventoryId": {
      "title": "t(curiosity-inventory.header, {"context":"inventoryId"})",
      "value": null,
    },
    "lastSeen": {
      "title": "t(curiosity-inventory.header, {"context":"lastSeen"})",
      "value": null,
    },
    "loremIpsum": {
      "title": "t(curiosity-inventory.header, {"context":"loremIpsum"})",
      "value": "hello world",
    },
    "measurementType": {
      "title": "t(curiosity-inventory.header, {"context":"measurementType"})",
      "value": null,
    },
    "numberOfGuests": {
      "title": "t(curiosity-inventory.header, {"context":"numberOfGuests"})",
      "value": 3,
    },
    "sockets": {
      "title": "t(curiosity-inventory.header, {"context":"sockets"})",
      "value": 10,
    },
  },
}
`;
