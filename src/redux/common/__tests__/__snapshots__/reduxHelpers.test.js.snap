// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReduxHelpers should automate creating general promise action reducers: generatedPromiseActionReducer basic updated state 1`] = `
Object {
  "cancelledState": Object {
    "cancelled": true,
    "date": null,
    "error": false,
    "errorMessage": "",
    "fulfilled": false,
    "meta": Object {},
    "metaData": undefined,
    "metaId": undefined,
    "metaQuery": undefined,
    "pending": false,
  },
  "fulfilledState": Object {
    "data": Object {
      "dolor": "sit",
      "lorem": "ipsum",
    },
    "date": "Tue, 11 Feb 2020 15:27:16 GMT",
    "error": false,
    "errorMessage": "",
    "fulfilled": true,
    "meta": Object {},
    "metaData": undefined,
    "metaId": undefined,
    "metaQuery": undefined,
    "pending": false,
    "status": 200,
  },
  "pendingState": Object {
    "error": false,
    "errorMessage": "",
    "fulfilled": false,
    "meta": Object {},
    "metaData": undefined,
    "metaId": undefined,
    "metaQuery": undefined,
    "pending": true,
  },
  "rejectedState": Object {
    "error": true,
    "errorMessage": "Request failed with status code 400",
    "fulfilled": false,
    "meta": Object {},
    "metaData": undefined,
    "metaId": undefined,
    "metaQuery": undefined,
    "pending": false,
    "status": 400,
  },
}
`;

exports[`ReduxHelpers should automate creating promise action reducers with meta data: generatedPromiseActionReducer passed meta data 1`] = `
Object {
  "appliedMetaIdFulfilledState": Object {
    "test id": Object {
      "data": Object {
        "dolor": "sit",
        "lorem": "ipsum",
      },
      "date": "Tue, 11 Feb 2020 15:27:16 GMT",
      "error": false,
      "errorMessage": "",
      "fulfilled": true,
      "meta": Object {
        "test": "test property",
      },
      "metaData": "test data",
      "metaId": "test id",
      "metaQuery": Object {
        "test": "query",
      },
      "pending": false,
      "status": 200,
    },
  },
  "fulfilledState": Object {
    "data": Object {
      "dolor": "sit",
      "lorem": "ipsum",
    },
    "date": "Tue, 11 Feb 2020 15:27:16 GMT",
    "error": false,
    "errorMessage": "",
    "fulfilled": true,
    "meta": Object {
      "test": "test property",
    },
    "metaData": "test data",
    "metaId": undefined,
    "metaQuery": Object {
      "test": "query",
    },
    "pending": false,
    "status": 200,
  },
}
`;

exports[`ReduxHelpers should generate a normalized API response using a schema: array response 1`] = `
Array [
  Array [
    Object {
      "ipsum": 1,
      "sit": undefined,
    },
    Object {
      "ipsum": undefined,
      "sit": "hello world",
    },
  ],
]
`;

exports[`ReduxHelpers should generate a normalized API response using a schema: object response 1`] = `
Array [
  Array [
    Object {
      "ipsum": 1,
      "sit": undefined,
    },
  ],
]
`;

exports[`ReduxHelpers should generate a normalized API response using a schema: parameters 1`] = `
Array [
  Array [
    Object {
      "ipsum": 1,
      "sit": undefined,
    },
    Object {
      "ipsum": undefined,
      "sit": "hello world",
    },
  ],
  Array [
    Object {
      "ipsum": "custom value = 1",
      "sit": "custom value = undefined",
    },
    Object {
      "ipsum": "custom value = undefined",
      "sit": "custom value = hello world",
    },
  ],
]
`;

exports[`ReduxHelpers should generate an expected API response with an existing schema: array 1`] = `
Array [
  Object {
    "ipsum": undefined,
    "lorem": undefined,
  },
  Object {
    "hello": undefined,
    "world": undefined,
  },
]
`;

exports[`ReduxHelpers should generate an expected API response with an existing schema: object 1`] = `
Array [
  Object {
    "ipsum": undefined,
  },
  Object {
    "world": undefined,
  },
]
`;

exports[`ReduxHelpers should get a date from a service call response: ARRAY date 1`] = `"Fri, 07 Feb 2020 10:46:53 GMT"`;

exports[`ReduxHelpers should get a date from a service call response: date 1`] = `"Fri, 07 Feb 2020 10:46:53 GMT"`;

exports[`ReduxHelpers should get a date from a service call response: error response date 1`] = `"Tue, 11 Feb 2020 15:27:16 GMT"`;

exports[`ReduxHelpers should get a http status from a service call response: ARRAY mismatched status 1`] = `400`;

exports[`ReduxHelpers should get a http status from a service call response: ARRAY status 1`] = `200`;

exports[`ReduxHelpers should get a http status from a service call response: error response status 1`] = `403`;

exports[`ReduxHelpers should get a http status from a service call response: fallback status 1`] = `200`;

exports[`ReduxHelpers should get a http status from a service call response: missing status 1`] = `0`;

exports[`ReduxHelpers should get a http status from a service call response: status 1`] = `200`;

exports[`ReduxHelpers should get a message from a service call response: 3XX fallback message 1`] = `"Multiple Choices"`;

exports[`ReduxHelpers should get a message from a service call response: 4XX fallback message 1`] = `"Bad Request"`;

exports[`ReduxHelpers should get a message from a service call response: 5XX fallback message 1`] = `"Internal Server Error"`;

exports[`ReduxHelpers should get a message from a service call response: ARRAY mismatched response messages 1`] = `"Request failed with status code 400"`;

exports[`ReduxHelpers should get a message from a service call response: ARRAY response for 2XX 1`] = `"OK"`;

exports[`ReduxHelpers should get a message from a service call response: ARRAY response for 4XX 1`] = `"Request failed with status code 400"`;

exports[`ReduxHelpers should get a message from a service call response: response for 2XX 1`] = `"OK"`;

exports[`ReduxHelpers should get a message from a service call response: response for 4XX 1`] = `"Request failed with status code 400"`;

exports[`ReduxHelpers should get a message from a service call response: response payload for 4XX 1`] = `"Request failed with status code 403"`;

exports[`ReduxHelpers should get data from a service call response: ARRAY data 1`] = `
Array [
  Object {
    "dolor": "sit",
    "lorem": "ipsum",
  },
  Object {
    "hello": "world",
  },
]
`;

exports[`ReduxHelpers should get data from a service call response: data 1`] = `
Object {
  "dolor": "sit",
  "lorem": "ipsum",
}
`;

exports[`ReduxHelpers should get data from a service call response: data that is an array 1`] = `
Array [
  Object {
    "lorem": "ipsum",
  },
  Object {
    "dolor": "sit",
  },
]
`;

exports[`ReduxHelpers should get data from a service call response: error response data 1`] = `
Object {
  "dolor": "sit",
  "lorem": "ipsum",
}
`;

exports[`ReduxHelpers should have specific functions: reduxHelpers 1`] = `
Object {
  "FULFILLED_ACTION": [Function],
  "HTTP_STATUS_RANGE": [Function],
  "PENDING_ACTION": [Function],
  "REJECTED_ACTION": [Function],
  "generatedPromiseActionReducer": [Function],
  "getDataFromResults": [Function],
  "getDateFromResults": [Function],
  "getMessageFromResults": [Function],
  "getSingleResponseFromResultArray": [Function],
  "getStatusFromResults": [Function],
  "setNormalizedResponse": [Function],
  "setResponseSchemas": [Function],
  "setStateProp": [Function],
  "singlePromiseDataResponseFromArray": [Function],
}
`;

exports[`ReduxHelpers should update a state object: dont reset state object 1`] = `
Object {
  "ipsum": false,
  "lorem": true,
}
`;

exports[`ReduxHelpers should update a state object: reset state object 1`] = `
Object {
  "ipsum": true,
  "lorem": true,
}
`;
